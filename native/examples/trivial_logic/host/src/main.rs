// These constants represent the RISC-V ELF and the image ID generated by risc0-build.
// The ELF is used for proving and the ID is used for verification.
use aarm_core::{logic_instance::LogicInstance, trivial_logic::TrivialLogicWitness};
use trivial_logic::{TRIVIAL_ELF, TRIVIAL_ID};
use risc0_zkvm::{default_prover, ExecutorEnv};

fn main() {
    let input = TrivialLogicWitness::default();
    let env = ExecutorEnv::builder()
        .write(&input)
        .unwrap()
        .build()
        .unwrap();

    // Obtain the default prover.
    let prover = default_prover();

    // Proof information by proving the specified ELF binary.
    // This struct contains the receipt along with statistics about execution of the guest
    let prove_info = prover.prove(env, TRIVIAL_ELF).unwrap();

    // extract the receipt.
    let receipt = prove_info.receipt;

    let _output: LogicInstance = receipt.journal.decode().unwrap();

    // The receipt was verified at the end of proving, but the below code is an
    // example of how someone else could verify this receipt.
    receipt.verify(TRIVIAL_ID).unwrap();

    println!("TRIVIAL_ID: {:?}", TRIVIAL_ID);
}
