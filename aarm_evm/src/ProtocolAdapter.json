{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "riscZeroVerifier",
          "type": "address",
          "internalType": "contract IRiscZeroVerifier"
        },
        {
          "name": "complianceCircuitID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "commitmentTreeDepth",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "actionTreeDepth",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "containsRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "isContained",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "transaction",
          "type": "tuple",
          "internalType": "struct Transaction",
          "components": [
            {
              "name": "actions",
              "type": "tuple[]",
              "internalType": "struct Action[]",
              "components": [
                {
                  "name": "logicProofs",
                  "type": "tuple[]",
                  "internalType": "struct LogicProof[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct LogicInstance",
                      "components": [
                        {
                          "name": "tag",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "isConsumed",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "root",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "ciphertext",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "appData",
                          "type": "tuple[]",
                          "internalType": "struct ExpirableBlob[]",
                          "components": [
                            {
                              "name": "deletionCriterion",
                              "type": "uint8",
                              "internalType": "enum DeletionCriterion"
                            },
                            {
                              "name": "blob",
                              "type": "bytes",
                              "internalType": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "logicRef",
                      "type": "bytes32",
                      "internalType": "bytes32"
                    }
                  ]
                },
                {
                  "name": "complianceUnits",
                  "type": "tuple[]",
                  "internalType": "struct ComplianceUnit[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct ComplianceInstance",
                      "components": [
                        {
                          "name": "consumed",
                          "type": "tuple",
                          "internalType": "struct ConsumedRefs",
                          "components": [
                            {
                              "name": "nullifier",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "root",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "created",
                          "type": "tuple",
                          "internalType": "struct CreatedRefs",
                          "components": [
                            {
                              "name": "commitment",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "unitDelta",
                          "type": "uint256[2]",
                          "internalType": "uint256[2]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "resourceCalldataPairs",
                  "type": "tuple[]",
                  "internalType": "struct ResourceForwarderCalldataPair[]",
                  "components": [
                    {
                      "name": "carrier",
                      "type": "tuple",
                      "internalType": "struct Resource",
                      "components": [
                        {
                          "name": "logicRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "labelRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "valueRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "nullifierKeyCommitment",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "quantity",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "nonce",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "randSeed",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "ephemeral",
                          "type": "bool",
                          "internalType": "bool"
                        }
                      ]
                    },
                    {
                      "name": "call",
                      "type": "tuple",
                      "internalType": "struct ForwarderCalldata",
                      "components": [
                        {
                          "name": "untrustedForwarder",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "input",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "output",
                          "type": "bytes",
                          "internalType": "bytes"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "deltaProof",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "latestRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lookupBlob",
      "inputs": [
        {
          "name": "blobHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "blob",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "merkleProof",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "siblings",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        },
        {
          "name": "directionBits",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verify",
      "inputs": [
        {
          "name": "transaction",
          "type": "tuple",
          "internalType": "struct Transaction",
          "components": [
            {
              "name": "actions",
              "type": "tuple[]",
              "internalType": "struct Action[]",
              "components": [
                {
                  "name": "logicProofs",
                  "type": "tuple[]",
                  "internalType": "struct LogicProof[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct LogicInstance",
                      "components": [
                        {
                          "name": "tag",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "isConsumed",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "root",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "ciphertext",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "appData",
                          "type": "tuple[]",
                          "internalType": "struct ExpirableBlob[]",
                          "components": [
                            {
                              "name": "deletionCriterion",
                              "type": "uint8",
                              "internalType": "enum DeletionCriterion"
                            },
                            {
                              "name": "blob",
                              "type": "bytes",
                              "internalType": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "logicRef",
                      "type": "bytes32",
                      "internalType": "bytes32"
                    }
                  ]
                },
                {
                  "name": "complianceUnits",
                  "type": "tuple[]",
                  "internalType": "struct ComplianceUnit[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct ComplianceInstance",
                      "components": [
                        {
                          "name": "consumed",
                          "type": "tuple",
                          "internalType": "struct ConsumedRefs",
                          "components": [
                            {
                              "name": "nullifier",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "root",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "created",
                          "type": "tuple",
                          "internalType": "struct CreatedRefs",
                          "components": [
                            {
                              "name": "commitment",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "unitDelta",
                          "type": "uint256[2]",
                          "internalType": "uint256[2]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "resourceCalldataPairs",
                  "type": "tuple[]",
                  "internalType": "struct ResourceForwarderCalldataPair[]",
                  "components": [
                    {
                      "name": "carrier",
                      "type": "tuple",
                      "internalType": "struct Resource",
                      "components": [
                        {
                          "name": "logicRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "labelRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "valueRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "nullifierKeyCommitment",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "quantity",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "nonce",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "randSeed",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "ephemeral",
                          "type": "bool",
                          "internalType": "bool"
                        }
                      ]
                    },
                    {
                      "name": "call",
                      "type": "tuple",
                      "internalType": "struct ForwarderCalldata",
                      "components": [
                        {
                          "name": "untrustedForwarder",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "input",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "output",
                          "type": "bytes",
                          "internalType": "bytes"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "deltaProof",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verifyMerkleProof",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "path",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        },
        {
          "name": "directionBits",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "BlobStored",
      "inputs": [
        {
          "name": "blobHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "deletionCriterion",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum DeletionCriterion"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CommitmentAdded",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NullifierAdded",
      "inputs": [
        {
          "name": "nullifier",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RootAdded",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransactionExecuted",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "transaction",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Transaction",
          "components": [
            {
              "name": "actions",
              "type": "tuple[]",
              "internalType": "struct Action[]",
              "components": [
                {
                  "name": "logicProofs",
                  "type": "tuple[]",
                  "internalType": "struct LogicProof[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct LogicInstance",
                      "components": [
                        {
                          "name": "tag",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "isConsumed",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "root",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "ciphertext",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "appData",
                          "type": "tuple[]",
                          "internalType": "struct ExpirableBlob[]",
                          "components": [
                            {
                              "name": "deletionCriterion",
                              "type": "uint8",
                              "internalType": "enum DeletionCriterion"
                            },
                            {
                              "name": "blob",
                              "type": "bytes",
                              "internalType": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "logicRef",
                      "type": "bytes32",
                      "internalType": "bytes32"
                    }
                  ]
                },
                {
                  "name": "complianceUnits",
                  "type": "tuple[]",
                  "internalType": "struct ComplianceUnit[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct ComplianceInstance",
                      "components": [
                        {
                          "name": "consumed",
                          "type": "tuple",
                          "internalType": "struct ConsumedRefs",
                          "components": [
                            {
                              "name": "nullifier",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "root",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "created",
                          "type": "tuple",
                          "internalType": "struct CreatedRefs",
                          "components": [
                            {
                              "name": "commitment",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "unitDelta",
                          "type": "uint256[2]",
                          "internalType": "uint256[2]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "resourceCalldataPairs",
                  "type": "tuple[]",
                  "internalType": "struct ResourceForwarderCalldataPair[]",
                  "components": [
                    {
                      "name": "carrier",
                      "type": "tuple",
                      "internalType": "struct Resource",
                      "components": [
                        {
                          "name": "logicRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "labelRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "valueRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "nullifierKeyCommitment",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "quantity",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "nonce",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "randSeed",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "ephemeral",
                          "type": "bool",
                          "internalType": "bool"
                        }
                      ]
                    },
                    {
                      "name": "call",
                      "type": "tuple",
                      "internalType": "struct ForwarderCalldata",
                      "components": [
                        {
                          "name": "untrustedForwarder",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "input",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "output",
                          "type": "bytes",
                          "internalType": "bytes"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "deltaProof",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "BlobEmpty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "BlobHashMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "BlobNotFound",
      "inputs": [
        {
          "name": "blobHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierAppDataMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierCommitmentNotFound",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierKindMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierLabelMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CommitmentIndexOutOfBounds",
      "inputs": [
        {
          "name": "current",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "limit",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "CommitmentMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "DeletionCriterionNotSupported",
      "inputs": [
        {
          "name": "deletionCriterion",
          "type": "uint8",
          "internalType": "enum DeletionCriterion"
        }
      ]
    },
    {
      "type": "error",
      "name": "DeltaMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "actual",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureLength",
      "inputs": [
        {
          "name": "length",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureS",
      "inputs": [
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "EmptyCommitment",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ForwarderCallOutputMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "actual",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidCommitmentRef",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidNullifierRef",
      "inputs": [
        {
          "name": "nullifier",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidPathLength",
      "inputs": [
        {
          "name": "expected",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "actual",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidRoot",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidRootRef",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "LogicProofTagNotFound",
      "inputs": [
        {
          "name": "tag",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "LogicRefMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "NonExistentLeafIndex",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "NonExistingCommitment",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "NonExistingRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "PreExistingCommitment",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "PreExistingNullifier",
      "inputs": [
        {
          "name": "nullifier",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "PreExistingRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RootMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "TreeCapacityExceeded",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60e0806040523461016b5760808161308d803803809161001f828561016f565b83398101031261016b578051906001600160a01b038216820361016b5760208101519160ff61005c6060610055604086016101a6565b94016101a6565b9216806002557fcc1d2f838445db7aec431df9ee8a871f40e7aa5e064fc056633ef8c60fab7b06905f905b80821061010a5750505f805561009c816101b4565b156100f8575060805260c05260a052604051612e4c90816102418239608051818181611a2701528181611aa301528181611d760152611e10015260a05181611dce015260c0518181816118df0152818161190e015261193d0152f35b63db788c2b60e01b5f5260045260245ffd5b90915f60209160028252808584842001556040518381019180835260408201526040815261013960608261016f565b604051918291518091835e8101838152039060025afa156101605760015f51920190610087565b6040513d5f823e3d90fd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761019257604052565b634e487b7160e01b5f52604160045260245ffd5b519060ff8216820361016b57565b805f52600460205260405f2054155f1461023b5760035468010000000000000000811015610192576001810180600355811015610227577fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018190556003545f9182526004602052604090912055600190565b634e487b7160e01b5f52603260045260245ffd5b505f9056fe60806040526004361015610011575f80fd5b5f3560e01c806348cbdfca14610ec657806359a8928314610d195780638310d48514610ce25780639a49e7411461037d578063c235cd9e14610135578063d7b0fef1146100825763f3eeec5514610066575f80fd5b3461007e5761007c61007736610f1f565b6116b5565b005b5f80fd5b3461007e575f60031936011261007e576003545f1981018181116101085760035411156100db5760035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85a0154604051908152602090f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b3461007e57602060031936011261007e57600435600254156100db5760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace54811461035557805f52600560205260405f205490811561032a575f19820191808311610108575f548091116102fb57505f8281527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496020526040902054908082036102cd57825f906002546101eb816115c5565b915f905b8282106102195761020f8486604051928392604084526040840190610f52565b9060208301520390f35b600181166102a257815f52600160205260405f20906001810191828211610108576001925f5260205260405f20549582841b17955b80610292575060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace830154610286848761166b565b525b811c9101906101ef565b61029c848761166b565b52610288565b815f52600160205260405f20905f19810191818311610108576001925f5260205260405f205461024e565b7fc9e0e757000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b827fdbc744cd000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fff34f2b6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faac1fcc6000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461007e5761038b36610f1f565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c610cba5760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d6103de816116b5565b6103e9600954610f85565b8060095560405160208152606081016104028480610f93565b80926040602086015252608083019060808360051b8501019281925f925b82841061093e5788887fe6cf32ad35a824b023c28f7d5fd0e9018038406df7c491a244fc5752894d9539898061046f8b61045d6020880188610fe6565b90601f19858403016040860152611036565b0390a25f9061047e81806111e7565b9190505f5b82811061050d5783610494816128b3565b156104e2577f388a5f4af784e29fc791e14e90d372b6057e8379d9d5556e843545420c675dea5f80a25f7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d005b7fdb788c2b000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6105218161051b84806111e7565b9061126e565b61052b81806111e7565b90505f5b8181106107265750506040810161054681836111e7565b9290505f5b83811061055e5750505050600101610483565b6105f16105836105788361057287876111e7565b906112f1565b61010081019061123b565b5f73ffffffffffffffffffffffffffffffffffffffff6105a28361241a565b166105b060208401846115f6565b836040939293518097819582947f2dec7eb1000000000000000000000000000000000000000000000000000000008452602060048501526024840191611036565b03925af191821561071b575f9261069f575b508151602083012090604081019161062561061e84846115f6565b369161167f565b602081519101200361063c5750505060010161054b565b61069b91610649916115f6565b9190926106896040519485947fc504fada000000000000000000000000000000000000000000000000000000008652604060048701526044860191611036565b90600319848303016024850152610efa565b0390fd5b9091503d805f833e6106b18183611331565b81019060208183031261007e5780519067ffffffffffffffff821161007e570181601f8201121561007e578051906106e882611399565b926106f66040519485611331565b8284526020838301011161007e57815f9260208093018386015e83010152908a610603565b6040513d5f823e3d90fd5b6107416107378261051b86806111e7565b6020810190611285565b6020810135801515810361007e571561080757803561075f81612843565b50600654905f198201918211610108577f48baa580cd3e9c4040ffa9507f688e0d988bb8b15450fb680ce90fe52f7e544a5f80a3905b60808201916107a483826111e7565b9050155b80156107bf5750506107ba9150610f85565b61052f565b90916107d46107ce85856111e7565b906112b8565b906107e260208301836115f6565b9235600281101561007e57610800936107fa92612538565b50610f85565b91906107a8565b80975035600254905f549061081b82610f85565b5f5560018201808311610108576001841b8111610916578282945f905b80821061087a57505050815f52600560205260405f20557f0c825ce0b2f71c91fa27e49984551a39d6f4db65958d2cf59a0ce45c3948312f5f80a39690610795565b909195825f52600160205260405f20875f526020528060405f205560018716155f146108e15760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8301546001916108d591906127eb565b965b811c920190610838565b825f52600160205260405f20905f1988019088821161010857600192610910925f5260205260405f20546127eb565b966108d7565b7f494a639d000000000000000000000000000000000000000000000000000000005f5260045ffd5b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80878203018352610974868361117e565b60608201906109838180610f93565b809360608652526080840160808460051b86010193825f905b828210610c085750505050506109b56020820182610f93565b84849294036020860152808252602082019060208160051b8401019480935f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0181360301925b848110610baa5750505050505050806040610a18920190610f93565b926040818403910152828252602082019060208460051b8401019381935f927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee181360301905b838510610a81575050505050505060208060019297019301940192919390610420565b90919293949596601f1984820301875287358381121561007e5782610aff9101803583526020810135602084015260408101356040840152606081013560608401526080810135608084015260a081013560a084015260c081013560c0840152610aed60e08201611056565b151560e084015261010081019061117e565b61012061010083015280359173ffffffffffffffffffffffffffffffffffffffff831680930361007e57610b9b6020928260019561012086950152610b6a610b5f610b4c86850185610fe6565b6060610140860152610180850191611036565b926040810190610fe6565b916101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee082860301910152611036565b99019701950193929190610a5e565b90919293949597601f198482030187528835908582121561007e5760208091610bf986600195018380610bf0610be08480610fe6565b6101008852610100880191611036565b940191016111b0565b9a0197019594939291016109fc565b90919293957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888203018552610c3e878361117e565b610c59610c4b8280610fe6565b606085526060850191611036565b6020820135917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030183121561007e5783604080610ca7858560209860019a8a99038988015201611099565b930135910152980195019392019061099c565b7f3ee5aeb5000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461007e57602060031936011261007e57610d15610d01600435611432565b604051918291602083526020830190610efa565b0390f35b3461007e57608060031936011261007e5760443560043567ffffffffffffffff821161007e573660238301121561007e5781600401359167ffffffffffffffff831161007e5760248360051b82010136811161007e5760643591600254808603610e965750610d93845f52600460205260405f2054151590565b15610e6a57610da185611381565b94610daf6040519687611331565b8552602401602085015b828210610e5a57505050602435928051905f925b828410610e0d578585818103610ddf57005b7fa0d3b062000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b909192946001908183881c16155f14610e3f57610e3490610e2e888661166b565b516127eb565b955b01929190610dcd565b610e5490610e4d888661166b565b51906127eb565b95610e36565b8135815260209182019101610db9565b837ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b85907f88b3170e000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b3461007e57602060031936011261007e576020610ef06004355f52600460205260405f2054151590565b6040519015158152f35b90601f19601f602080948051918291828752018686015e5f8582860101520116010190565b602060031982011261007e576004359067ffffffffffffffff821161007e576003198260409203011261007e5760040190565b90602080835192838152019201905f5b818110610f6f5750505090565b8251845260209384019390920191600101610f62565b5f1981146101085760010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561007e57016020813591019167ffffffffffffffff821161007e578160051b3603831361007e57565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561007e57016020813591019167ffffffffffffffff821161007e57813603831361007e57565b601f8260209493601f1993818652868601375f8582860101520116010190565b3590811515820361007e57565b90813591600283101561007e576110866040916110969484526020810190610fe6565b9190928160208201520191611036565b90565b90813581526110aa60208301611056565b15156020820152604082013560408201526110ea6110df6110ce6060850185610fe6565b60a0606086015260a0850191611036565b926080810190610f93565b9290916080818303910152828152602081019260208160051b83010193835f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc182360301945b848410611142575050505050505090565b90919293949596601f1982820301835287358781121561007e57602061116d60019387839401611063565b990193019401929195949390611131565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18236030181121561007e570190565b9060a08060409380358452602081013560208501528481013585850152606081013560608501526080810135608085015201910137565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561007e570180359067ffffffffffffffff821161007e57602001918160051b3603831361007e57565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18136030182121561007e570190565b908210156100db576110969160051b81019061123b565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030182121561007e570190565b90156100db578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18136030182121561007e570190565b91908110156100db5760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee18136030182121561007e570190565b90601f601f19910116810190811067ffffffffffffffff82111761135457604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff81116113545760051b60200190565b67ffffffffffffffff811161135457601f01601f191660200190565b5f6040516113c4602082611331565b525f6040518180805e5260205f808060025afa1561071b575f5190565b90600182811c92168015611428575b60208310146113fb57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916113f0565b9061143b6113b5565b821461159d57815f52600860205260405f2060405190815f82549261145f846113e1565b9081845260208401946001811690815f146115625750600114611523575b50509161148f5f926020940385611331565b604051809185518091835e8101838152039060025afa1561071b575f516114b46113b5565b81036114e657837f632989d6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091928181036114f557505090565b7f1844c87b000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f908152602081209092505b818310611546575050810160200161148f5f61147d565b602091935080600191548385890101520191019091849261152f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686525050151560051b8201602001905061148f5f61147d565b7ff82ea8b4000000000000000000000000000000000000000000000000000000005f5260045ffd5b906115cf82611381565b6115dc6040519182611331565b828152601f196115ec8294611381565b0190602036910137565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561007e570180359067ffffffffffffffff821161007e5760200191813603831361007e57565b906116619060409396959496606084526060840191611036565b9460208201520152565b80518210156100db5760209160051b010190565b92919261168b82611399565b916116996040519384611331565b82948184528183011161007e578281602093845f960137010152565b604080516116c38282611331565b8136823760017f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b87f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179882806123fc565b50806123f4575b15612397575f928360016401000003d019835b61230b5750505050906401000003d0198092818086800980920994099009602083015281529161175c81806111e7565b90505f805b8282106122de5761177291506115c5565b905f5f5b828110611873575050505f60209184516117ab8161179d8682019487865289830190610f52565b03601f198101835282611331565b8551918291518091835e8101838152039060025afa15611869576118069273ffffffffffffffffffffffffffffffffffffffff926117fd84936117f761061e5f519260208101906115f6565b90612acb565b90969196612b05565b602082519201519080519160208301938452818301528152611829606082611331565b5190201691169080820361183b575050565b7fe6d44b4c000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b50513d5f823e3d90fd5b6118818161051b87806111e7565b86810161188e81836111e7565b9190505f5b828110612012575050506118aa60208201826111e7565b5f91505b808210611c7c5750506118c181806111e7565b90506118cc816115c5565b5f5b828110611c565750611905600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b6115c5565b905f5b600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b8110611bfb575050600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b5b60018111611b3d57508051156100db5760200151915f5b8281106119895750505050600101611776565b6119978161051b84806111e7565b6020810190858c6119a88484611285565b013503611b0057908160205f8e6119c2846119cb976115f6565b96909585611285565b908051906119f4826119e68782019588875284830190611099565b03601f198101845283611331565b51918291518091835e8101838152039060025afa15611af6575f519073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b1561007e57611a8a8e925f94845196879586957fab750e7500000000000000000000000000000000000000000000000000000000875201359160048601611647565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611aec579060019291611adc575b5001611976565b5f611ae691611331565b5f611ad5565b8b513d5f823e3d90fd5b8c513d5f823e3d90fd5b611b0c86928d92611285565b0135907f7c532e31000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f5b8160011c8110611b52575060011c61195f565b8060011b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8216820361010857611b89818561166b565b519060018101809111610108576020918d611ba55f938861166b565b519080519185830193845281830152808252611bc2606083611331565b51918291518091835e8101838152039060025afa15611bf1576001905f51611bea828661166b565b5201611b3f565b8a513d5f823e3d90fd5b600190825181105f14611c2557611c12818461166b565b51611c1d828661166b565b525b01611908565b7fcc1d2f838445db7aec431df9ee8a871f40e7aa5e064fc056633ef8c60fab7b06611c50828661166b565b52611c1f565b80611c6a61073760019361051b88806111e7565b35611c75828561166b565b52016118ce565b9098611c8b60208401846111e7565b8b92919210156100db578a60051b820135917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018136030183121561007e57602083820101968b8483010135805f5260046020528c5f205415611fe7575087355f5260076020528b5f2054611fba57608084830101355f5260056020528b5f2054611f88578b8860205f611d20868901806115f6565b939094805190611d3385830180946111b0565b60e08252611d4361010083611331565b51918291518091835e8101838152039060025afa15611f7e575f519173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b1561007e575f918f611df7905194859384937fab750e750000000000000000000000000000000000000000000000000000000085527f00000000000000000000000000000000000000000000000000000000000000009160048601611647565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611f7e57611f6e575b50611e53611e4b87806111e7565b8a35916124b9565b8c60608685010135910135808203611f40575050611e7c611e7382610f85565b9835918b61166b565b52611e97611e8a86806111e7565b60808685010135916124b9565b8b60a08584010135910135808203611f40575050611eb487610f85565b96611ec660808584010135918b61166b565b528a5192611ed48c85611331565b8391610100828201019136831161007e570160c001915b818310611f305750505090611f216001928b5192611f098d85611331565b8c368537602082519201516020825192015192612908565b602083015281529901906118ae565b8235815260209283019201611eeb565b7f18f639d8000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f611f7891611331565b5f611e3d565b8d513d5f823e3d90fd5b608084837f96539bd4000000000000000000000000000000000000000000000000000000005f5201013560045260245ffd5b877f39a940c5000000000000000000000000000000000000000000000000000000005f523560045260245ffd5b7ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6120208161057284876111e7565b6120316105788361057286896111e7565b60205f8d61203f368661243b565b908382519201519080519185830193845281830152808252612062606083611331565b51918291518091835e8101838152039060025afa15611aec575f51600460208e73ffffffffffffffffffffffffffffffffffffffff6120a08661241a565b169051928380927f033f96a40000000000000000000000000000000000000000000000000000000082525afa9081156122d4575f916122a3575b508082036122755750509061217a60205f848f956121628761179d61211f61210360609561241a565b956121506121138a8301836115f6565b939092868101906115f6565b929093865198899773ffffffffffffffffffffffffffffffffffffffff8e8a019c168c528801526080870191611036565b91601f19858403016060860152611036565b519020946121708a806111e7565b949095369061243b565b9080519060e08583019380518552868101518385015282810151606085015260608101516080850152608081015160a085015260a081015160c085015260c0810151828501520151151561010083015261010082526121db61012083611331565b51918291518091835e8101838152039060025afa15611af65761223261221c6107ce8f946107376122129161179d965f51916124b9565b60808101906111e7565b8351928391602083019560208752830190611063565b51902090808203612247575050600101611893565b7f64cc8b14000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fd3167e32000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b90506020813d82116122cc575b816122bd60209383611331565b8101031261007e57515f6120da565b3d91506122b0565b8e513d5f823e3d90fd5b6122f56122ef8361051b87806111e7565b806111e7565b9050810180911161010857600190910190611761565b61231a8482989394959861251b565b92809461236a576401000003d0199084096401000003d01903906401000003d01982116101085761235b6401000003d019612361935f950895988095612525565b9061240d565b9290918361172c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001611719565b6401000003d019915014155f611712565b9190820391821161010857565b3573ffffffffffffffffffffffffffffffffffffffff8116810361007e5790565b91908261010091031261007e57604051610100810181811067ffffffffffffffff8211176113545760405260e06124b4818395803585526020810135602086015260408101356040860152606081013560608601526080810135608086015260a081013560a086015260c081013560c086015201611056565b910152565b909291925f5b8181106124f257847f4e90c0bf000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b8461250161073783858761126e565b351461250f576001016124bf565b9161109693945061126e565b811561236a570490565b8181029291811591840414171561010857565b919060205f6040518386823780848101838152039060025afa1561071b575f51926125616113b5565b841461159d576002831091821561261a578361257e575050505090565b845f52600860205260405f20604051905f9080549061259c826113e1565b91600181169081156127b55750600114612782575b5050816020925f92039060025afa1561071b575f516125ce6113b5565b146125da575050505090565b929491939092600186146126475785857f4d511600000000000000000000000000000000000000000000000000000000005f521561261a5760045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b9193509193506001827f2266f858e35b42156890bf9a1a4dd4ac86bcaf4e1e8a1669096531ac46c9728b5f80a3815f52600860205260405f209067ffffffffffffffff81116113545761269a82546113e1565b601f811161273d575b505f601f82116001146126dc5781929394955f926126d1575b50505f198260011b9260031b1c191617905590565b013590505f806126bc565b601f19821695835f5260205f20915f5b8881106127255750836001959697981061270c575b505050811b01905590565b5f1960f88560031b161c199101351690555f8080612701565b909260206001819286860135815501940191016126ec565b825f5260205f20601f830160051c81019160208410612778575b601f0160051c01905b81811061276d57506126a3565b5f8155600101612760565b9091508190612757565b9091505f5260205f205f905b8282106127a157505081018160206125b1565b60018160209254848701520191019061278e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168552505080151502820190508160206125b1565b5f906020926040519084820192835260408201526040815261280e606082611331565b604051918291518091835e8101838152039060025afa1561071b575f5190565b80548210156100db575f5260205f2001905f90565b805f52600760205260405f2054155f146128ae576006546801000000000000000081101561135457612897612881826001859401600655600661282e565b81939154905f199060031b92831b921b19161790565b9055600654905f52600760205260405f2055600190565b505f90565b805f52600460205260405f2054155f146128ae5760035468010000000000000000811015611354576128f1612881826001859401600355600361282e565b9055600354905f52600460205260405f2055600190565b9093929091808303612ab257506401000003d01990840861292b57505f91508190565b6401000003d0198380096401000003d0195f8180808086880960040995800960030908906401000003d019918284800883038381116101085783908183800908938484039284841161010857848091800960080984038481116101085784600193818096819508900908950960020992905b8315158481612aa1575b5080612a99575b15612a3b575f938460016401000003d019835b6129e25750505050906401000003d019809281808780098092099509900990565b6129f18482999394959961251b565b92809461236a576401000003d0199084096401000003d01903906401000003d01982116101085761235b6401000003d019612a32935f950895998095612525565b929091836129c1565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b5060016129ae565b6401000003d019915014155f6129a7565b612ac493946401000003d01993612bb0565b929161299d565b8151919060418303612afb57612af49250602082015190606060408401519301515f1a90612dbd565b9192909190565b50505f9160029190565b600481101561261a5780612b17575050565b60018103612b47577ff645eedf000000000000000000000000000000000000000000000000000000005f5260045ffd5b60028103612b7b57507ffce698f7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b600314612b855750565b7fd78bce0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9492909391851580612db5575b612daa57801580612da2575b612d9a57604051608091612bdd8383611331565b82368337841561236a5784600180098083529385856001099860208401998a52604084019286845287845160010993606086019485526040519a878c01958c871067ffffffffffffffff881117611354578a80979581969482956040525190098d525190099460208b019586525190099860408901998a52519009606087019081528651885114801590612d8e575b15612d3057849283808093816040519c85612c888f9788611331565b368737518c51612c98908361240d565b90088452518551612ca9908361240d565b90089860208301998a5281808b8180808089518a5190099360408a019485528185518b5190096060909a01998a525180098851612ce6908361240d565b90088180875185519009600209612cfd908361240d565b90089c51935190519009612d118c8361240d565b90089009925190519009612d25908361240d565b900894510991929190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b50815181511415612c6c565b505050600190565b508115612bc9565b945092506001919050565b508415612bbd565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612e41579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa1561071b575f5173ffffffffffffffffffffffffffffffffffffffff811615612e3757905f905f90565b505f906001905f90565b5050505f916003919056",
    "sourceMap": "909:9476:35:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;909:9476:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;17853:72:20;1336:11:44;17853:72:20;260:66:45;1425:13:44;-1:-1:-1;1420:185:44;1440:13;;;;;;260:66:45;;-1:-1:-1;260:66:45;;6669:23:30;;;:::i;:::-;1368:24:49;1364:65;;2200:46:35;909:9476;2200:46;2256:36;;2302:44;;909:9476;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2302:44;909:9476;;;;;2256:36;909:9476;;;;;;;;;;;;;;;;1364:65:49;1401:28;;;-1:-1:-1;1401:28:49;;909:9476:35;;-1:-1:-1;1401:28:49;1455:3:44;909:9476:35;;-1:-1:-1;909:9476:35;;1336:11:44;909:9476:35;;;;;;;;260:66:45;909:9476:35;;537:16:45;;;909:9476:35;;;;;;;;;537:16:45;;;909:9476:35;537:16:45;;:::i;:::-;909:9476:35;;;;;;;;;;;;;;;530:24:45;;1336:11:44;530:24:45;;;;;909:9476:35;-1:-1:-1;530:24:45;1455:3:44;260:66:45;1425:13:44;;;530:24:45;909:9476:35;;;-1:-1:-1;909:9476:35;;;;;;-1:-1:-1;909:9476:35;;;;;;;-1:-1:-1;;909:9476:35;;;;-1:-1:-1;;;;;909:9476:35;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;909:9476:35;;;;;-1:-1:-1;909:9476:35;;;;;;;;;;;:::o;2336:406:30:-;909:9476:35;;;5006:14:30;909:9476:35;;;;;;5006:26:30;2415:321;909:9476:35;;;1369:6:49;909:9476:35;;;;;;;5006:14:30;909:9476:35;;;1369:6:49;909:9476:35;;;;;;;;;;;1369:6:49;909:9476:35;;;;;5006:14:30;909:9476:35;;;;;;260:66:45;5006:14:30;;2671:11::o;909:9476:35:-;;;;;;;5006:14:30;909:9476:35;;;;2415:321:30;2713:12;909:9476:35;2713:12:30;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c806348cbdfca14610ec657806359a8928314610d195780638310d48514610ce25780639a49e7411461037d578063c235cd9e14610135578063d7b0fef1146100825763f3eeec5514610066575f80fd5b3461007e5761007c61007736610f1f565b6116b5565b005b5f80fd5b3461007e575f60031936011261007e576003545f1981018181116101085760035411156100db5760035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85a0154604051908152602090f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b3461007e57602060031936011261007e57600435600254156100db5760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace54811461035557805f52600560205260405f205490811561032a575f19820191808311610108575f548091116102fb57505f8281527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496020526040902054908082036102cd57825f906002546101eb816115c5565b915f905b8282106102195761020f8486604051928392604084526040840190610f52565b9060208301520390f35b600181166102a257815f52600160205260405f20906001810191828211610108576001925f5260205260405f20549582841b17955b80610292575060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace830154610286848761166b565b525b811c9101906101ef565b61029c848761166b565b52610288565b815f52600160205260405f20905f19810191818311610108576001925f5260205260405f205461024e565b7fc9e0e757000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b827fdbc744cd000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fff34f2b6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faac1fcc6000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461007e5761038b36610f1f565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c610cba5760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d6103de816116b5565b6103e9600954610f85565b8060095560405160208152606081016104028480610f93565b80926040602086015252608083019060808360051b8501019281925f925b82841061093e5788887fe6cf32ad35a824b023c28f7d5fd0e9018038406df7c491a244fc5752894d9539898061046f8b61045d6020880188610fe6565b90601f19858403016040860152611036565b0390a25f9061047e81806111e7565b9190505f5b82811061050d5783610494816128b3565b156104e2577f388a5f4af784e29fc791e14e90d372b6057e8379d9d5556e843545420c675dea5f80a25f7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d005b7fdb788c2b000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6105218161051b84806111e7565b9061126e565b61052b81806111e7565b90505f5b8181106107265750506040810161054681836111e7565b9290505f5b83811061055e5750505050600101610483565b6105f16105836105788361057287876111e7565b906112f1565b61010081019061123b565b5f73ffffffffffffffffffffffffffffffffffffffff6105a28361241a565b166105b060208401846115f6565b836040939293518097819582947f2dec7eb1000000000000000000000000000000000000000000000000000000008452602060048501526024840191611036565b03925af191821561071b575f9261069f575b508151602083012090604081019161062561061e84846115f6565b369161167f565b602081519101200361063c5750505060010161054b565b61069b91610649916115f6565b9190926106896040519485947fc504fada000000000000000000000000000000000000000000000000000000008652604060048701526044860191611036565b90600319848303016024850152610efa565b0390fd5b9091503d805f833e6106b18183611331565b81019060208183031261007e5780519067ffffffffffffffff821161007e570181601f8201121561007e578051906106e882611399565b926106f66040519485611331565b8284526020838301011161007e57815f9260208093018386015e83010152908a610603565b6040513d5f823e3d90fd5b6107416107378261051b86806111e7565b6020810190611285565b6020810135801515810361007e571561080757803561075f81612843565b50600654905f198201918211610108577f48baa580cd3e9c4040ffa9507f688e0d988bb8b15450fb680ce90fe52f7e544a5f80a3905b60808201916107a483826111e7565b9050155b80156107bf5750506107ba9150610f85565b61052f565b90916107d46107ce85856111e7565b906112b8565b906107e260208301836115f6565b9235600281101561007e57610800936107fa92612538565b50610f85565b91906107a8565b80975035600254905f549061081b82610f85565b5f5560018201808311610108576001841b8111610916578282945f905b80821061087a57505050815f52600560205260405f20557f0c825ce0b2f71c91fa27e49984551a39d6f4db65958d2cf59a0ce45c3948312f5f80a39690610795565b909195825f52600160205260405f20875f526020528060405f205560018716155f146108e15760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8301546001916108d591906127eb565b965b811c920190610838565b825f52600160205260405f20905f1988019088821161010857600192610910925f5260205260405f20546127eb565b966108d7565b7f494a639d000000000000000000000000000000000000000000000000000000005f5260045ffd5b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80878203018352610974868361117e565b60608201906109838180610f93565b809360608652526080840160808460051b86010193825f905b828210610c085750505050506109b56020820182610f93565b84849294036020860152808252602082019060208160051b8401019480935f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0181360301925b848110610baa5750505050505050806040610a18920190610f93565b926040818403910152828252602082019060208460051b8401019381935f927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee181360301905b838510610a81575050505050505060208060019297019301940192919390610420565b90919293949596601f1984820301875287358381121561007e5782610aff9101803583526020810135602084015260408101356040840152606081013560608401526080810135608084015260a081013560a084015260c081013560c0840152610aed60e08201611056565b151560e084015261010081019061117e565b61012061010083015280359173ffffffffffffffffffffffffffffffffffffffff831680930361007e57610b9b6020928260019561012086950152610b6a610b5f610b4c86850185610fe6565b6060610140860152610180850191611036565b926040810190610fe6565b916101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee082860301910152611036565b99019701950193929190610a5e565b90919293949597601f198482030187528835908582121561007e5760208091610bf986600195018380610bf0610be08480610fe6565b6101008852610100880191611036565b940191016111b0565b9a0197019594939291016109fc565b90919293957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888203018552610c3e878361117e565b610c59610c4b8280610fe6565b606085526060850191611036565b6020820135917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030183121561007e5783604080610ca7858560209860019a8a99038988015201611099565b930135910152980195019392019061099c565b7f3ee5aeb5000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461007e57602060031936011261007e57610d15610d01600435611432565b604051918291602083526020830190610efa565b0390f35b3461007e57608060031936011261007e5760443560043567ffffffffffffffff821161007e573660238301121561007e5781600401359167ffffffffffffffff831161007e5760248360051b82010136811161007e5760643591600254808603610e965750610d93845f52600460205260405f2054151590565b15610e6a57610da185611381565b94610daf6040519687611331565b8552602401602085015b828210610e5a57505050602435928051905f925b828410610e0d578585818103610ddf57005b7fa0d3b062000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b909192946001908183881c16155f14610e3f57610e3490610e2e888661166b565b516127eb565b955b01929190610dcd565b610e5490610e4d888661166b565b51906127eb565b95610e36565b8135815260209182019101610db9565b837ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b85907f88b3170e000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b3461007e57602060031936011261007e576020610ef06004355f52600460205260405f2054151590565b6040519015158152f35b90601f19601f602080948051918291828752018686015e5f8582860101520116010190565b602060031982011261007e576004359067ffffffffffffffff821161007e576003198260409203011261007e5760040190565b90602080835192838152019201905f5b818110610f6f5750505090565b8251845260209384019390920191600101610f62565b5f1981146101085760010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561007e57016020813591019167ffffffffffffffff821161007e578160051b3603831361007e57565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561007e57016020813591019167ffffffffffffffff821161007e57813603831361007e57565b601f8260209493601f1993818652868601375f8582860101520116010190565b3590811515820361007e57565b90813591600283101561007e576110866040916110969484526020810190610fe6565b9190928160208201520191611036565b90565b90813581526110aa60208301611056565b15156020820152604082013560408201526110ea6110df6110ce6060850185610fe6565b60a0606086015260a0850191611036565b926080810190610f93565b9290916080818303910152828152602081019260208160051b83010193835f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc182360301945b848410611142575050505050505090565b90919293949596601f1982820301835287358781121561007e57602061116d60019387839401611063565b990193019401929195949390611131565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18236030181121561007e570190565b9060a08060409380358452602081013560208501528481013585850152606081013560608501526080810135608085015201910137565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561007e570180359067ffffffffffffffff821161007e57602001918160051b3603831361007e57565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18136030182121561007e570190565b908210156100db576110969160051b81019061123b565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030182121561007e570190565b90156100db578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18136030182121561007e570190565b91908110156100db5760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee18136030182121561007e570190565b90601f601f19910116810190811067ffffffffffffffff82111761135457604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff81116113545760051b60200190565b67ffffffffffffffff811161135457601f01601f191660200190565b5f6040516113c4602082611331565b525f6040518180805e5260205f808060025afa1561071b575f5190565b90600182811c92168015611428575b60208310146113fb57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916113f0565b9061143b6113b5565b821461159d57815f52600860205260405f2060405190815f82549261145f846113e1565b9081845260208401946001811690815f146115625750600114611523575b50509161148f5f926020940385611331565b604051809185518091835e8101838152039060025afa1561071b575f516114b46113b5565b81036114e657837f632989d6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091928181036114f557505090565b7f1844c87b000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f908152602081209092505b818310611546575050810160200161148f5f61147d565b602091935080600191548385890101520191019091849261152f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686525050151560051b8201602001905061148f5f61147d565b7ff82ea8b4000000000000000000000000000000000000000000000000000000005f5260045ffd5b906115cf82611381565b6115dc6040519182611331565b828152601f196115ec8294611381565b0190602036910137565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561007e570180359067ffffffffffffffff821161007e5760200191813603831361007e57565b906116619060409396959496606084526060840191611036565b9460208201520152565b80518210156100db5760209160051b010190565b92919261168b82611399565b916116996040519384611331565b82948184528183011161007e578281602093845f960137010152565b604080516116c38282611331565b8136823760017f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b87f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179882806123fc565b50806123f4575b15612397575f928360016401000003d019835b61230b5750505050906401000003d0198092818086800980920994099009602083015281529161175c81806111e7565b90505f805b8282106122de5761177291506115c5565b905f5f5b828110611873575050505f60209184516117ab8161179d8682019487865289830190610f52565b03601f198101835282611331565b8551918291518091835e8101838152039060025afa15611869576118069273ffffffffffffffffffffffffffffffffffffffff926117fd84936117f761061e5f519260208101906115f6565b90612acb565b90969196612b05565b602082519201519080519160208301938452818301528152611829606082611331565b5190201691169080820361183b575050565b7fe6d44b4c000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b50513d5f823e3d90fd5b6118818161051b87806111e7565b86810161188e81836111e7565b9190505f5b828110612012575050506118aa60208201826111e7565b5f91505b808210611c7c5750506118c181806111e7565b90506118cc816115c5565b5f5b828110611c565750611905600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b6115c5565b905f5b600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b8110611bfb575050600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b5b60018111611b3d57508051156100db5760200151915f5b8281106119895750505050600101611776565b6119978161051b84806111e7565b6020810190858c6119a88484611285565b013503611b0057908160205f8e6119c2846119cb976115f6565b96909585611285565b908051906119f4826119e68782019588875284830190611099565b03601f198101845283611331565b51918291518091835e8101838152039060025afa15611af6575f519073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b1561007e57611a8a8e925f94845196879586957fab750e7500000000000000000000000000000000000000000000000000000000875201359160048601611647565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611aec579060019291611adc575b5001611976565b5f611ae691611331565b5f611ad5565b8b513d5f823e3d90fd5b8c513d5f823e3d90fd5b611b0c86928d92611285565b0135907f7c532e31000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f5b8160011c8110611b52575060011c61195f565b8060011b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8216820361010857611b89818561166b565b519060018101809111610108576020918d611ba55f938861166b565b519080519185830193845281830152808252611bc2606083611331565b51918291518091835e8101838152039060025afa15611bf1576001905f51611bea828661166b565b5201611b3f565b8a513d5f823e3d90fd5b600190825181105f14611c2557611c12818461166b565b51611c1d828661166b565b525b01611908565b7fcc1d2f838445db7aec431df9ee8a871f40e7aa5e064fc056633ef8c60fab7b06611c50828661166b565b52611c1f565b80611c6a61073760019361051b88806111e7565b35611c75828561166b565b52016118ce565b9098611c8b60208401846111e7565b8b92919210156100db578a60051b820135917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018136030183121561007e57602083820101968b8483010135805f5260046020528c5f205415611fe7575087355f5260076020528b5f2054611fba57608084830101355f5260056020528b5f2054611f88578b8860205f611d20868901806115f6565b939094805190611d3385830180946111b0565b60e08252611d4361010083611331565b51918291518091835e8101838152039060025afa15611f7e575f519173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b1561007e575f918f611df7905194859384937fab750e750000000000000000000000000000000000000000000000000000000085527f00000000000000000000000000000000000000000000000000000000000000009160048601611647565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611f7e57611f6e575b50611e53611e4b87806111e7565b8a35916124b9565b8c60608685010135910135808203611f40575050611e7c611e7382610f85565b9835918b61166b565b52611e97611e8a86806111e7565b60808685010135916124b9565b8b60a08584010135910135808203611f40575050611eb487610f85565b96611ec660808584010135918b61166b565b528a5192611ed48c85611331565b8391610100828201019136831161007e570160c001915b818310611f305750505090611f216001928b5192611f098d85611331565b8c368537602082519201516020825192015192612908565b602083015281529901906118ae565b8235815260209283019201611eeb565b7f18f639d8000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f611f7891611331565b5f611e3d565b8d513d5f823e3d90fd5b608084837f96539bd4000000000000000000000000000000000000000000000000000000005f5201013560045260245ffd5b877f39a940c5000000000000000000000000000000000000000000000000000000005f523560045260245ffd5b7ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6120208161057284876111e7565b6120316105788361057286896111e7565b60205f8d61203f368661243b565b908382519201519080519185830193845281830152808252612062606083611331565b51918291518091835e8101838152039060025afa15611aec575f51600460208e73ffffffffffffffffffffffffffffffffffffffff6120a08661241a565b169051928380927f033f96a40000000000000000000000000000000000000000000000000000000082525afa9081156122d4575f916122a3575b508082036122755750509061217a60205f848f956121628761179d61211f61210360609561241a565b956121506121138a8301836115f6565b939092868101906115f6565b929093865198899773ffffffffffffffffffffffffffffffffffffffff8e8a019c168c528801526080870191611036565b91601f19858403016060860152611036565b519020946121708a806111e7565b949095369061243b565b9080519060e08583019380518552868101518385015282810151606085015260608101516080850152608081015160a085015260a081015160c085015260c0810151828501520151151561010083015261010082526121db61012083611331565b51918291518091835e8101838152039060025afa15611af65761223261221c6107ce8f946107376122129161179d965f51916124b9565b60808101906111e7565b8351928391602083019560208752830190611063565b51902090808203612247575050600101611893565b7f64cc8b14000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fd3167e32000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b90506020813d82116122cc575b816122bd60209383611331565b8101031261007e57515f6120da565b3d91506122b0565b8e513d5f823e3d90fd5b6122f56122ef8361051b87806111e7565b806111e7565b9050810180911161010857600190910190611761565b61231a8482989394959861251b565b92809461236a576401000003d0199084096401000003d01903906401000003d01982116101085761235b6401000003d019612361935f950895988095612525565b9061240d565b9290918361172c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001611719565b6401000003d019915014155f611712565b9190820391821161010857565b3573ffffffffffffffffffffffffffffffffffffffff8116810361007e5790565b91908261010091031261007e57604051610100810181811067ffffffffffffffff8211176113545760405260e06124b4818395803585526020810135602086015260408101356040860152606081013560608601526080810135608086015260a081013560a086015260c081013560c086015201611056565b910152565b909291925f5b8181106124f257847f4e90c0bf000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b8461250161073783858761126e565b351461250f576001016124bf565b9161109693945061126e565b811561236a570490565b8181029291811591840414171561010857565b919060205f6040518386823780848101838152039060025afa1561071b575f51926125616113b5565b841461159d576002831091821561261a578361257e575050505090565b845f52600860205260405f20604051905f9080549061259c826113e1565b91600181169081156127b55750600114612782575b5050816020925f92039060025afa1561071b575f516125ce6113b5565b146125da575050505090565b929491939092600186146126475785857f4d511600000000000000000000000000000000000000000000000000000000005f521561261a5760045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b9193509193506001827f2266f858e35b42156890bf9a1a4dd4ac86bcaf4e1e8a1669096531ac46c9728b5f80a3815f52600860205260405f209067ffffffffffffffff81116113545761269a82546113e1565b601f811161273d575b505f601f82116001146126dc5781929394955f926126d1575b50505f198260011b9260031b1c191617905590565b013590505f806126bc565b601f19821695835f5260205f20915f5b8881106127255750836001959697981061270c575b505050811b01905590565b5f1960f88560031b161c199101351690555f8080612701565b909260206001819286860135815501940191016126ec565b825f5260205f20601f830160051c81019160208410612778575b601f0160051c01905b81811061276d57506126a3565b5f8155600101612760565b9091508190612757565b9091505f5260205f205f905b8282106127a157505081018160206125b1565b60018160209254848701520191019061278e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168552505080151502820190508160206125b1565b5f906020926040519084820192835260408201526040815261280e606082611331565b604051918291518091835e8101838152039060025afa1561071b575f5190565b80548210156100db575f5260205f2001905f90565b805f52600760205260405f2054155f146128ae576006546801000000000000000081101561135457612897612881826001859401600655600661282e565b81939154905f199060031b92831b921b19161790565b9055600654905f52600760205260405f2055600190565b505f90565b805f52600460205260405f2054155f146128ae5760035468010000000000000000811015611354576128f1612881826001859401600355600361282e565b9055600354905f52600460205260405f2055600190565b9093929091808303612ab257506401000003d01990840861292b57505f91508190565b6401000003d0198380096401000003d0195f8180808086880960040995800960030908906401000003d019918284800883038381116101085783908183800908938484039284841161010857848091800960080984038481116101085784600193818096819508900908950960020992905b8315158481612aa1575b5080612a99575b15612a3b575f938460016401000003d019835b6129e25750505050906401000003d019809281808780098092099509900990565b6129f18482999394959961251b565b92809461236a576401000003d0199084096401000003d01903906401000003d01982116101085761235b6401000003d019612a32935f950895998095612525565b929091836129c1565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b5060016129ae565b6401000003d019915014155f6129a7565b612ac493946401000003d01993612bb0565b929161299d565b8151919060418303612afb57612af49250602082015190606060408401519301515f1a90612dbd565b9192909190565b50505f9160029190565b600481101561261a5780612b17575050565b60018103612b47577ff645eedf000000000000000000000000000000000000000000000000000000005f5260045ffd5b60028103612b7b57507ffce698f7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b600314612b855750565b7fd78bce0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9492909391851580612db5575b612daa57801580612da2575b612d9a57604051608091612bdd8383611331565b82368337841561236a5784600180098083529385856001099860208401998a52604084019286845287845160010993606086019485526040519a878c01958c871067ffffffffffffffff881117611354578a80979581969482956040525190098d525190099460208b019586525190099860408901998a52519009606087019081528651885114801590612d8e575b15612d3057849283808093816040519c85612c888f9788611331565b368737518c51612c98908361240d565b90088452518551612ca9908361240d565b90089860208301998a5281808b8180808089518a5190099360408a019485528185518b5190096060909a01998a525180098851612ce6908361240d565b90088180875185519009600209612cfd908361240d565b90089c51935190519009612d118c8361240d565b90089009925190519009612d25908361240d565b900894510991929190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b50815181511415612c6c565b505050600190565b508115612bc9565b945092506001919050565b508415612bbd565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612e41579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa1561071b575f5173ffffffffffffffffffffffffffffffffffffffff811615612e3757905f905f90565b505f906001905f90565b5050505f916003919056",
    "sourceMap": "909:9476:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:19:48;;;909:9476:35;;;;;;;4066:11;909:9476;;;:::i;:::-;4066:11;:::i;:::-;909:9476;;;;;;;;;;-1:-1:-1;;909:9476:35;;;;;5882:6:49;909:9476:35;-1:-1:-1;;909:9476:35;;;;;;;5882:6:49;909:9476:35;-1:-1:-1;909:9476:35;;;5882:6:49;909:9476:35;325:19:48;909:9476:35;;;;;;;;325:19:48;;909:9476:35;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:9476:35;;;;;;;5771:18:49;909:9476:35;;;;5771:18:49;909:9476:35;325:19:48;;909:9476:35;4335:26:49;;4331:81;;325:19:48;909:9476:35;325:19:48;4430:8:49;909:9476:35;325:19:48;909:9476:35;;325:19:48;909:9476:35;4465:10:49;;;4461:81;;-1:-1:-1;;909:9476:35;;;;;;;;;;4885:38:49;;;4881:155;;-1:-1:-1;909:9476:35;325:19:48;;;;909:9476:35;325:19:48;909:9476:35;325:19:48;;909:9476:35;;4655:23:49;;;4651:122;;4008:34;909:9476:35;;5771:18:49;909:9476:35;4450:24:44;;;:::i;:::-;4484:28;909:9476:35;4647:1114:44;4667:13;;;;;;909:9476:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;4682:3:44;909:9476:35;6631:9:44;;909:9476:35;;325:19:48;909:9476:35;325:19:48;909:9476:35;;325:19:48;909:9476:35;;325:19:48;909:9476:35;;;;;;;;;;;325:19:48;909:9476:35;325:19:48;909:9476:35;325:19:48;909:9476:35;;325:19:48;909:9476:35;;;;;4998:25:44;4781:447;;5303:28;;;-1:-1:-1;5771:18:49;909:9476:35;325:19:48;;909:9476:35;;;5437:55:44;325:19:48;5437:55:44;;:::i;:::-;909:9476:35;5299:335:44;909:9476:35;;4682:3:44;909:9476:35;4652:13:44;;;5299:335;5591:28;;;;:::i;:::-;909:9476:35;5299:335:44;;4781:447;325:19:48;909:9476:35;325:19:48;909:9476:35;;325:19:48;909:9476:35;;325:19:48;909:9476:35;-1:-1:-1;;909:9476:35;;;;;;;;;325:19:48;909:9476:35;325:19:48;909:9476:35;325:19:48;909:9476:35;;325:19:48;909:9476:35;4781:447:44;;4651:122:49;4701:61;909:9476:35;4701:61:49;909:9476:35;;;;;;4701:61:49;4881:155;4946:79;;909:9476:35;4946:79:49;909:9476:35;;;;;;4946:79:49;4461:81;4498:33;909:9476:35;4498:33:49;909:9476:35;;;;4498:33:49;4331:81;4384:17;909:9476:35;4384:17:49;909:9476:35;;4384:17:49;909:9476:35;;;;;;;:::i;:::-;637:66:23;3327:69:26;1444:93:23;;1655:4;637:66;3556:68:26;2547:11:35;;;:::i;:::-;2600:10;;909:9476;2600:10;:::i;:::-;909:9476;2600:10;909:9476;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2575:63;909:9476;;;;;;;;;;:::i;:::-;;-1:-1:-1;;909:9476:35;;;;;;;;;:::i;:::-;2575:63;;;909:9476;2698:19;;;;;:::i;:::-;2739:13;;;909:9476;2754:12;;;;;;6669:23:30;;;;:::i;:::-;2948:17:49;2944:76;;3034:15;909:9476:35;3034:15:49;;909:9476:35;637:66:23;3556:68:26;909:9476:35;2944:76:49;2988:21;909:9476:35;2988:21:49;909:9476:35;;;;2988:21:49;2768:3:35;2812:22;:19;;;;;:::i;:::-;:22;;:::i;:::-;2870:18;;;;:::i;:::-;2914:13;;909:9476;2929:14;;;;;;3699:28;;909:9476;3699:28;;;;;;:::i;:::-;3753:13;;;909:9476;3768:19;;;;;;2768:3;;;;1655:4:23;909:9476:35;2739:13;;3789:3;909:9476;3834:36;:31;:28;;;;;:::i;:::-;:31;;:::i;:::-;909:9476;3834:36;;;;:::i;:::-;909:9476;;4251:23;;;:::i;:::-;909:9476;4288:10;909:9476;4288:10;;;;:::i;:::-;909:9476;;;;;;4240:59;;;;;;909:9476;4240:59;;909:9476;;4240:59;;909:9476;;;;;;:::i;:::-;4240:59;;;;;;;;;909:9476;4240:59;;;3789:3;909:9476;;;;;;4314:17;4345:11;909:9476;4345:11;;;909:9476;4345:11;;;;:::i;:::-;909:9476;;;:::i;:::-;;;;;;4335:22;4314:43;4310:149;;3789:3;;;1655:4:23;909:9476:35;3753:13;;4310:149;909:9476;4419:11;;;;:::i;:::-;909:9476;;;;;;4380:68;;;;;;909:9476;;4380:68;;909:9476;;;;;;:::i;:::-;;-1:-1:-1;;909:9476:35;;;;;;;;;:::i;:::-;4380:68;;;4240:59;;;;;;909:9476;4240:59;;;;;;:::i;:::-;;;909:9476;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4240:59;;;;;909:9476;;265:9:48;909:9476:35;265:9:48;;;;;2945:3:35;3002:30;:21;:18;;;;;:::i;:21::-;909:9476;3002:30;;;;:::i;:::-;909:9476;3055:19;;909:9476;;;;;;;;3055:19;;;909:9476;;6669:23:30;;;:::i;:::-;;873:13:50;909:9476:35;;-1:-1:-1;;909:9476:35;;;;;;;917:73:50;909:9476:35;917:73:50;;3051:409:35;;909:9476;3495:16;;;;;;;:::i;:::-;3556:10;;;;;;;;2945:3;;;;;;:::i;:::-;2914:13;;3568:3;3606:16;;:19;:16;;;;:::i;:::-;:19;;:::i;:::-;1185:18:48;;909:9476:35;1185:18:48;;;;:::i;:::-;909:9476:35;;;;;;;;3568:3;1174:63:48;;;;:::i;:::-;;3568:3:35;:::i;:::-;3541:13;;;;3051:409;909:9476;;;;;;;;;2230:21:44;;;;:::i;:::-;909:9476:35;;1655:4:23;909:9476:35;;;;;;;1655:4:23;909:9476:35;;2312:26:44;;2308:61;;2429:28;2467:31;2513:13;909:9476:35;2508:1078:44;2528:13;;;;;;909:9476:35;;;325:19:48;909:9476:35;325:19:48;909:9476:35;;325:19:48;909:9476:35;;325:19:48;909:9476:35;2583:55:49;909:9476:35;2583:55:49;;3051:409:35;;;;2543:3:44;325:19:48;;;;909:9476:35;325:19:48;1655:4:23;909:9476:35;325:19:48;909:9476:35;;325:19:48;;909:9476:35;325:19:48;909:9476:35;325:19:48;;909:9476:35;;325:19:48;909:9476:35;1655:4:23;6631:9:44;;:14;2836:707;1655:4:23;;;909:9476:35;;325:19:48;;909:9476:35;;;1655:4:23;;3128:72:44;;909:9476:35;3128:72:44;:::i;:::-;2836:707;;909:9476:35;;2543:3:44;909:9476:35;2513:13:44;;;2836:707;325:19:48;909:9476:35;325:19:48;1655:4:23;909:9476:35;325:19:48;909:9476:35;;325:19:48;909:9476:35;-1:-1:-1;;909:9476:35;;;;;;;;1655:4:23;325:19:48;3465:63:44;325:19:48;909:9476:35;325:19:48;909:9476:35;325:19:48;909:9476:35;;325:19:48;909:9476:35;3465:63:44;:::i;:::-;2836:707;;;2308:61;2347:22;909:9476:35;2347:22:44;909:9476:35;;2347:22:44;909:9476:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:4:23;909:9476:35;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:9476:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1655:4:23;909:9476:35;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:9476:35;;;;;;;;;;;;;;;;;;;;1655:4:23;909:9476:35;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1655:4:23;909:9476:35;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1444:93:23;1496:30;909:9476:35;1496:30:23;909:9476:35;;1496:30:23;909:9476:35;;;;;-1:-1:-1;;909:9476:35;;;;;;1025:21:48;909:9476:35;;1025:21:48;:::i;:::-;909:9476:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;909:9476:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6005:11:44;909:9476:35;3245:34:49;;;3241:143;;7577:28:30;;;-1:-1:-1;325:19:48;5006:14:30;325:19:48;;;-1:-1:-1;325:19:48;909:9476:35;5006:26:30;;4910:129;;7577:28;3431:22:49;3427:56;;909:9476:35;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7292:13:44;909:9476:35;7287:344:44;7307:13;;;;;;3647:20:49;;;;;3643:109;;909:9476:35;3643:109:49;3690:51;909:9476:35;3690:51:49;909:9476:35;;;;;;3690:51:49;7322:3:44;909:9476:35;;;;;;;;;;8024:24:44;:29;7341:280;909:9476:35;;;7443:38:44;7455:11;;;;;:::i;:::-;909:9476:35;7443:38:44;:::i;:::-;7341:280;;909:9476:35;7292:13:44;;;;;7341:280;7568:38;7594:11;;;;;:::i;:::-;909:9476:35;7568:38:44;;:::i;:::-;7341:280;;;909:9476:35;;;;;;;;;;;;;3427:56:49;3462:21;;909:9476:35;3462:21:49;909:9476:35;;;;3462:21:49;3241:143;3302:71;;;909:9476:35;3302:71:49;909:9476:35;;;;;;3302:71:49;909:9476:35;;;;;-1:-1:-1;;909:9476:35;;;;;;7577:28:30;909:9476:35;;-1:-1:-1;325:19:48;5006:14:30;325:19:48;;;-1:-1:-1;325:19:48;909:9476:35;5006:26:30;;4910:129;;7577:28;909:9476:35;;;;;;;;;;-1:-1:-1;;909:9476:35;;;;;;;;;;;;;;;;;-1:-1:-1;909:9476:35;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;909:9476:35;;;;;;;;;;;;;-1:-1:-1;;909:9476:35;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;909:9476:35;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:9476:35;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;909:9476:35;;;;;;;;-1:-1:-1;909:9476:35;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;909:9476:35;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;909:9476:35;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;909:9476:35;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;909:9476:35;;;;;-1:-1:-1;909:9476:35;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;909:9476:35;;;;:::o;280:64:48:-;909:9476:35;;;;;;;:::i;:::-;;;;;;;;;;;;325:19:48;;;;;;;;909:9476:35;325:19:48;280:64;:::o;325:19::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;2257:523;;2364:16;;:::i;:::-;2352:28;;2348:77;;325:19;-1:-1:-1;325:19:48;2491:6;325:19;;;-1:-1:-1;325:19:48;;909:9476:35;325:19:48;;-1:-1:-1;325:19:48;;;;;;:::i;:::-;909:9476:35;;;;325:19:48;909:9476:35;;325:19:48;;;;;;;;;;;;;;;;;;;;-1:-1:-1;325:19:48;;;;;;:::i;:::-;;909:9476:35;;;;;;;;;;;;;;2549:12:48;;;;;;;;-1:-1:-1;2549:12:48;2600:16;;:::i;:::-;2579:37;;2575:149;;2751:22;;-1:-1:-1;2751:22:48;;909:9476:35;;-1:-1:-1;2751:22:48;2575:149;2884:29;;;;;;2880:132;;2698:11;;;:::o;2880:132::-;2936:65;-1:-1:-1;2936:65:48;;909:9476:35;;;;-1:-1:-1;2936:65:48;325:19;-1:-1:-1;325:19:48;;;;;;-1:-1:-1;;;325:19:48;;;;;;-1:-1:-1;;325:19:48;;;;;-1:-1:-1;325:19:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;325:19:48;;;;;;;;;-1:-1:-1;325:19:48;-1:-1:-1;325:19:48;;2348:77;2403:11;-1:-1:-1;2403:11:48;;-1:-1:-1;2403:11:48;909:9476:35;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;909:9476:35;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;909:9476:35;;;;;;:::o;4567:4398::-;909:9476;;;;;;;:::i;:::-;;;;;8360:1:0;584:66:43;417;8360:1:0;;842:20;;4567:4398:35;842:32:0;;;;4567:4398:35;909:9476;;;-1:-1:-1;;;8360:1:0;-1:-1:-1;;926:16:0;1003:7;;;3254:23;;;;;-1:-1:-1;;3254:23:0;;;;;;;3300:22;;;3356:24;;3345:41;;909:9476:35;;;;;;4721:19;;;;;:::i;:::-;4758:22;-1:-1:-1;;;4810:12:35;;;;;;4974:25;;;;:::i;:::-;5049:14;-1:-1:-1;;5090:12:35;;;;;;909:9476;;;-1:-1:-1;909:9476:35;;;;8812:16;;909:9476;8812:16;;;909:9476;;;;;;;;;:::i;:::-;8812:16;-1:-1:-1;;8812:16:35;;;;;;:::i;:::-;909:9476;;;;;;;;;;;;;;;8805:24;;909:9476;8805:24;;;;;3927:8:27;8805:24:35;909:9476;8805:24;3871:27:27;8805:24:35;;909:9476;8911:22;-1:-1:-1;8805:24:35;8911:22;909:9476;8911:22;;;;:::i;909:9476::-;3871:27:27;;:::i;:::-;3927:8;;;;;:::i;:::-;909:9476:35;;;;;;;;;805:30:46;909:9476:35;805:30:46;;909:9476:35;;;;;;;805:30:46;;;909:9476:35;805:30:46;;:::i;:::-;909:9476:35;1009:25:46;;909:9476:35;;;1833:21:46;;;;1829:113;;4567:4398:35;;:::o;1829:113:46:-;1877:54;-1:-1:-1;1877:54:46;9521:65:35;909:9476;;;;-1:-1:-1;1877:54:46;8805:24:35;909:9476;;265:9:48;-1:-1:-1;265:9:48;;;;;5104:3:35;5148:22;:19;;;;;:::i;:22::-;9120:28;;;;;;;:::i;:::-;9170:13;;;-1:-1:-1;9185:19:35;;;;;;5295:22;;;;909:9476;5295:22;;;;:::i;:::-;-1:-1:-1;;;5362:8:35;;;;;;7683:18;;;;;;:::i;:::-;7757:25;;;;;:::i;:::-;-1:-1:-1;7820:14:35;;;;;;8017:18;8330:25:44;8360:1:0;909:9476:35;8017:18;909:9476;;8330:25:44;:::i;:::-;8370:13;-1:-1:-1;8385:14:44;8360:1:0;909:9476:35;8017:18;909:9476;;8385:14:44;;;;8017:18:35;;8360:1:0;909:9476:35;8017:18;909:9476;;8663:15:44;8360:1:0;8663:15:44;;;;8897:8;909:9476:35;;;;;;;;8060:13;-1:-1:-1;8075:14:35;;;;;;5104:3;;;;8360:1:0;909:9476:35;5079:9;;8091:3;8146:21;:18;;;;;:::i;:21::-;909:9476;8240:14;;;;;;;;;:::i;:::-;:19;909:9476;8240:45;8236:184;;8509:11;;909:9476;-1:-1:-1;8509:11:35;;;8628:14;8509:11;;:::i;:::-;8628:14;;;;;:::i;:::-;909:9476;;;8617:26;;;909:9476;8617:26;;;909:9476;;;;;;;;;:::i;:::-;8617:26;-1:-1:-1;;8617:26:35;;;;;;:::i;:::-;909:9476;;;;;;;;;;;;;;8610:34;;909:9476;8610:34;;;;;-1:-1:-1;8610:34:35;5815:27;909:9476;5815:27;909:9476;8442:225;;;;;909:9476;;-1:-1:-1;909:9476:35;;;8442:225;;;;;909:9476;8442:225;;8555:14;909:9476;8442:225;9521:65;8442:225;;;:::i;:::-;;5815:27;909:9476;5815:27;909:9476;8442:225;;;;;;;8360:1:0;8442:225:35;;;;8091:3;;909:9476;8060:13;;8442:225;-1:-1:-1;8442:225:35;;;:::i;:::-;;;;;909:9476;;265:9:48;-1:-1:-1;265:9:48;;;;;8610:34:35;909:9476;;265:9:48;-1:-1:-1;265:9:48;;;;;8236:184:35;8376:14;;;;;;:::i;:::-;:19;909:9476;8320:77;;-1:-1:-1;8320:77:35;9521:65;909:9476;;;;-1:-1:-1;8320:77:35;8656:224:44;-1:-1:-1;8714:19:44;260:66:45;8360:1:0;260:66:45;8714:19:44;;;;260:66:45;8360:1:0;260:66:45;8656:224:44;;8735:3;260:66:45;8360:1:0;260:66:45;;;;;;;;8793:12:44;;;;:::i;:::-;909:9476:35;260:66:45;8360:1:0;909:9476:35;;;;;;;;8807:16:44;;;-1:-1:-1;8807:16:44;;;:::i;:::-;909:9476:35;;;;8776:48:44;;;;909:9476:35;;;260:66:45;;;909:9476:35;8776:48:44;;;;909:9476:35;8776:48:44;;:::i;:::-;909:9476:35;;;;;;;;;;;;;;8769:56:44;;909:9476:35;8769:56:44;;;;;8360:1:0;8769:56:44;-1:-1:-1;8769:56:44;8758:67;;;;:::i;:::-;909:9476:35;;8699:13:44;;8769:56;909:9476:35;;265:9:48;-1:-1:-1;265:9:48;;;;;8401:3:44;8360:1:0;909:9476:35;;;8424:16:44;;8420:141;8428:12;;;8471:8;;;;:::i;:::-;909:9476:35;8460:19:44;;;;:::i;:::-;909:9476:35;8420:141:44;909:9476:35;8370:13:44;;8420:141;260:66:45;8518:28:44;;;;:::i;:::-;909:9476:35;8420:141:44;;7836:3:35;7879:18;:30;:21;8360:1:0;7879:18:35;;;;;:::i;:30::-;909:9476;7863:50;;;;:::i;:::-;909:9476;;7805:13;;5372:3;5295:22;;5430;909:9476;5295:22;;5430;;:::i;:::-;909:9476;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5549:13;909:9476;;;;;5549:27;909:9476;325:19:48;-1:-1:-1;325:19:48;9521:65:35;909:9476;325:19:48;;-1:-1:-1;325:19:48;909:9476:35;5006:26:30;5592:81:49;;909:9476:35;;;-1:-1:-1;325:19:48;5006:14:30;909:9476:35;325:19:48;;-1:-1:-1;325:19:48;909:9476:35;1083:102:50;;909:9476:35;;;;5759:21;909:9476;-1:-1:-1;325:19:48;909:9476:35;;325:19:48;;-1:-1:-1;325:19:48;909:9476:35;5182:95:49;;909:9476:35;;;-1:-1:-1;5882:10:35;909:9476;;;;5882:10;:::i;:::-;909:9476;;;;;5997:25;909:9476;5997:25;;;909:9476;;;:::i;:::-;;5997:25;;;9340:36;5997:25;;:::i;:::-;909:9476;;;;;;;;;;;;;;5990:33;;909:9476;5990:33;;;;;-1:-1:-1;5990:33:35;5815:27;909:9476;5815:27;909:9476;5815:231;;;;-1:-1:-1;909:9476:35;;5815:231;909:9476;;5815:231;;;;;909:9476;5815:231;;5927:22;5815:231;9521:65;5815:231;;;:::i;:::-;;:27;909:9476;5815:27;909:9476;5815:231;;;;;;;;5372:3;6254:18;:29;:18;;;;:::i;:::-;909:9476;;6254:29;;:::i;:::-;909:9476;;;;;6314:31;909:9476;6349:19;;909:9476;6314:54;;;6310:308;;6723:12;;6718:23;6723:12;;;:::i;:::-;909:9476;;6718:23;;;:::i;:::-;909:9476;6915:29;:18;;;;:::i;:::-;909:9476;;;;5759:21;909:9476;6915:29;;:::i;:::-;909:9476;;;;;6975:30;909:9476;7009:19;;909:9476;6975:53;;;6971:306;;7382:12;;;;;:::i;:::-;909:9476;7377:23;909:9476;;;;5759:21;909:9476;7377:23;;;:::i;:::-;909:9476;;;;;;;;:::i;:::-;;;9340:36;909:9476;;;;;;;;;;;;7544:23;;909:9476;;;;;;;;;;1283:75:43;8360:1:0;909:9476:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1283:75:43;;:::i;:::-;909:9476:35;;;;;;5372:3;909:9476;5347:13;;;909:9476;;;;;;;;;;;;;6971:306;7067:183;-1:-1:-1;7067:183:35;9521:65;909:9476;;;;-1:-1:-1;7067:183:35;5815:231;-1:-1:-1;5815:231:35;;;:::i;:::-;;;;;909:9476;;265:9:48;-1:-1:-1;265:9:48;;;;;5182:95:49;909:9476:35;5233:33:49;;;-1:-1:-1;5233:33:49;909:9476:35;5759:21;909:9476;9521:65;909:9476;;-1:-1:-1;5233:33:49;1083:102:50;1143:31;;-1:-1:-1;1143:31:50;909:9476:35;9521:65;909:9476;;-1:-1:-1;1143:31:50;5592:81:49;5641:21;-1:-1:-1;5641:21:49;9521:65:35;909:9476;;-1:-1:-1;5641:21:49;9206:3:35;9253:31;:28;;;;;:::i;:31::-;9340:36;:31;:28;;;;;:::i;:36::-;909:9476;-1:-1:-1;909:9476:35;;;;;:::i;:::-;;;;;567:17:42;;909:9476:35;;;;537:48:42;;;;909:9476:35;;;;;;;537:48:42;;;;909:9476:35;537:48:42;;:::i;:::-;909:9476:35;;;;;;;;;;;;;;530:56:42;;909:9476:35;530:56:42;;;;;-1:-1:-1;530:56:42;9521:65:35;909:9476;530:56:42;909:9476:35;9532:23;;;:::i;:::-;909:9476;;;9521:65;;;;909:9476;9521:65;;;;;;;;;-1:-1:-1;9521:65:35;;;9206:3;9609:25;;;;9605:151;;9892:23;;;909:9476;;-1:-1:-1;9892:23:35;;;9881:60;9892:23;909:9476;9929:11;9892:23;909:9476;9892:23;;:::i;:::-;9917:10;909:9476;9917:10;;;;;;:::i;:::-;9929:11;;;;;;;;:::i;:::-;909:9476;;;;;9881:60;;;909:9476;9881:60;;;909:9476;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;909:9476:35;;;;;;;;;:::i;9881:60::-;909:9476;9871:71;;10081:18;;;;;:::i;:::-;909:9476;;;;;;:::i;:::-;;;;236:20:42;909:9476:35;236:20:42;;;909:9476:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9340:36;909:9476;;;9340:36;236:20:42;;;;;;:::i;:::-;909:9476:35;;;;;;;;;;;;;;229:28:42;;909:9476:35;229:28:42;;;;;10070:79:35;10081:67;:64;229:28:42;;10081:47:35;:56;229:28:42;909:9476:35;229:28:42;-1:-1:-1;229:28:42;10081:47:35;;:::i;:56::-;909:9476;10081:64;;;;:::i;:67::-;909:9476;;10070:79;;;909:9476;10070:79;;909:9476;;;;;;;;:::i;10070:79::-;909:9476;10060:90;;10173:40;;;;10169:184;;9206:3;;8360:1:0;909:9476:35;9170:13;;10169:184;10244:90;-1:-1:-1;10244:90:35;9521:65;909:9476;;;;-1:-1:-1;10244:90:35;9605:151;9665:72;-1:-1:-1;9665:72:35;9521:65;909:9476;;;;-1:-1:-1;9665:72:35;9521:65;;;909:9476;9521:65;;;;;;;;;909:9476;9521:65;;;:::i;:::-;;;909:9476;;;;;9521:65;;;;;;-1:-1:-1;9521:65:35;;;909:9476;;265:9:48;-1:-1:-1;265:9:48;;;;;4824:3:35;4857:34;:22;:19;;;;;:::i;:22::-;:34;;:::i;:::-;4843:55;;909:9476;;;;;;;8360:1:0;4843:55:35;4824:3;909:9476;4795:13;;;996:169:0;1030:6;;;;;;;;;:::i;:::-;1062:52;;1086:20;;;-1:-1:-1;;1080:26:0;1086:20;;-1:-1:-1;;909:9476:35;;-1:-1:-1;;909:9476:35;;;;1147:6:0;-1:-1:-1;;1143:10:0;1069:44;-1:-1:-1;1069:44:0;;1050:64;1138:16;;1147:6;;:::i;:::-;1143:10;;:::i;:::-;1128:26;996:169;;1128:26;996:169;;1086:20;260:66:45;-1:-1:-1;260:66:45;;;;;-1:-1:-1;260:66:45;909:9476:35;;;;;;;;;;;;;;;;;;;;;;;842:32:0;;8360:1;842:32;;:20;-1:-1:-1;;853:9:0;;;;842:20;;;909:9476:35;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;260:341:47:-;;;;;426:1;429:7;;;;;;568:26;;426:1;568:26;;909:9476:35;;426:1:47;568:26;438:3;461:6;:15;:6;;;;;:::i;:15::-;909:9476:35;461:26:47;457:85;;909:9476:35;;414:13:47;;457:85;521:6;;;;;;:::i;260:66:45:-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;1250:1001:48:-;;;1418:12;-1:-1:-1;909:9476:35;;;;;;;;;;;;;1418:12:48;;;;;;;;-1:-1:-1;1418:12:48;1489:16;;;:::i;:::-;1477:28;;1473:77;;1418:12;909:9476:35;;;;;;;1606:50:48;;;1748:15;;;;;:::o;1602:577::-;325:19;-1:-1:-1;325:19:48;1833:6;1418:12;325:19;909:9476:35;-1:-1:-1;325:19:48;909:9476:35;;;-1:-1:-1;909:9476:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1826:24:48;;;1418:12;1826:24;-1:-1:-1;1826:24:48;;;1418:12;1826:24;;;;;-1:-1:-1;1826:24:48;1854:16;;:::i;:::-;1826:44;1854:16;;1886:15;;;;;:::o;1822:357::-;909:9476:35;;;;;;;1960:44:48;;1956:223;;1822:357;;2196:48;-1:-1:-1;2196:48:48;909:9476:35;;;2196:48:48;909:9476:35;;-1:-1:-1;2196:48:48;909:9476:35;;-1:-1:-1;909:9476:35;;2196:48:48;909:9476:35;;-1:-1:-1;909:9476:35;1956:223:48;2025:76;;;;;;909:9476:35;2025:76:48;;-1:-1:-1;2025:76:48;;325:19;-1:-1:-1;325:19:48;1833:6;1418:12;325:19;909:9476:35;-1:-1:-1;325:19:48;909:9476:35;;;;;;;;;;:::i;:::-;;;;;;1956:223:48;909:9476:35;-1:-1:-1;909:9476:35;;;;;;;;;;;;-1:-1:-1;909:9476:35;;;;;;-1:-1:-1;;909:9476:35;;;;;;;;;;;;2153:15:48;:::o;909:9476:35:-;;;;-1:-1:-1;909:9476:35;;;;;-1:-1:-1;;909:9476:35;;325:19:48;;-1:-1:-1;325:19:48;1418:12;-1:-1:-1;325:19:48;909:9476:35;-1:-1:-1;909:9476:35;;;;;;;;;;;;;;;;;;;;;;;;;2153:15:48;:::o;909:9476:35:-;-1:-1:-1;;909:9476:35;;;;;;;;;;;;;;;;;;;;;1418:12:48;909:9476:35;;;;;;;;;;;;;;;;;325:19:48;-1:-1:-1;325:19:48;1418:12;-1:-1:-1;325:19:48;909:9476:35;;;;;;;;1418:12:48;909:9476:35;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;909:9476:35;;;;;;;;;-1:-1:-1;909:9476:35;;;;;325:19:48;;;-1:-1:-1;325:19:48;1418:12;-1:-1:-1;325:19:48;-1:-1:-1;909:9476:35;;;;;;;-1:-1:-1;;909:9476:35;;;1418:12:48;909:9476:35;;;;;1418:12:48;909:9476:35;;;;;;;;;;;;;;;;;-1:-1:-1;;909:9476:35;;;;;;;-1:-1:-1;909:9476:35;1418:12:48;909:9476:35;;442:119:45;-1:-1:-1;442:119:45;537:16;442:119;909:9476:35;;537:16:45;;;;909:9476:35;;;;;;;;537:16:45;;;;;;:::i;:::-;909:9476:35;;;;;;;;;;;;;;;530:24:45;;;;;;;;-1:-1:-1;530:24:45;442:119;:::o;909:9476:35:-;;;;;;;;-1:-1:-1;325:19:48;;-1:-1:-1;325:19:48;909:9476:35;;-1:-1:-1;909:9476:35;:::o;2336:406:30:-;325:19:48;909:9476:35;325:19:48;5006:14:30;325:19:48;;;909:9476:35;325:19:48;909:9476:35;5006:26:30;2415:321;2419:22;;;873:13:50;909:9476:35;;;;;;;;;;5006:14:30;909:9476:35;;;873:13:50;909:9476:35;873:13:50;909:9476:35;:::i;:::-;;;;;;-1:-1:-1;;909:9476:35;;;;;;;;;;;;;;;;873:13:50;909:9476:35;325:19:48;909:9476:35;325:19:48;5006:14:30;325:19:48;;;909:9476:35;325:19:48;909:9476:35;5006:14:30;2671:11;:::o;2415:321::-;2713:12;909:9476:35;2713:12:30;:::o;2336:406::-;325:19:48;909:9476:35;325:19:48;5006:14:30;325:19:48;;;909:9476:35;325:19:48;909:9476:35;5006:26:30;2415:321;2419:22;;;2949:6:49;909:9476:35;;;;;;;;;;5006:14:30;909:9476:35;;;2949:6:49;909:9476:35;2949:6:49;909:9476:35;:::i;:::-;;;2949:6:49;909:9476:35;325:19:48;909:9476:35;325:19:48;5006:14:30;325:19:48;;;909:9476:35;325:19:48;909:9476:35;5006:14:30;2671:11;:::o;6213:760:0:-;;;;;;6564:10;;;;;6624:21;-1:-1:-1;;6624:21:0;;;865:66:43;;-1:-1:-1;;;;;;6670:13:0:o;6620:188::-;-1:-1:-1;;11726:19:0;;;-1:-1:-1;;;11843:18:0;;;;;;;11840:1;11833:34;11678:19;;;11926:1;11919:17;11899:113;12249:23;-1:-1:-1;;12249:23:0;12255:17;;;;909:9476:35;;;;;;;12230:17:0;;;;;;12223:55;12365:7;909:9476:35;;;;;;;;;12398:39:0;;;12414:17;;12411:1;12404:33;909:9476:35;;;;;;;12355:23:0;6781:1;12355:23;;;;;;;12345:39;;12325:139;12512:19;;12509:1;12502:35;6749:44;;6560:338;842:7;;;3213:15;842:7;:20;;6560:338;842:32;;;;6560:338;909:9476:35;;;-1:-1:-1;;;941:1:0;-1:-1:-1;;926:16:0;1003:7;;;3254:23;;;;;-1:-1:-1;;3254:23:0;;;;;;;3300:22;;;3356:24;;3345:41;;6213:760;:::o;996:169::-;1030:6;;;;;;;;;:::i;:::-;1062:52;;1086:20;;;-1:-1:-1;;1080:26:0;1086:20;;-1:-1:-1;;909:9476:35;;-1:-1:-1;;909:9476:35;;;;1147:6:0;-1:-1:-1;;1143:10:0;1069:44;-1:-1:-1;1069:44:0;;1050:64;1138:16;;1147:6;;:::i;1143:10::-;1128:26;996:169;;1128:26;996:169;;909:9476:35;;;;;;;;;;;;;;;;;;;;;;;842:32:0;;866:8;842:32;;:20;-1:-1:-1;;853:9:0;;;;842:20;;;6560:338;6850:37;;;-1:-1:-1;;6850:37:0;;:::i;:::-;6838:49;;6560:338;;2129:778:27;909:9476:35;;;2129:778:27;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:27;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;7280:532::-;909:9476:35;;;;;;7366:29:27;;;7411:7;;:::o;7362:444::-;909:9476:35;7462:38:27;;909:9476:35;;7523:23:27;7375:20;7523:23;909:9476:35;7375:20:27;7523:23;7458:348;7576:35;7567:44;;7576:35;;7634:46;;7375:20;7634:46;909:9476:35;;;7375:20:27;7634:46;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;7763:32;7375:20;7763:32;909:9476:35;;;7375:20:27;7763:32;8838:1966:0;;;;;;9126:8;;:20;;;8838:1966;9122:48;;9184:8;;:20;;;8838:1966;9180:48;;909:9476:35;;;;;;;;:::i;:::-;;;;;9437:21:0;;;;;6867:1;9437:21;;909:9476:35;;;;;;6867:1:0;9476:23;909:9476:35;;;;;;;;;;;;;;;;;6867:1:0;9556:23;909:9476:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:23:0;;909:9476:35;;;9672:23:0;;9621:158;909:9476:35;9621:158:0;;909:9476:35;;;;9709:23:0;;9621:158;909:9476:35;9621:158:0;;909:9476:35;;;;9746:23:0;;909:9476:35;9621:158:0;;909:9476:35;;;;;;;9898:14:0;;;:32;;;8838:1966;909:9476:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;10058:11:0;;;;:::i;:::-;10044:31;;909:9476:35;;;;;10119:11:0;;;;:::i;:::-;10105:31;;909:9476:35;;;;;;;;;;;;;;;;;;10168:25:0;;909:9476:35;;;;;;;;;;;;10226:25:0;;909:9476:35;;;;;;;;;10315:25:0;909:9476:35;;10342:11:0;;;;:::i;:::-;10308:51;;909:9476:35;;;;;;10401:25:0;;9512:1;10391:41;10385:47;;;;:::i;:::-;10374:64;;909:9476:35;;;;;;10549:25:0;;10576:8;;;;:::i;:::-;10542:48;;10503:114;;909:9476:35;;;;10649:25:0;;10643:31;;;;:::i;:::-;10632:48;;909:9476:35;;10727:41:0;10778:19;;;8838:1966;:::o;909:9476:35:-;;;;;;;;;;;;;;;;;;;;;;;9898:32:0;909:9476:35;;;;;9916:14:0;;9898:32;;9180:48;9206:22;;;6867:1;9206:22;:::o;9184:20::-;9196:8;;;9184:20;;9122:48;9148:22;-1:-1:-1;9148:22:0;-1:-1:-1;6867:1:0;;9148:22;-1:-1:-1;9148:22:0:o;9126:20::-;9138:8;;;9126:20;;5203:1551:27;;;6283:66;6270:79;;6266:164;;909:9476:35;;;;;;-1:-1:-1;909:9476:35;;;;;;;;;;;;;;;;;;;6541:24:27;;;;;;;;;-1:-1:-1;6541:24:27;909:9476:35;;;6579:20:27;6575:113;;6698:49;-1:-1:-1;6698:49:27;-1:-1:-1;5203:1551:27;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:27;6541:24;6615:62;-1:-1:-1;6615:62:27;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "46707": [
        {
          "start": 6695,
          "length": 32
        },
        {
          "start": 6819,
          "length": 32
        },
        {
          "start": 7542,
          "length": 32
        },
        {
          "start": 7696,
          "length": 32
        }
      ],
      "46709": [
        {
          "start": 7630,
          "length": 32
        }
      ],
      "46711": [
        {
          "start": 6367,
          "length": 32
        },
        {
          "start": 6414,
          "length": 32
        },
        {
          "start": 6461,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "containsRoot(bytes32)": "48cbdfca",
    "execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": "9a49e741",
    "latestRoot()": "d7b0fef1",
    "lookupBlob(bytes32)": "8310d485",
    "merkleProof(bytes32)": "c235cd9e",
    "verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": "f3eeec55",
    "verifyMerkleProof(bytes32,bytes32,bytes32[],uint256)": "59a89283"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"riscZeroVerifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"complianceCircuitID\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"commitmentTreeDepth\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"actionTreeDepth\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BlobEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"BlobHashMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blobHash\",\"type\":\"bytes32\"}],\"name\":\"BlobNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierAppDataMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierCommitmentNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierKindMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierLabelMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"CommitmentIndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CommitmentMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"}],\"name\":\"DeletionCriterionNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"DeltaMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyCommitment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"expected\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"actual\",\"type\":\"bytes\"}],\"name\":\"ForwarderCallOutputMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"InvalidCommitmentRef\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"}],\"name\":\"InvalidNullifierRef\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"InvalidPathLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"InvalidRootRef\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"}],\"name\":\"LogicProofTagNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"LogicRefMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NonExistentLeafIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"NonExistingCommitment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"NonExistingRoot\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"PreExistingCommitment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"}],\"name\":\"PreExistingNullifier\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"PreExistingRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"RootMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TreeCapacityExceeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"blobHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"}],\"name\":\"BlobStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"CommitmentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NullifierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"RootAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isConsumed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"ciphertext\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"internalType\":\"struct ExpirableBlob[]\",\"name\":\"appData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LogicInstance\",\"name\":\"instance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct LogicProof[]\",\"name\":\"logicProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct ConsumedRefs\",\"name\":\"consumed\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct CreatedRefs\",\"name\":\"created\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"unitDelta\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ComplianceInstance\",\"name\":\"instance\",\"type\":\"tuple\"}],\"internalType\":\"struct ComplianceUnit[]\",\"name\":\"complianceUnits\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"valueRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierKeyCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ephemeral\",\"type\":\"bool\"}],\"internalType\":\"struct Resource\",\"name\":\"carrier\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"untrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"internalType\":\"struct ForwarderCalldata\",\"name\":\"call\",\"type\":\"tuple\"}],\"internalType\":\"struct ResourceForwarderCalldataPair[]\",\"name\":\"resourceCalldataPairs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"deltaProof\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"containsRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isContained\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isConsumed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"ciphertext\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"internalType\":\"struct ExpirableBlob[]\",\"name\":\"appData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LogicInstance\",\"name\":\"instance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct LogicProof[]\",\"name\":\"logicProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct ConsumedRefs\",\"name\":\"consumed\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct CreatedRefs\",\"name\":\"created\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"unitDelta\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ComplianceInstance\",\"name\":\"instance\",\"type\":\"tuple\"}],\"internalType\":\"struct ComplianceUnit[]\",\"name\":\"complianceUnits\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"valueRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierKeyCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ephemeral\",\"type\":\"bool\"}],\"internalType\":\"struct Resource\",\"name\":\"carrier\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"untrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"internalType\":\"struct ForwarderCalldata\",\"name\":\"call\",\"type\":\"tuple\"}],\"internalType\":\"struct ResourceForwarderCalldataPair[]\",\"name\":\"resourceCalldataPairs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"deltaProof\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blobHash\",\"type\":\"bytes32\"}],\"name\":\"lookupBlob\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"merkleProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"directionBits\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isConsumed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"ciphertext\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"internalType\":\"struct ExpirableBlob[]\",\"name\":\"appData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LogicInstance\",\"name\":\"instance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct LogicProof[]\",\"name\":\"logicProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct ConsumedRefs\",\"name\":\"consumed\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct CreatedRefs\",\"name\":\"created\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"unitDelta\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ComplianceInstance\",\"name\":\"instance\",\"type\":\"tuple\"}],\"internalType\":\"struct ComplianceUnit[]\",\"name\":\"complianceUnits\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"valueRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierKeyCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ephemeral\",\"type\":\"bool\"}],\"internalType\":\"struct Resource\",\"name\":\"carrier\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"untrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"internalType\":\"struct ForwarderCalldata\",\"name\":\"call\",\"type\":\"tuple\"}],\"internalType\":\"struct ResourceForwarderCalldataPair[]\",\"name\":\"resourceCalldataPairs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"deltaProof\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"path\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"directionBits\",\"type\":\"uint256\"}],\"name\":\"verifyMerkleProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"BlobStored(bytes32,uint8)\":{\"params\":{\"blobHash\":\"The hash of the blob being stored.\",\"deletionCriterion\":\"The deletion criterion of the blob.\"}},\"CommitmentAdded(bytes32,uint256)\":{\"params\":{\"commitment\":\"The commitment being stored.\",\"index\":\"The index of the commitment in the Merkle tree.\"}},\"NullifierAdded(bytes32,uint256)\":{\"params\":{\"index\":\"The index of the nullifier in the enumerable set.\",\"nullifier\":\"The nullifier being stored.\"}},\"RootAdded(bytes32)\":{\"params\":{\"root\":\"The root.\"}}},\"kind\":\"dev\",\"methods\":{\"containsRoot(bytes32)\":{\"params\":{\"root\":\"The root to check.\"},\"returns\":{\"isContained\":\"Whether the root exists or not.\"}},\"execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"params\":{\"transaction\":\"The transaction to execute.\"}},\"latestRoot()\":{\"returns\":{\"root\":\"The latest commitment tree state root.\"}},\"lookupBlob(bytes32)\":{\"params\":{\"blobHash\":\"The hash of the blob to lookup.\"},\"returns\":{\"blob\":\"The found blob.\"}},\"merkleProof(bytes32)\":{\"params\":{\"commitment\":\"The commitment leaf to proof inclusion in the tree for.\"},\"returns\":{\"directionBits\":\"The direction bits for the proof.\",\"siblings\":\"The siblings constituting the path from the leaf to the root.\"}},\"verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"params\":{\"transaction\":\"The transaction to verify.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BlobStored(bytes32,uint8)\":{\"notice\":\"Emitted if a blob is stored.\"},\"CommitmentAdded(bytes32,uint256)\":{\"notice\":\"Emitted if a commitment is added to the commitment accumulator.\"},\"NullifierAdded(bytes32,uint256)\":{\"notice\":\"Emitted if a nullifier is added to the nullifier set.\"},\"RootAdded(bytes32)\":{\"notice\":\"Emitted if a root is stored in the root storage.\"}},\"kind\":\"user\",\"methods\":{\"containsRoot(bytes32)\":{\"notice\":\"Checks if a commitment tree state root exists.\"},\"execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"notice\":\"Executes a transaction by adding the commitments and nullifiers to the commitment tree and nullifier set, respectively.\"},\"latestRoot()\":{\"notice\":\"Returns the latest  commitment tree state root.\"},\"lookupBlob(bytes32)\":{\"notice\":\"Looks a blob up in the blob storage or reverts.\"},\"merkleProof(bytes32)\":{\"notice\":\"Returns the Merkle proof and associated root for a commitment leaf in the tree.\"},\"verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"notice\":\"Verifies a transaction by checking the delta, resource logic, and compliance proofs.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ProtocolAdapter.sol\":\"ProtocolAdapter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@risc0-ethereum/=lib/risc0-ethereum/contracts/src/\",\":ds-test/=lib/risc0-ethereum/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-deep/=lib/forge-deep/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":solady/=lib/forge-deep/lib/solady/src/\",\":solmate/=lib/forge-deep/lib/solady/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/elliptic-curve-solidity/contracts/EllipticCurve.sol\":{\"keccak256\":\"0x50ee7c49cd01a085214ce375a6f806f8fa0898f616247770a2e8d2f9b7a59d7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://828da8f7309850b2afd6b5eaea78f3bac7678c666c1a92108abddb17c3286e4b\",\"dweb:/ipfs/Qmdv2jiGW1cfvCB5UP6MNGWGNVkQ2aAh89xG5uyinbS3hP\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuardTransient.sol\":{\"keccak256\":\"0xe56ff5015046505f81f9d62671a784e933dd099db4c3a8fa8de598f20af2c5a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355863359b4a250f7016836ef9a9672578e898503896f70a0d42b80141586f3e\",\"dweb:/ipfs/QmXXzvoMSFNQf8nRbcyRap5qzcbekWuzbXDY5C8f68JiG3\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/TransientSlot.sol\":{\"keccak256\":\"0xac673fa1e374d9e6107504af363333e3e5f6344d2e83faf57d9bfd41d77cc946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5982478dbbb218e9dd5a6e83f5c0e8d1654ddf20178484b43ef21dd2246809de\",\"dweb:/ipfs/QmaB1hS68n2kG8vTbt7EPEzmrGhkUbfiFyykGGLsAr9X22\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol\":{\"keccak256\":\"0xae73e91e4d2829b0a88176584d876382b4b7540ff07c62cb947cdf9ea43d5cf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2dd7da39a6f9b100fc1dcde565d799462cdc7d27722d2265317c3a01619c818\",\"dweb:/ipfs/Qmd3k3kcvrtfkLqVza4jHodbFH8wvq5vmfPtwekBKtPjmz\"]},\"lib/risc0-ethereum/contracts/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]},\"src/ProtocolAdapter.sol\":{\"keccak256\":\"0xc580850fa1c5177bf00aa5db0b47c581ce52d3f26754587b52a52811fd29682b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b0c7ac2e09fc22c41bbf14709d1b31a8bc2ee5a8e05c98c9e6bc63ed0a69ee3\",\"dweb:/ipfs/QmayALGT7PF38nDpaePvmrGAi3jasZncud1xsbKwHGNTQB\"]},\"src/Types.sol\":{\"keccak256\":\"0xee73647a51307b5eca733e847a26fe1645d4620882c9dbad37cfe7373f3c59d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://722e3ebbeeb0e9001e7dfc31910469ee133d11542582a75590e55cd9b3c205c8\",\"dweb:/ipfs/QmcCdE3BABxY8vMB48679m56VpqVKAzWzYAXNC2bVR69Co\"]},\"src/interfaces/IBlobStorage.sol\":{\"keccak256\":\"0xcf32467a2efcd49bc44370ad1bc6530699f2dbb13c42a1c942de4299b84652fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f434f6b2d5d625e4c3e6b150f7803dae3bc042baecc942a1b68ebe4bf134737a\",\"dweb:/ipfs/QmbLWBiNmzeNwik7PKi2W8FQMsGMt8jZHzw34JMNd4AZYu\"]},\"src/interfaces/ICommitmentAccumulator.sol\":{\"keccak256\":\"0xe3f2091c1aac0fc3244d2ae5877b1acecce762c2e349abec6ce03cb840df4157\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://697d2b095271884c05e6b1891fa43589ef836c6943384503541d793585bddc9e\",\"dweb:/ipfs/QmUzWCMnupyub7VDT58p4vBYwo7s1A4PBLbF8iA5SAtv6c\"]},\"src/interfaces/IForwarder.sol\":{\"keccak256\":\"0xf74120232baf3b69e5f3af0cee2e22a88718bb23747f577433b362222efb19b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c053cd5a9605a26dbebb2497ba4f6e348b4efe0ea6a1f4ea3e66fec252ff630c\",\"dweb:/ipfs/QmesTNpmnMhDngxgcdh5y2BEXAn9rwPSWMvHAyMvUsu9Lq\"]},\"src/interfaces/INullifierSet.sol\":{\"keccak256\":\"0x263ee8c0961ea5aef2a7e12e8e4ff21c7f86eccb80d62cd317f5545265a510df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df48f0e97e493be9877180ab7b22a9b6ec14d674204535881250c99f6919fb1\",\"dweb:/ipfs/Qma2DSoGrmYWxpiTDqxuB1Wir3txbjL5PxPGLUSRNPFUqs\"]},\"src/interfaces/IProtocolAdapter.sol\":{\"keccak256\":\"0x888d92cd3637520b2e9a787ab1f07b70417dc5adb73dadd6ad6689dfc6c1f452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a6b37166a5790f374c8a18ae5ddd28c481db6ce28105c45c8ff795d4cb571b\",\"dweb:/ipfs/QmQRLg7YSJY75GK1oNieRmjKVFcKKcxMCzHQCEcwRc4NVr\"]},\"src/libs/ComputableComponents.sol\":{\"keccak256\":\"0xf4e7c56d96ca689d1f26e78536fa4414ca9df0f691f4a80a937fa376d90c7041\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63f9f8cb3ff09f2705043e53e1bc4f0f55472352198b85f83f5357a51f8c2da6\",\"dweb:/ipfs/QmQBE3t3KHdVW8N5EmjDD9nBMkMZhrdFbk18oLqNBX6dqJ\"]},\"src/libs/EllipticCurveK256.sol\":{\"keccak256\":\"0x5e683c6c694135a244b938f680b33e3d7380b10a2aa1ddd1d812dea88c0c5857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6161ad3e7f3887859e67393ddfd87701124acbaced24763339a65b165882385\",\"dweb:/ipfs/QmaoXZCMbnjgdarBZkU3CwvNhbriaE3TQZfX5sUR8ajc3j\"]},\"src/libs/MerkleTree.sol\":{\"keccak256\":\"0x536b05191ae1e1881e2896f8aade132dc4fcb28fefc3132c755d854bb02aa6d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17000b942aa8d78bf4ccc3b458d7c53d4ce440fcfae7e8d381511ffd05eeb850\",\"dweb:/ipfs/QmYjwhK4DnobCBuFN53uXpQRBzWSb3C9Ld3yfqpgkSdVBC\"]},\"src/libs/SHA256.sol\":{\"keccak256\":\"0x85cda44e257c0d69a4e9a5d5300154f7eb0787d40580c263e0a6517717c17cb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c2d664f1b843c9068a4fae25cf44355cbc0ab3e095b55eddfe3105836dd5982\",\"dweb:/ipfs/QmQg4GXwtL6hxQQa7jjepj6Sq65d89CD6awx6R7PwVY42u\"]},\"src/proving/Delta.sol\":{\"keccak256\":\"0x8f4d3c0023f73bcfea3221808d5c1a96d2d41f9efa13e76d7405da694c611196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec94ccf7227b31aa123b3cc5c4634393bd8e14d2a98c2fb09777d168dfb0ef26\",\"dweb:/ipfs/QmTyj2nX2eJxNBk1vLiup9kHGcJbHHbVXzzgXidAuXCQCX\"]},\"src/proving/Logic.sol\":{\"keccak256\":\"0x3fa3b748b7bf36c9766679f2cf273e00f19b0f338de39b3cf94fa888647b0405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf6023a2d1f3846b8d678b738acfe6c28ced7f8ce268ae4499bd814297b7f22c\",\"dweb:/ipfs/QmTbtrGKsVGNpTaRmTBw3awAE5T2c4mu4bwjbD9SnGXXgU\"]},\"src/state/BlobStorage.sol\":{\"keccak256\":\"0x11ef2ffeaa43a67f8beaf48b4fed2721052b96c01b611bd259fab8907f4d05ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c4a32137ed9dcbacf6eef632814840a24eda4f889fbdfeec1edc879df458b9b\",\"dweb:/ipfs/QmQqvnA5VVXSG5fcsWAcu1UVXE8fQL4HsKN6royU95ruD3\"]},\"src/state/CommitmentAccumulator.sol\":{\"keccak256\":\"0xdfd257f017db48747f2b7d6dad897bcd11c4a2c6949cdc343cd969848d284414\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c260e1f46e2355dcc21832aa2920103f563fa02c8edf803762dbcaeed88683c9\",\"dweb:/ipfs/QmYs9P6yrEMzRCLyDPJDAKGdsBRJhoNDh6xHArJpAM9pog\"]},\"src/state/NullifierSet.sol\":{\"keccak256\":\"0x8314d0e2b8115d36a89fc1b0dd3eb17f5fef8b70831a374425c32d2f6c2f1a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a0d0f5e1b4f466fc95091d7c45199dc1caf564c4d48e30fd229c0aef5312d05\",\"dweb:/ipfs/QmX9pGdMrz9ZqR98W3uxLRmiE3Esm7YQNvLxNDcC82H3oT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IRiscZeroVerifier",
              "name": "riscZeroVerifier",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "complianceCircuitID",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "commitmentTreeDepth",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "actionTreeDepth",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BlobEmpty"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "BlobHashMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blobHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "BlobNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierAppDataMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierCommitmentNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierKindMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierLabelMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "current",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CommitmentIndexOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CommitmentMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "enum DeletionCriterion",
              "name": "deletionCriterion",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "DeletionCriterionNotSupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "expected",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "actual",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DeltaMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAInvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "expected",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "actual",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "ForwarderCallOutputMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidCommitmentRef"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nullifier",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidNullifierRef"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidPathLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidRootRef"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tag",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LogicProofTagNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LogicRefMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NonExistentLeafIndex"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "NonExistingCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "NonExistingRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "PreExistingCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nullifier",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "PreExistingNullifier"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "PreExistingRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "RootMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TreeCapacityExceeded"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blobHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "enum DeletionCriterion",
              "name": "deletionCriterion",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BlobStored",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CommitmentAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nullifier",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NullifierAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RootAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Action[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct LogicProof[]",
                      "name": "logicProofs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct LogicInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "tag",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bool",
                              "name": "isConsumed",
                              "type": "bool"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "root",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ciphertext",
                              "type": "bytes"
                            },
                            {
                              "internalType": "struct ExpirableBlob[]",
                              "name": "appData",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "enum DeletionCriterion",
                                  "name": "deletionCriterion",
                                  "type": "uint8"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "blob",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes32",
                          "name": "logicRef",
                          "type": "bytes32"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ComplianceUnit[]",
                      "name": "complianceUnits",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct ComplianceInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "struct ConsumedRefs",
                              "name": "consumed",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "nullifier",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "root",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "struct CreatedRefs",
                              "name": "created",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "commitment",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "uint256[2]",
                              "name": "unitDelta",
                              "type": "uint256[2]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ResourceForwarderCalldataPair[]",
                      "name": "resourceCalldataPairs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Resource",
                          "name": "carrier",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "logicRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "labelRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "valueRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "nullifierKeyCommitment",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "quantity",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "randSeed",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bool",
                              "name": "ephemeral",
                              "type": "bool"
                            }
                          ]
                        },
                        {
                          "internalType": "struct ForwarderCalldata",
                          "name": "call",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "untrustedForwarder",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "input",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "output",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "deltaProof",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransactionExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "containsRoot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isContained",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Action[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct LogicProof[]",
                      "name": "logicProofs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct LogicInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "tag",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bool",
                              "name": "isConsumed",
                              "type": "bool"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "root",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ciphertext",
                              "type": "bytes"
                            },
                            {
                              "internalType": "struct ExpirableBlob[]",
                              "name": "appData",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "enum DeletionCriterion",
                                  "name": "deletionCriterion",
                                  "type": "uint8"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "blob",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes32",
                          "name": "logicRef",
                          "type": "bytes32"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ComplianceUnit[]",
                      "name": "complianceUnits",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct ComplianceInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "struct ConsumedRefs",
                              "name": "consumed",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "nullifier",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "root",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "struct CreatedRefs",
                              "name": "created",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "commitment",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "uint256[2]",
                              "name": "unitDelta",
                              "type": "uint256[2]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ResourceForwarderCalldataPair[]",
                      "name": "resourceCalldataPairs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Resource",
                          "name": "carrier",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "logicRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "labelRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "valueRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "nullifierKeyCommitment",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "quantity",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "randSeed",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bool",
                              "name": "ephemeral",
                              "type": "bool"
                            }
                          ]
                        },
                        {
                          "internalType": "struct ForwarderCalldata",
                          "name": "call",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "untrustedForwarder",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "input",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "output",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "deltaProof",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blobHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lookupBlob",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "blob",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "siblings",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "directionBits",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Action[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct LogicProof[]",
                      "name": "logicProofs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct LogicInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "tag",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bool",
                              "name": "isConsumed",
                              "type": "bool"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "root",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ciphertext",
                              "type": "bytes"
                            },
                            {
                              "internalType": "struct ExpirableBlob[]",
                              "name": "appData",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "enum DeletionCriterion",
                                  "name": "deletionCriterion",
                                  "type": "uint8"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "blob",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes32",
                          "name": "logicRef",
                          "type": "bytes32"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ComplianceUnit[]",
                      "name": "complianceUnits",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct ComplianceInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "struct ConsumedRefs",
                              "name": "consumed",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "nullifier",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "root",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "struct CreatedRefs",
                              "name": "created",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "commitment",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "uint256[2]",
                              "name": "unitDelta",
                              "type": "uint256[2]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ResourceForwarderCalldataPair[]",
                      "name": "resourceCalldataPairs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Resource",
                          "name": "carrier",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "logicRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "labelRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "valueRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "nullifierKeyCommitment",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "quantity",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "randSeed",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bool",
                              "name": "ephemeral",
                              "type": "bool"
                            }
                          ]
                        },
                        {
                          "internalType": "struct ForwarderCalldata",
                          "name": "call",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "untrustedForwarder",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "input",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "output",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "deltaProof",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "path",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "directionBits",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyMerkleProof"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "containsRoot(bytes32)": {
            "params": {
              "root": "The root to check."
            },
            "returns": {
              "isContained": "Whether the root exists or not."
            }
          },
          "execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "params": {
              "transaction": "The transaction to execute."
            }
          },
          "latestRoot()": {
            "returns": {
              "root": "The latest commitment tree state root."
            }
          },
          "lookupBlob(bytes32)": {
            "params": {
              "blobHash": "The hash of the blob to lookup."
            },
            "returns": {
              "blob": "The found blob."
            }
          },
          "merkleProof(bytes32)": {
            "params": {
              "commitment": "The commitment leaf to proof inclusion in the tree for."
            },
            "returns": {
              "directionBits": "The direction bits for the proof.",
              "siblings": "The siblings constituting the path from the leaf to the root."
            }
          },
          "verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "params": {
              "transaction": "The transaction to verify."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "containsRoot(bytes32)": {
            "notice": "Checks if a commitment tree state root exists."
          },
          "execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "notice": "Executes a transaction by adding the commitments and nullifiers to the commitment tree and nullifier set, respectively."
          },
          "latestRoot()": {
            "notice": "Returns the latest  commitment tree state root."
          },
          "lookupBlob(bytes32)": {
            "notice": "Looks a blob up in the blob storage or reverts."
          },
          "merkleProof(bytes32)": {
            "notice": "Returns the Merkle proof and associated root for a commitment leaf in the tree."
          },
          "verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "notice": "Verifies a transaction by checking the delta, resource logic, and compliance proofs."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@risc0-ethereum/=lib/risc0-ethereum/contracts/src/",
        "ds-test/=lib/risc0-ethereum/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-deep/=lib/forge-deep/src/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "risc0-ethereum/=lib/risc0-ethereum/",
        "solady/=lib/forge-deep/lib/solady/src/",
        "solmate/=lib/forge-deep/lib/solady/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/ProtocolAdapter.sol": "ProtocolAdapter"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/elliptic-curve-solidity/contracts/EllipticCurve.sol": {
        "keccak256": "0x50ee7c49cd01a085214ce375a6f806f8fa0898f616247770a2e8d2f9b7a59d7b",
        "urls": [
          "bzz-raw://828da8f7309850b2afd6b5eaea78f3bac7678c666c1a92108abddb17c3286e4b",
          "dweb:/ipfs/Qmdv2jiGW1cfvCB5UP6MNGWGNVkQ2aAh89xG5uyinbS3hP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
        "keccak256": "0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6",
        "urls": [
          "bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd",
          "dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuardTransient.sol": {
        "keccak256": "0xe56ff5015046505f81f9d62671a784e933dd099db4c3a8fa8de598f20af2c5a3",
        "urls": [
          "bzz-raw://355863359b4a250f7016836ef9a9672578e898503896f70a0d42b80141586f3e",
          "dweb:/ipfs/QmXXzvoMSFNQf8nRbcyRap5qzcbekWuzbXDY5C8f68JiG3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol": {
        "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
        "urls": [
          "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
          "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/TransientSlot.sol": {
        "keccak256": "0xac673fa1e374d9e6107504af363333e3e5f6344d2e83faf57d9bfd41d77cc946",
        "urls": [
          "bzz-raw://5982478dbbb218e9dd5a6e83f5c0e8d1654ddf20178484b43ef21dd2246809de",
          "dweb:/ipfs/QmaB1hS68n2kG8vTbt7EPEzmrGhkUbfiFyykGGLsAr9X22"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
        "urls": [
          "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
          "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06",
        "urls": [
          "bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231",
          "dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y"
        ],
        "license": "MIT"
      },
      "lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol": {
        "keccak256": "0xae73e91e4d2829b0a88176584d876382b4b7540ff07c62cb947cdf9ea43d5cf3",
        "urls": [
          "bzz-raw://f2dd7da39a6f9b100fc1dcde565d799462cdc7d27722d2265317c3a01619c818",
          "dweb:/ipfs/Qmd3k3kcvrtfkLqVza4jHodbFH8wvq5vmfPtwekBKtPjmz"
        ],
        "license": "Apache-2.0"
      },
      "lib/risc0-ethereum/contracts/src/Util.sol": {
        "keccak256": "0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82",
        "urls": [
          "bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c",
          "dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"
        ],
        "license": "Apache-2.0"
      },
      "src/ProtocolAdapter.sol": {
        "keccak256": "0xc580850fa1c5177bf00aa5db0b47c581ce52d3f26754587b52a52811fd29682b",
        "urls": [
          "bzz-raw://5b0c7ac2e09fc22c41bbf14709d1b31a8bc2ee5a8e05c98c9e6bc63ed0a69ee3",
          "dweb:/ipfs/QmayALGT7PF38nDpaePvmrGAi3jasZncud1xsbKwHGNTQB"
        ],
        "license": "MIT"
      },
      "src/Types.sol": {
        "keccak256": "0xee73647a51307b5eca733e847a26fe1645d4620882c9dbad37cfe7373f3c59d8",
        "urls": [
          "bzz-raw://722e3ebbeeb0e9001e7dfc31910469ee133d11542582a75590e55cd9b3c205c8",
          "dweb:/ipfs/QmcCdE3BABxY8vMB48679m56VpqVKAzWzYAXNC2bVR69Co"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBlobStorage.sol": {
        "keccak256": "0xcf32467a2efcd49bc44370ad1bc6530699f2dbb13c42a1c942de4299b84652fb",
        "urls": [
          "bzz-raw://f434f6b2d5d625e4c3e6b150f7803dae3bc042baecc942a1b68ebe4bf134737a",
          "dweb:/ipfs/QmbLWBiNmzeNwik7PKi2W8FQMsGMt8jZHzw34JMNd4AZYu"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICommitmentAccumulator.sol": {
        "keccak256": "0xe3f2091c1aac0fc3244d2ae5877b1acecce762c2e349abec6ce03cb840df4157",
        "urls": [
          "bzz-raw://697d2b095271884c05e6b1891fa43589ef836c6943384503541d793585bddc9e",
          "dweb:/ipfs/QmUzWCMnupyub7VDT58p4vBYwo7s1A4PBLbF8iA5SAtv6c"
        ],
        "license": "MIT"
      },
      "src/interfaces/IForwarder.sol": {
        "keccak256": "0xf74120232baf3b69e5f3af0cee2e22a88718bb23747f577433b362222efb19b1",
        "urls": [
          "bzz-raw://c053cd5a9605a26dbebb2497ba4f6e348b4efe0ea6a1f4ea3e66fec252ff630c",
          "dweb:/ipfs/QmesTNpmnMhDngxgcdh5y2BEXAn9rwPSWMvHAyMvUsu9Lq"
        ],
        "license": "MIT"
      },
      "src/interfaces/INullifierSet.sol": {
        "keccak256": "0x263ee8c0961ea5aef2a7e12e8e4ff21c7f86eccb80d62cd317f5545265a510df",
        "urls": [
          "bzz-raw://6df48f0e97e493be9877180ab7b22a9b6ec14d674204535881250c99f6919fb1",
          "dweb:/ipfs/Qma2DSoGrmYWxpiTDqxuB1Wir3txbjL5PxPGLUSRNPFUqs"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolAdapter.sol": {
        "keccak256": "0x888d92cd3637520b2e9a787ab1f07b70417dc5adb73dadd6ad6689dfc6c1f452",
        "urls": [
          "bzz-raw://c9a6b37166a5790f374c8a18ae5ddd28c481db6ce28105c45c8ff795d4cb571b",
          "dweb:/ipfs/QmQRLg7YSJY75GK1oNieRmjKVFcKKcxMCzHQCEcwRc4NVr"
        ],
        "license": "MIT"
      },
      "src/libs/ComputableComponents.sol": {
        "keccak256": "0xf4e7c56d96ca689d1f26e78536fa4414ca9df0f691f4a80a937fa376d90c7041",
        "urls": [
          "bzz-raw://63f9f8cb3ff09f2705043e53e1bc4f0f55472352198b85f83f5357a51f8c2da6",
          "dweb:/ipfs/QmQBE3t3KHdVW8N5EmjDD9nBMkMZhrdFbk18oLqNBX6dqJ"
        ],
        "license": "MIT"
      },
      "src/libs/EllipticCurveK256.sol": {
        "keccak256": "0x5e683c6c694135a244b938f680b33e3d7380b10a2aa1ddd1d812dea88c0c5857",
        "urls": [
          "bzz-raw://d6161ad3e7f3887859e67393ddfd87701124acbaced24763339a65b165882385",
          "dweb:/ipfs/QmaoXZCMbnjgdarBZkU3CwvNhbriaE3TQZfX5sUR8ajc3j"
        ],
        "license": "MIT"
      },
      "src/libs/MerkleTree.sol": {
        "keccak256": "0x536b05191ae1e1881e2896f8aade132dc4fcb28fefc3132c755d854bb02aa6d1",
        "urls": [
          "bzz-raw://17000b942aa8d78bf4ccc3b458d7c53d4ce440fcfae7e8d381511ffd05eeb850",
          "dweb:/ipfs/QmYjwhK4DnobCBuFN53uXpQRBzWSb3C9Ld3yfqpgkSdVBC"
        ],
        "license": "MIT"
      },
      "src/libs/SHA256.sol": {
        "keccak256": "0x85cda44e257c0d69a4e9a5d5300154f7eb0787d40580c263e0a6517717c17cb9",
        "urls": [
          "bzz-raw://5c2d664f1b843c9068a4fae25cf44355cbc0ab3e095b55eddfe3105836dd5982",
          "dweb:/ipfs/QmQg4GXwtL6hxQQa7jjepj6Sq65d89CD6awx6R7PwVY42u"
        ],
        "license": "MIT"
      },
      "src/proving/Delta.sol": {
        "keccak256": "0x8f4d3c0023f73bcfea3221808d5c1a96d2d41f9efa13e76d7405da694c611196",
        "urls": [
          "bzz-raw://ec94ccf7227b31aa123b3cc5c4634393bd8e14d2a98c2fb09777d168dfb0ef26",
          "dweb:/ipfs/QmTyj2nX2eJxNBk1vLiup9kHGcJbHHbVXzzgXidAuXCQCX"
        ],
        "license": "MIT"
      },
      "src/proving/Logic.sol": {
        "keccak256": "0x3fa3b748b7bf36c9766679f2cf273e00f19b0f338de39b3cf94fa888647b0405",
        "urls": [
          "bzz-raw://cf6023a2d1f3846b8d678b738acfe6c28ced7f8ce268ae4499bd814297b7f22c",
          "dweb:/ipfs/QmTbtrGKsVGNpTaRmTBw3awAE5T2c4mu4bwjbD9SnGXXgU"
        ],
        "license": "MIT"
      },
      "src/state/BlobStorage.sol": {
        "keccak256": "0x11ef2ffeaa43a67f8beaf48b4fed2721052b96c01b611bd259fab8907f4d05ec",
        "urls": [
          "bzz-raw://3c4a32137ed9dcbacf6eef632814840a24eda4f889fbdfeec1edc879df458b9b",
          "dweb:/ipfs/QmQqvnA5VVXSG5fcsWAcu1UVXE8fQL4HsKN6royU95ruD3"
        ],
        "license": "MIT"
      },
      "src/state/CommitmentAccumulator.sol": {
        "keccak256": "0xdfd257f017db48747f2b7d6dad897bcd11c4a2c6949cdc343cd969848d284414",
        "urls": [
          "bzz-raw://c260e1f46e2355dcc21832aa2920103f563fa02c8edf803762dbcaeed88683c9",
          "dweb:/ipfs/QmYs9P6yrEMzRCLyDPJDAKGdsBRJhoNDh6xHArJpAM9pog"
        ],
        "license": "MIT"
      },
      "src/state/NullifierSet.sol": {
        "keccak256": "0x8314d0e2b8115d36a89fc1b0dd3eb17f5fef8b70831a374425c32d2f6c2f1a90",
        "urls": [
          "bzz-raw://5a0d0f5e1b4f466fc95091d7c45199dc1caf564c4d48e30fd229c0aef5312d05",
          "dweb:/ipfs/QmX9pGdMrz9ZqR98W3uxLRmiE3Esm7YQNvLxNDcC82H3oT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 35
}