{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "riscZeroVerifier",
          "type": "address",
          "internalType": "contract IRiscZeroVerifier"
        },
        {
          "name": "complianceCircuitID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "commitmentTreeDepth",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "actionTreeDepth",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "containsRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "isContained",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "transaction",
          "type": "tuple",
          "internalType": "struct Transaction",
          "components": [
            {
              "name": "actions",
              "type": "tuple[]",
              "internalType": "struct Action[]",
              "components": [
                {
                  "name": "logicProofs",
                  "type": "tuple[]",
                  "internalType": "struct LogicProof[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct LogicInstance",
                      "components": [
                        {
                          "name": "tag",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "isConsumed",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "actionTreeRoot",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "ciphertext",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "appData",
                          "type": "tuple[]",
                          "internalType": "struct ExpirableBlob[]",
                          "components": [
                            {
                              "name": "deletionCriterion",
                              "type": "uint8",
                              "internalType": "enum DeletionCriterion"
                            },
                            {
                              "name": "blob",
                              "type": "bytes",
                              "internalType": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "logicRef",
                      "type": "bytes32",
                      "internalType": "bytes32"
                    }
                  ]
                },
                {
                  "name": "complianceUnits",
                  "type": "tuple[]",
                  "internalType": "struct ComplianceUnit[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct ComplianceInstance",
                      "components": [
                        {
                          "name": "consumed",
                          "type": "tuple",
                          "internalType": "struct ConsumedRefs",
                          "components": [
                            {
                              "name": "nullifier",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "commitmentTreeRoot",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "created",
                          "type": "tuple",
                          "internalType": "struct CreatedRefs",
                          "components": [
                            {
                              "name": "commitment",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "unitDeltaX",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "unitDeltaY",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "resourceCalldataPairs",
                  "type": "tuple[]",
                  "internalType": "struct ResourceForwarderCalldataPair[]",
                  "components": [
                    {
                      "name": "carrier",
                      "type": "tuple",
                      "internalType": "struct Resource",
                      "components": [
                        {
                          "name": "logicRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "labelRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "valueRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "nullifierKeyCommitment",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "quantity",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "nonce",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "randSeed",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "ephemeral",
                          "type": "bool",
                          "internalType": "bool"
                        }
                      ]
                    },
                    {
                      "name": "call",
                      "type": "tuple",
                      "internalType": "struct ForwarderCalldata",
                      "components": [
                        {
                          "name": "untrustedForwarder",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "input",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "output",
                          "type": "bytes",
                          "internalType": "bytes"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "deltaProof",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "latestRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lookupBlob",
      "inputs": [
        {
          "name": "blobHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "blob",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "merkleProof",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "siblings",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        },
        {
          "name": "directionBits",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verify",
      "inputs": [
        {
          "name": "transaction",
          "type": "tuple",
          "internalType": "struct Transaction",
          "components": [
            {
              "name": "actions",
              "type": "tuple[]",
              "internalType": "struct Action[]",
              "components": [
                {
                  "name": "logicProofs",
                  "type": "tuple[]",
                  "internalType": "struct LogicProof[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct LogicInstance",
                      "components": [
                        {
                          "name": "tag",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "isConsumed",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "actionTreeRoot",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "ciphertext",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "appData",
                          "type": "tuple[]",
                          "internalType": "struct ExpirableBlob[]",
                          "components": [
                            {
                              "name": "deletionCriterion",
                              "type": "uint8",
                              "internalType": "enum DeletionCriterion"
                            },
                            {
                              "name": "blob",
                              "type": "bytes",
                              "internalType": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "logicRef",
                      "type": "bytes32",
                      "internalType": "bytes32"
                    }
                  ]
                },
                {
                  "name": "complianceUnits",
                  "type": "tuple[]",
                  "internalType": "struct ComplianceUnit[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct ComplianceInstance",
                      "components": [
                        {
                          "name": "consumed",
                          "type": "tuple",
                          "internalType": "struct ConsumedRefs",
                          "components": [
                            {
                              "name": "nullifier",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "commitmentTreeRoot",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "created",
                          "type": "tuple",
                          "internalType": "struct CreatedRefs",
                          "components": [
                            {
                              "name": "commitment",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "unitDeltaX",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "unitDeltaY",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "resourceCalldataPairs",
                  "type": "tuple[]",
                  "internalType": "struct ResourceForwarderCalldataPair[]",
                  "components": [
                    {
                      "name": "carrier",
                      "type": "tuple",
                      "internalType": "struct Resource",
                      "components": [
                        {
                          "name": "logicRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "labelRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "valueRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "nullifierKeyCommitment",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "quantity",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "nonce",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "randSeed",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "ephemeral",
                          "type": "bool",
                          "internalType": "bool"
                        }
                      ]
                    },
                    {
                      "name": "call",
                      "type": "tuple",
                      "internalType": "struct ForwarderCalldata",
                      "components": [
                        {
                          "name": "untrustedForwarder",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "input",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "output",
                          "type": "bytes",
                          "internalType": "bytes"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "deltaProof",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verifyMerkleProof",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "path",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        },
        {
          "name": "directionBits",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "BlobStored",
      "inputs": [
        {
          "name": "blobHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "deletionCriterion",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum DeletionCriterion"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CommitmentAdded",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NullifierAdded",
      "inputs": [
        {
          "name": "nullifier",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RootAdded",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransactionExecuted",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "transaction",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Transaction",
          "components": [
            {
              "name": "actions",
              "type": "tuple[]",
              "internalType": "struct Action[]",
              "components": [
                {
                  "name": "logicProofs",
                  "type": "tuple[]",
                  "internalType": "struct LogicProof[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct LogicInstance",
                      "components": [
                        {
                          "name": "tag",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "isConsumed",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "actionTreeRoot",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "ciphertext",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "appData",
                          "type": "tuple[]",
                          "internalType": "struct ExpirableBlob[]",
                          "components": [
                            {
                              "name": "deletionCriterion",
                              "type": "uint8",
                              "internalType": "enum DeletionCriterion"
                            },
                            {
                              "name": "blob",
                              "type": "bytes",
                              "internalType": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "logicRef",
                      "type": "bytes32",
                      "internalType": "bytes32"
                    }
                  ]
                },
                {
                  "name": "complianceUnits",
                  "type": "tuple[]",
                  "internalType": "struct ComplianceUnit[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct ComplianceInstance",
                      "components": [
                        {
                          "name": "consumed",
                          "type": "tuple",
                          "internalType": "struct ConsumedRefs",
                          "components": [
                            {
                              "name": "nullifier",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "commitmentTreeRoot",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "created",
                          "type": "tuple",
                          "internalType": "struct CreatedRefs",
                          "components": [
                            {
                              "name": "commitment",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "unitDeltaX",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "unitDeltaY",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "resourceCalldataPairs",
                  "type": "tuple[]",
                  "internalType": "struct ResourceForwarderCalldataPair[]",
                  "components": [
                    {
                      "name": "carrier",
                      "type": "tuple",
                      "internalType": "struct Resource",
                      "components": [
                        {
                          "name": "logicRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "labelRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "valueRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "nullifierKeyCommitment",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "quantity",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "nonce",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "randSeed",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "ephemeral",
                          "type": "bool",
                          "internalType": "bool"
                        }
                      ]
                    },
                    {
                      "name": "call",
                      "type": "tuple",
                      "internalType": "struct ForwarderCalldata",
                      "components": [
                        {
                          "name": "untrustedForwarder",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "input",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "output",
                          "type": "bytes",
                          "internalType": "bytes"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "deltaProof",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "BlobEmpty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "BlobHashMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "BlobNotFound",
      "inputs": [
        {
          "name": "blobHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierAppDataMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierCommitmentNotFound",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierKindMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierLabelMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CommitmentIndexOutOfBounds",
      "inputs": [
        {
          "name": "current",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "limit",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "CommitmentMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "DeletionCriterionNotSupported",
      "inputs": [
        {
          "name": "deletionCriterion",
          "type": "uint8",
          "internalType": "enum DeletionCriterion"
        }
      ]
    },
    {
      "type": "error",
      "name": "DeltaMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "actual",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureLength",
      "inputs": [
        {
          "name": "length",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureS",
      "inputs": [
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "EmptyCommitment",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ForwarderCallOutputMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "actual",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidCommitmentRef",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidNullifierRef",
      "inputs": [
        {
          "name": "nullifier",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidPathLength",
      "inputs": [
        {
          "name": "expected",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "actual",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidRoot",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidRootRef",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "LogicProofTagNotFound",
      "inputs": [
        {
          "name": "tag",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "LogicRefMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "NonEmptyDelta",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NonExistentLeafIndex",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "NonExistingCommitment",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "NonExistingRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "PreExistingCommitment",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "PreExistingNullifier",
      "inputs": [
        {
          "name": "nullifier",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "PreExistingRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RootMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "TreeCapacityExceeded",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60e0806040523461016b57608081613183803803809161001f828561016f565b83398101031261016b578051906001600160a01b038216820361016b5760208101519160ff61005c6060610055604086016101a6565b94016101a6565b9216806002557fcc1d2f838445db7aec431df9ee8a871f40e7aa5e064fc056633ef8c60fab7b06905f905b80821061010a5750505f805561009c816101b4565b156100f8575060805260c05260a052604051612f429081610241823960805181818161189b0152818161191701528181611c300152611cca015260a05181611c88015260c0518181816117530152818161178201526117b10152f35b63db788c2b60e01b5f5260045260245ffd5b90915f60209160028252808584842001556040518381019180835260408201526040815261013960608261016f565b604051918291518091835e8101838152039060025afa156101605760015f51920190610087565b6040513d5f823e3d90fd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761019257604052565b634e487b7160e01b5f52604160045260245ffd5b519060ff8216820361016b57565b805f52600460205260405f2054155f1461023b5760035468010000000000000000811015610192576001810180600355811015610227577fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018190556003545f9182526004602052604090912055600190565b634e487b7160e01b5f52603260045260245ffd5b505f9056fe60806040526004361015610011575f80fd5b5f3560e01c80632583f76314610f4857806348cbdfca14610f1457806359a8928314610d675780638310d48514610d30578063c235cd9e14610abe578063d7b0fef114610a385763ff4ffb8514610066575f80fd5b346104045761007436610f60565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c610a105760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d6100c7816114bd565b6100d2600954610fb8565b8060095560405160208152606081016100eb8480610fc6565b80926040602086015252608083019060808360051b8501019281925f925b8284106106585788887f5c505a4208f28f3ee85822c85bceaa696c30a8a9833fa568a5fd614133912e0289806101588b6101466020880188611019565b90601f19858403016040860152611069565b0390a25f9061016781806111e3565b9190505f5b8281106101f6578361017d816129a9565b156101cb577f388a5f4af784e29fc791e14e90d372b6057e8379d9d5556e843545420c675dea5f80a25f7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d005b7fdb788c2b000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b61020a8161020484806111e3565b9061126a565b61021481806111e3565b90505f5b8181106104135750506040810161022f81836111e3565b9290505f5b838110610247575050505060010161016c565b6102da61026c6102618361025b87876111e3565b906112ed565b610100810190611237565b5f73ffffffffffffffffffffffffffffffffffffffff61028b83612510565b1661029960208401846113e2565b836040939293518097819582947f2dec7eb1000000000000000000000000000000000000000000000000000000008452602060048501526024840191611069565b03925af1918215610408575f92610388575b508151602083012090604081019161030e61030784846113e2565b3691611487565b602081519101200361032557505050600101610234565b61038491610332916113e2565b9190926103726040519485947fc504fada000000000000000000000000000000000000000000000000000000008652604060048701526044860191611069565b90600319848303016024850152610f93565b0390fd5b9091503d805f833e61039a8183611376565b8101906020818303126104045780519067ffffffffffffffff8211610404570181601f82011215610404578051906103d18261146b565b926103df6040519485611376565b8284526020838301011161040457815f9260208093018386015e83010152908a6102ec565b5f80fd5b6040513d5f823e3d90fd5b61042e6104248261020486806111e3565b6020810190611281565b60208101358015158103610404571561052157803561044c81612939565b50600654905f1982019182116104f4577f48baa580cd3e9c4040ffa9507f688e0d988bb8b15450fb680ce90fe52f7e544a5f80a3905b608082019161049183826111e3565b9050155b80156104ac5750506104a79150610fb8565b610218565b90916104c16104bb85856111e3565b906112b4565b906104cf60208301836113e2565b92356002811015610404576104ed936104e79261262e565b50610fb8565b9190610495565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b80975035600254905f549061053582610fb8565b5f55600182018083116104f4576001841b8111610630578282945f905b80821061059457505050815f52600560205260405f20557f0c825ce0b2f71c91fa27e49984551a39d6f4db65958d2cf59a0ce45c3948312f5f80a39690610482565b909195825f52600160205260405f20875f526020528060405f205560018716155f146105fb5760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8301546001916105ef91906128e1565b965b811c920190610552565b825f52600160205260405f20905f198801908882116104f45760019261062a925f5260205260405f20546128e1565b966105f1565b7f494a639d000000000000000000000000000000000000000000000000000000005f5260045ffd5b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087820301835261068e86836111b1565b606082019061069d8180610fc6565b809360608652526080840160808460051b86010193825f905b82821061095e5750505050506106cf6020820182610fc6565b84849294036020860152808252602082019060208160051b8401019480935f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0181360301925b8481106108c45750505050505050806040610732920190610fc6565b926040818403910152828252602082019060208460051b8401019381935f927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee181360301905b83851061079b575050505050505060208060019297019301940192919390610109565b90919293949596601f1984820301875287358381121561040457826108199101803583526020810135602084015260408101356040840152606081013560608401526080810135608084015260a081013560a084015260c081013560c084015261080760e08201611089565b151560e08401526101008101906111b1565b61012061010083015280359173ffffffffffffffffffffffffffffffffffffffff8316809303610404576108b5602092826001956101208695015261088461087961086686850185611019565b6060610140860152610180850191611069565b926040810190611019565b916101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee082860301910152611069565b99019701950193929190610778565b90919293949597601f1984820301875288359085821215610404576020809161094f8660019501838061090a6108fa8480611019565b6101008852610100880191611069565b9401910160c08091803584526020810135602085015260408101356040850152606081013560608501526080810135608085015260a081013560a08501520135910152565b9a019701959493929101610716565b90919293957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8088820301855261099487836111b1565b6109af6109a18280611019565b606085526060850191611069565b6020820135917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030183121561040457836040806109fd858560209860019a8a990389880152016110cc565b93013591015298019501939201906106b6565b7f3ee5aeb5000000000000000000000000000000000000000000000000000000005f5260045ffd5b34610404575f600319360112610404576003545f1981018181116104f4576003541115610a915760035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85a0154604051908152602090f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b346104045760206003193601126104045760043560025415610a915760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace548114610d0857805f52600560205260405f2054908115610cdd575f198201918083116104f4575f54809111610cae57505f8281527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205490808203610c8057825f90600254610b74816113b1565b915f905b828210610bcc5750505060405190604082019260408352815180945260206060840192015f945b808610610bb457505082935060208301520390f35b90926020806001928651815201940195019490610b9f565b60018116610c5557815f52600160205260405f209060018101918282116104f4576001925f5260205260405f20549582841b17955b80610c45575060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace830154610c398487611457565b525b811c910190610b78565b610c4f8487611457565b52610c3b565b815f52600160205260405f20905f198101918183116104f4576001925f5260205260405f2054610c01565b7fc9e0e757000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b827fdbc744cd000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fff34f2b6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faac1fcc6000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461040457602060031936011261040457610d63610d4f600435612370565b604051918291602083526020830190610f93565b0390f35b346104045760806003193601126104045760443560043567ffffffffffffffff821161040457366023830112156104045781600401359167ffffffffffffffff83116104045760248360051b8201013681116104045760643591600254808603610ee45750610de1845f52600460205260405f2054151590565b15610eb857610def85611399565b94610dfd6040519687611376565b8552602401602085015b828210610ea857505050602435928051905f925b828410610e5b578585818103610e2d57005b7fa0d3b062000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b909192946001908183881c16155f14610e8d57610e8290610e7c8886611457565b516128e1565b955b01929190610e1b565b610ea290610e9b8886611457565b51906128e1565b95610e84565b8135815260209182019101610e07565b837ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b85907f88b3170e000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b34610404576020600319360112610404576020610f3e6004355f52600460205260405f2054151590565b6040519015158152f35b3461040457610f5e610f5936610f60565b6114bd565b005b6020600319820112610404576004359067ffffffffffffffff821161040457600319826040920301126104045760040190565b90601f19601f602080948051918291828752018686015e5f8582860101520116010190565b5f1981146104f45760010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561040457016020813591019167ffffffffffffffff8211610404578160051b3603831361040457565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561040457016020813591019167ffffffffffffffff821161040457813603831361040457565b601f8260209493601f1993818652868601375f8582860101520116010190565b3590811515820361040457565b908135916002831015610404576110b96040916110c99484526020810190611019565b9190928160208201520191611069565b90565b90813581526110dd60208301611089565b151560208201526040820135604082015261111d6111126111016060850185611019565b60a0606086015260a0850191611069565b926080810190610fc6565b9290916080818303910152828152602081019260208160051b83010193835f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc182360301945b848410611175575050505050505090565b90919293949596601f198282030183528735878112156104045760206111a060019387839401611096565b990193019401929195949390611164565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa182360301811215610404570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610404570180359067ffffffffffffffff821161040457602001918160051b3603831361040457565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa181360301821215610404570190565b90821015610a91576110c99160051b810190611237565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6181360301821215610404570190565b9015610a91578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc181360301821215610404570190565b9190811015610a915760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee181360301821215610404570190565b6040810190811067ffffffffffffffff82111761134957604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f601f19910116810190811067ffffffffffffffff82111761134957604052565b67ffffffffffffffff81116113495760051b60200190565b906113bb82611399565b6113c86040519182611376565b828152601f196113d88294611399565b0190602036910137565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610404570180359067ffffffffffffffff82116104045760200191813603831361040457565b9061144d9060409396959496606084526060840191611069565b9460208201520152565b8051821015610a915760209160051b010190565b67ffffffffffffffff811161134957601f01601f191660200190565b9291926114938261146b565b916114a16040519384611376565b829481845281830111610404578281602093845f960137010152565b604080516114cb8282611376565b8136823760017f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b87f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179882806122e2565b50806122da575b1561227d575f928360016401000003d019835b6121f15750505050906401000003d0198092818086800980920994099009602083015281529161156481806111e3565b90505f805b8282106121c45761157a91506113b1565b905f5f5b8281106116e75750506115d55750505080511590816115c8575b50156115a057565b7fe073516d000000000000000000000000000000000000000000000000000000005f5260045ffd5b602091500151155f611598565b825160208101918260208251919201905f5b8181106116d15750505091816116095f9360209503601f198101835282611376565b8551918291518091835e8101838152039060025afa156116c7576116649273ffffffffffffffffffffffffffffffffffffffff9261165b84936116556103075f519260208101906113e2565b90612bc1565b90969196612bfb565b602082519201519080519160208301938452818301528152611687606082611376565b51902016911690808203611699575050565b7fe6d44b4c000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b50513d5f823e3d90fd5b82518452602093840193909201916001016115e7565b6116f58161020487806111e3565b86810161170281836111e3565b9190505f5b828110611eea5750505061171e60208201826111e3565b5f91505b808210611af057505061173581806111e3565b9050611740816113b1565b5f5b828110611aca5750611779600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b6113b1565b905f5b600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b8110611a6f575050600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b5b600181116119b15750805115610a915760200151915f5b8281106117fd575050505060010161157e565b61180b8161020484806111e3565b6020810190858c61181c8484611281565b01350361197457908160205f8e6118368461183f976113e2565b96909585611281565b908051906118688261185a87820195888752848301906110cc565b03601f198101845283611376565b51918291518091835e8101838152039060025afa1561196a575f519073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b15610404576118fe8e925f94845196879586957fab750e7500000000000000000000000000000000000000000000000000000000875201359160048601611433565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611960579060019291611950575b50016117ea565b5f61195a91611376565b5f611949565b8b513d5f823e3d90fd5b8c513d5f823e3d90fd5b61198086928d92611281565b0135907f7c532e31000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f5b8160011c81106119c6575060011c6117d3565b8060011b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821682036104f4576119fd8185611457565b5190600181018091116104f4576020918d611a195f9388611457565b519080519185830193845281830152808252611a36606083611376565b51918291518091835e8101838152039060025afa15611a65576001905f51611a5e8286611457565b52016119b3565b8a513d5f823e3d90fd5b600190825181105f14611a9957611a868184611457565b51611a918286611457565b525b0161177c565b7fcc1d2f838445db7aec431df9ee8a871f40e7aa5e064fc056633ef8c60fab7b06611ac48286611457565b52611a93565b80611ade61042460019361020488806111e3565b35611ae98285611457565b5201611742565b9098611aff60208401846111e3565b8b9291921015610a91578a60051b820135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0183360301821215610404576020828401019660608385010135611b60815f52600460205260405f2054151590565b15611ebf575087355f5260076020528b5f2054611e9257608083850101355f5260056020528b5f2054611e60578b8860205f611b9e888801806113e2565b939094805190611bed858301809460c08091803584526020810135602085015260408101356040850152606081013560608501526080810135608085015260a081013560a08501520135910152565b60e08252611bfd61010083611376565b51918291518091835e8101838152039060025afa15611e56575f519173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b15610404575f918f611cb1905194859384937fab750e750000000000000000000000000000000000000000000000000000000085527f00000000000000000000000000000000000000000000000000000000000000009160048601611433565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611e5657611e46575b50611d0d611d0587806111e3565b8a35916125af565b8c808587010135910135808203611e18575050611d35611d2c82610fb8565b9835918b611457565b52611d50611d4386806111e3565b60808587010135916125af565b8b60a08486010135910135808203611e18575050908a60019392611d7389610fb8565b98611d8560808587010135918d611457565b52871580611e10575b15611dbb57509060e0915192611da38461132d565b0160c0810135835201356020820152995b0190611722565b9092611e039260e0855191611dcf8361132d565b60c08185010135835260208301930101358252611dee85519586611376565b8d3686376020835193015190519151926129fe565b6020830152815299611db4565b508d15611d8e565b7f18f639d8000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f611e5091611376565b5f611cf7565b8d513d5f823e3d90fd5b608083857f96539bd4000000000000000000000000000000000000000000000000000000005f5201013560045260245ffd5b877f39a940c5000000000000000000000000000000000000000000000000000000005f523560045260245ffd5b7ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b611ef88161025b84876111e3565b611f096102618361025b86896111e3565b60205f8d611f173686612531565b908382519201519080519185830193845281830152808252611f3a606083611376565b51918291518091835e8101838152039060025afa15611960575f51600460208e73ffffffffffffffffffffffffffffffffffffffff611f7886612510565b169051928380927f033f96a40000000000000000000000000000000000000000000000000000000082525afa9081156121ba575f91612189575b5080820361215b5750509061206060205f848f956120488761203a611ff7611fdb606095612510565b95612028611feb8a8301836113e2565b939092868101906113e2565b929093865198899773ffffffffffffffffffffffffffffffffffffffff8e8a019c168c528801526080870191611069565b91601f19858403016060860152611069565b03601f198101835282611376565b519020946120568a806111e3565b9490953690612531565b9080519060e08583019380518552868101518385015282810151606085015260608101516080850152608081015160a085015260a081015160c085015260c0810151828501520151151561010083015261010082526120c161012083611376565b51918291518091835e8101838152039060025afa1561196a576121186121026104bb8f946104246120f89161203a965f51916125af565b60808101906111e3565b8351928391602083019560208752830190611096565b5190209080820361212d575050600101611707565b7f64cc8b14000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fd3167e32000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b90506020813d82116121b2575b816121a360209383611376565b8101031261040457515f611fb2565b3d9150612196565b8e513d5f823e3d90fd5b6121db6121d58361020487806111e3565b806111e3565b905081018091116104f457600190910190611569565b61220084829893949598612611565b928094612250576401000003d0199084096401000003d01903906401000003d01982116104f4576122416401000003d019612247935f95089598809561261b565b90612503565b92909183611534565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001611521565b6401000003d019915014155f61151a565b5f604051612302602082611376565b525f6040518180805e5260205f808060025afa15610408575f5190565b90600182811c92168015612366575b602083101461233957565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f169161232e565b906123796122f3565b82146124db57815f52600860205260405f2060405190815f82549261239d8461231f565b9081845260208401946001811690815f146124a05750600114612461575b5050916123cd5f926020940385611376565b604051809185518091835e8101838152039060025afa15610408575f516123f26122f3565b810361242457837f632989d6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b90919281810361243357505090565b7f1844c87b000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f908152602081209092505b81831061248457505081016020016123cd5f6123bb565b602091935080600191548385890101520191019091849261246d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686525050151560051b820160200190506123cd5f6123bb565b7ff82ea8b4000000000000000000000000000000000000000000000000000000005f5260045ffd5b919082039182116104f457565b3573ffffffffffffffffffffffffffffffffffffffff811681036104045790565b91908261010091031261040457604051610100810181811067ffffffffffffffff8211176113495760405260e06125aa818395803585526020810135602086015260408101356040860152606081013560608601526080810135608086015260a081013560a086015260c081013560c086015201611089565b910152565b909291925f5b8181106125e857847f4e90c0bf000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b846125f761042483858761126a565b3514612605576001016125b5565b916110c993945061126a565b8115612250570490565b818102929181159184041417156104f457565b919060205f6040518386823780848101838152039060025afa15610408575f51926126576122f3565b84146124db57600283109182156127105783612674575050505090565b845f52600860205260405f20604051905f908054906126928261231f565b91600181169081156128ab5750600114612878575b5050816020925f92039060025afa15610408575f516126c46122f3565b146126d0575050505090565b9294919390926001861461273d5785857f4d511600000000000000000000000000000000000000000000000000000000005f52156127105760045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b9193509193506001827f2266f858e35b42156890bf9a1a4dd4ac86bcaf4e1e8a1669096531ac46c9728b5f80a3815f52600860205260405f209067ffffffffffffffff811161134957612790825461231f565b601f8111612833575b505f601f82116001146127d25781929394955f926127c7575b50505f198260011b9260031b1c191617905590565b013590505f806127b2565b601f19821695835f5260205f20915f5b88811061281b57508360019596979810612802575b505050811b01905590565b5f1960f88560031b161c199101351690555f80806127f7565b909260206001819286860135815501940191016127e2565b825f5260205f20601f830160051c8101916020841061286e575b601f0160051c01905b8181106128635750612799565b5f8155600101612856565b909150819061284d565b9091505f5260205f205f905b82821061289757505081018160206126a7565b600181602092548487015201910190612884565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168552505080151502820190508160206126a7565b5f9060209260405190848201928352604082015260408152612904606082611376565b604051918291518091835e8101838152039060025afa15610408575f5190565b8054821015610a91575f5260205f2001905f90565b805f52600760205260405f2054155f146129a457600654680100000000000000008110156113495761298d6129778260018594016006556006612924565b81939154905f199060031b92831b921b19161790565b9055600654905f52600760205260405f2055600190565b505f90565b805f52600460205260405f2054155f146129a45760035468010000000000000000811015611349576129e76129778260018594016003556003612924565b9055600354905f52600460205260405f2055600190565b9093929091808303612ba857506401000003d019908408612a2157505f91508190565b6401000003d0198380096401000003d0195f8180808086880960040995800960030908906401000003d019918284800883038381116104f4578390818380090893848403928484116104f457848091800960080984038481116104f45784600193818096819508900908950960020992905b8315158481612b97575b5080612b8f575b15612b31575f938460016401000003d019835b612ad85750505050906401000003d019809281808780098092099509900990565b612ae784829993949599612611565b928094612250576401000003d0199084096401000003d01903906401000003d01982116104f4576122416401000003d019612b28935f95089599809561261b565b92909183612ab7565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001612aa4565b6401000003d019915014155f612a9d565b612bba93946401000003d01993612ca6565b9291612a93565b8151919060418303612bf157612bea9250602082015190606060408401519301515f1a90612eb3565b9192909190565b50505f9160029190565b60048110156127105780612c0d575050565b60018103612c3d577ff645eedf000000000000000000000000000000000000000000000000000000005f5260045ffd5b60028103612c7157507ffce698f7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b600314612c7b5750565b7fd78bce0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9492909391851580612eab575b612ea057801580612e98575b612e9057604051608091612cd38383611376565b8236833784156122505784600180098083529385856001099860208401998a52604084019286845287845160010993606086019485526040519a878c01958c871067ffffffffffffffff881117611349578a80979581969482956040525190098d525190099460208b019586525190099860408901998a52519009606087019081528651885114801590612e84575b15612e2657849283808093816040519c85612d7e8f9788611376565b368737518c51612d8e9083612503565b90088452518551612d9f9083612503565b90089860208301998a5281808b8180808089518a5190099360408a019485528185518b5190096060909a01998a525180098851612ddc9083612503565b90088180875185519009600209612df39083612503565b90089c51935190519009612e078c83612503565b90089009925190519009612e1b9083612503565b900894510991929190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b50815181511415612d62565b505050600190565b508115612cbf565b945092506001919050565b508415612cb3565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612f37579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610408575f5173ffffffffffffffffffffffffffffffffffffffff811615612f2d57905f905f90565b505f906001905f90565b5050505f916003919056",
    "sourceMap": "909:10159:44:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;909:10159:44;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;17853:72:23;1336:11:54;17853:72:23;260:66:55;1425:13:54;-1:-1:-1;1420:185:54;1440:13;;;;;;260:66:55;;-1:-1:-1;260:66:55;;6669:23:35;;;:::i;:::-;1368:24:59;1364:65;;2227:46:44;909:10159;2227:46;2283:36;;2329:44;;909:10159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2329:44;909:10159;;;;;2283:36;909:10159;;;;;;;;;;;;;;;;1364:65:59;1401:28;;;-1:-1:-1;1401:28:59;;909:10159:44;;-1:-1:-1;1401:28:59;1455:3:54;909:10159:44;;-1:-1:-1;909:10159:44;;1336:11:54;909:10159:44;;;;;;;;260:66:55;909:10159:44;;537:16:55;;;909:10159:44;;;;;;;;;537:16:55;;;909:10159:44;537:16:55;;:::i;:::-;909:10159:44;;;;;;;;;;;;;;;530:24:55;;1336:11:54;530:24:55;;;;;909:10159:44;-1:-1:-1;530:24:55;1455:3:54;260:66:55;1425:13:54;;;530:24:55;909:10159:44;;;-1:-1:-1;909:10159:44;;;;;;-1:-1:-1;909:10159:44;;;;;;;-1:-1:-1;;909:10159:44;;;;-1:-1:-1;;;;;909:10159:44;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;909:10159:44;;;;;-1:-1:-1;909:10159:44;;;;;;;;;;;:::o;2336:406:35:-;909:10159:44;;;5006:14:35;909:10159:44;;;;;;5006:26:35;2415:321;909:10159:44;;;1369:6:59;909:10159:44;;;;;;;5006:14:35;909:10159:44;;;1369:6:59;909:10159:44;;;;;;;;;;;1369:6:59;909:10159:44;;;;;5006:14:35;909:10159:44;;;;;;260:66:55;5006:14:35;;2671:11::o;909:10159:44:-;;;;;;;5006:14:35;909:10159:44;;;;2415:321:35;2713:12;909:10159:44;2713:12:35;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c80632583f76314610f4857806348cbdfca14610f1457806359a8928314610d675780638310d48514610d30578063c235cd9e14610abe578063d7b0fef114610a385763ff4ffb8514610066575f80fd5b346104045761007436610f60565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c610a105760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d6100c7816114bd565b6100d2600954610fb8565b8060095560405160208152606081016100eb8480610fc6565b80926040602086015252608083019060808360051b8501019281925f925b8284106106585788887f5c505a4208f28f3ee85822c85bceaa696c30a8a9833fa568a5fd614133912e0289806101588b6101466020880188611019565b90601f19858403016040860152611069565b0390a25f9061016781806111e3565b9190505f5b8281106101f6578361017d816129a9565b156101cb577f388a5f4af784e29fc791e14e90d372b6057e8379d9d5556e843545420c675dea5f80a25f7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d005b7fdb788c2b000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b61020a8161020484806111e3565b9061126a565b61021481806111e3565b90505f5b8181106104135750506040810161022f81836111e3565b9290505f5b838110610247575050505060010161016c565b6102da61026c6102618361025b87876111e3565b906112ed565b610100810190611237565b5f73ffffffffffffffffffffffffffffffffffffffff61028b83612510565b1661029960208401846113e2565b836040939293518097819582947f2dec7eb1000000000000000000000000000000000000000000000000000000008452602060048501526024840191611069565b03925af1918215610408575f92610388575b508151602083012090604081019161030e61030784846113e2565b3691611487565b602081519101200361032557505050600101610234565b61038491610332916113e2565b9190926103726040519485947fc504fada000000000000000000000000000000000000000000000000000000008652604060048701526044860191611069565b90600319848303016024850152610f93565b0390fd5b9091503d805f833e61039a8183611376565b8101906020818303126104045780519067ffffffffffffffff8211610404570181601f82011215610404578051906103d18261146b565b926103df6040519485611376565b8284526020838301011161040457815f9260208093018386015e83010152908a6102ec565b5f80fd5b6040513d5f823e3d90fd5b61042e6104248261020486806111e3565b6020810190611281565b60208101358015158103610404571561052157803561044c81612939565b50600654905f1982019182116104f4577f48baa580cd3e9c4040ffa9507f688e0d988bb8b15450fb680ce90fe52f7e544a5f80a3905b608082019161049183826111e3565b9050155b80156104ac5750506104a79150610fb8565b610218565b90916104c16104bb85856111e3565b906112b4565b906104cf60208301836113e2565b92356002811015610404576104ed936104e79261262e565b50610fb8565b9190610495565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b80975035600254905f549061053582610fb8565b5f55600182018083116104f4576001841b8111610630578282945f905b80821061059457505050815f52600560205260405f20557f0c825ce0b2f71c91fa27e49984551a39d6f4db65958d2cf59a0ce45c3948312f5f80a39690610482565b909195825f52600160205260405f20875f526020528060405f205560018716155f146105fb5760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8301546001916105ef91906128e1565b965b811c920190610552565b825f52600160205260405f20905f198801908882116104f45760019261062a925f5260205260405f20546128e1565b966105f1565b7f494a639d000000000000000000000000000000000000000000000000000000005f5260045ffd5b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087820301835261068e86836111b1565b606082019061069d8180610fc6565b809360608652526080840160808460051b86010193825f905b82821061095e5750505050506106cf6020820182610fc6565b84849294036020860152808252602082019060208160051b8401019480935f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0181360301925b8481106108c45750505050505050806040610732920190610fc6565b926040818403910152828252602082019060208460051b8401019381935f927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee181360301905b83851061079b575050505050505060208060019297019301940192919390610109565b90919293949596601f1984820301875287358381121561040457826108199101803583526020810135602084015260408101356040840152606081013560608401526080810135608084015260a081013560a084015260c081013560c084015261080760e08201611089565b151560e08401526101008101906111b1565b61012061010083015280359173ffffffffffffffffffffffffffffffffffffffff8316809303610404576108b5602092826001956101208695015261088461087961086686850185611019565b6060610140860152610180850191611069565b926040810190611019565b916101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee082860301910152611069565b99019701950193929190610778565b90919293949597601f1984820301875288359085821215610404576020809161094f8660019501838061090a6108fa8480611019565b6101008852610100880191611069565b9401910160c08091803584526020810135602085015260408101356040850152606081013560608501526080810135608085015260a081013560a08501520135910152565b9a019701959493929101610716565b90919293957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8088820301855261099487836111b1565b6109af6109a18280611019565b606085526060850191611069565b6020820135917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030183121561040457836040806109fd858560209860019a8a990389880152016110cc565b93013591015298019501939201906106b6565b7f3ee5aeb5000000000000000000000000000000000000000000000000000000005f5260045ffd5b34610404575f600319360112610404576003545f1981018181116104f4576003541115610a915760035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85a0154604051908152602090f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b346104045760206003193601126104045760043560025415610a915760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace548114610d0857805f52600560205260405f2054908115610cdd575f198201918083116104f4575f54809111610cae57505f8281527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205490808203610c8057825f90600254610b74816113b1565b915f905b828210610bcc5750505060405190604082019260408352815180945260206060840192015f945b808610610bb457505082935060208301520390f35b90926020806001928651815201940195019490610b9f565b60018116610c5557815f52600160205260405f209060018101918282116104f4576001925f5260205260405f20549582841b17955b80610c45575060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace830154610c398487611457565b525b811c910190610b78565b610c4f8487611457565b52610c3b565b815f52600160205260405f20905f198101918183116104f4576001925f5260205260405f2054610c01565b7fc9e0e757000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b827fdbc744cd000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fff34f2b6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faac1fcc6000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461040457602060031936011261040457610d63610d4f600435612370565b604051918291602083526020830190610f93565b0390f35b346104045760806003193601126104045760443560043567ffffffffffffffff821161040457366023830112156104045781600401359167ffffffffffffffff83116104045760248360051b8201013681116104045760643591600254808603610ee45750610de1845f52600460205260405f2054151590565b15610eb857610def85611399565b94610dfd6040519687611376565b8552602401602085015b828210610ea857505050602435928051905f925b828410610e5b578585818103610e2d57005b7fa0d3b062000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b909192946001908183881c16155f14610e8d57610e8290610e7c8886611457565b516128e1565b955b01929190610e1b565b610ea290610e9b8886611457565b51906128e1565b95610e84565b8135815260209182019101610e07565b837ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b85907f88b3170e000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b34610404576020600319360112610404576020610f3e6004355f52600460205260405f2054151590565b6040519015158152f35b3461040457610f5e610f5936610f60565b6114bd565b005b6020600319820112610404576004359067ffffffffffffffff821161040457600319826040920301126104045760040190565b90601f19601f602080948051918291828752018686015e5f8582860101520116010190565b5f1981146104f45760010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561040457016020813591019167ffffffffffffffff8211610404578160051b3603831361040457565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561040457016020813591019167ffffffffffffffff821161040457813603831361040457565b601f8260209493601f1993818652868601375f8582860101520116010190565b3590811515820361040457565b908135916002831015610404576110b96040916110c99484526020810190611019565b9190928160208201520191611069565b90565b90813581526110dd60208301611089565b151560208201526040820135604082015261111d6111126111016060850185611019565b60a0606086015260a0850191611069565b926080810190610fc6565b9290916080818303910152828152602081019260208160051b83010193835f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc182360301945b848410611175575050505050505090565b90919293949596601f198282030183528735878112156104045760206111a060019387839401611096565b990193019401929195949390611164565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa182360301811215610404570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610404570180359067ffffffffffffffff821161040457602001918160051b3603831361040457565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa181360301821215610404570190565b90821015610a91576110c99160051b810190611237565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6181360301821215610404570190565b9015610a91578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc181360301821215610404570190565b9190811015610a915760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee181360301821215610404570190565b6040810190811067ffffffffffffffff82111761134957604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f601f19910116810190811067ffffffffffffffff82111761134957604052565b67ffffffffffffffff81116113495760051b60200190565b906113bb82611399565b6113c86040519182611376565b828152601f196113d88294611399565b0190602036910137565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610404570180359067ffffffffffffffff82116104045760200191813603831361040457565b9061144d9060409396959496606084526060840191611069565b9460208201520152565b8051821015610a915760209160051b010190565b67ffffffffffffffff811161134957601f01601f191660200190565b9291926114938261146b565b916114a16040519384611376565b829481845281830111610404578281602093845f960137010152565b604080516114cb8282611376565b8136823760017f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b87f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179882806122e2565b50806122da575b1561227d575f928360016401000003d019835b6121f15750505050906401000003d0198092818086800980920994099009602083015281529161156481806111e3565b90505f805b8282106121c45761157a91506113b1565b905f5f5b8281106116e75750506115d55750505080511590816115c8575b50156115a057565b7fe073516d000000000000000000000000000000000000000000000000000000005f5260045ffd5b602091500151155f611598565b825160208101918260208251919201905f5b8181106116d15750505091816116095f9360209503601f198101835282611376565b8551918291518091835e8101838152039060025afa156116c7576116649273ffffffffffffffffffffffffffffffffffffffff9261165b84936116556103075f519260208101906113e2565b90612bc1565b90969196612bfb565b602082519201519080519160208301938452818301528152611687606082611376565b51902016911690808203611699575050565b7fe6d44b4c000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b50513d5f823e3d90fd5b82518452602093840193909201916001016115e7565b6116f58161020487806111e3565b86810161170281836111e3565b9190505f5b828110611eea5750505061171e60208201826111e3565b5f91505b808210611af057505061173581806111e3565b9050611740816113b1565b5f5b828110611aca5750611779600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b6113b1565b905f5b600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b8110611a6f575050600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b5b600181116119b15750805115610a915760200151915f5b8281106117fd575050505060010161157e565b61180b8161020484806111e3565b6020810190858c61181c8484611281565b01350361197457908160205f8e6118368461183f976113e2565b96909585611281565b908051906118688261185a87820195888752848301906110cc565b03601f198101845283611376565b51918291518091835e8101838152039060025afa1561196a575f519073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b15610404576118fe8e925f94845196879586957fab750e7500000000000000000000000000000000000000000000000000000000875201359160048601611433565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611960579060019291611950575b50016117ea565b5f61195a91611376565b5f611949565b8b513d5f823e3d90fd5b8c513d5f823e3d90fd5b61198086928d92611281565b0135907f7c532e31000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f5b8160011c81106119c6575060011c6117d3565b8060011b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821682036104f4576119fd8185611457565b5190600181018091116104f4576020918d611a195f9388611457565b519080519185830193845281830152808252611a36606083611376565b51918291518091835e8101838152039060025afa15611a65576001905f51611a5e8286611457565b52016119b3565b8a513d5f823e3d90fd5b600190825181105f14611a9957611a868184611457565b51611a918286611457565b525b0161177c565b7fcc1d2f838445db7aec431df9ee8a871f40e7aa5e064fc056633ef8c60fab7b06611ac48286611457565b52611a93565b80611ade61042460019361020488806111e3565b35611ae98285611457565b5201611742565b9098611aff60208401846111e3565b8b9291921015610a91578a60051b820135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0183360301821215610404576020828401019660608385010135611b60815f52600460205260405f2054151590565b15611ebf575087355f5260076020528b5f2054611e9257608083850101355f5260056020528b5f2054611e60578b8860205f611b9e888801806113e2565b939094805190611bed858301809460c08091803584526020810135602085015260408101356040850152606081013560608501526080810135608085015260a081013560a08501520135910152565b60e08252611bfd61010083611376565b51918291518091835e8101838152039060025afa15611e56575f519173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b15610404575f918f611cb1905194859384937fab750e750000000000000000000000000000000000000000000000000000000085527f00000000000000000000000000000000000000000000000000000000000000009160048601611433565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611e5657611e46575b50611d0d611d0587806111e3565b8a35916125af565b8c808587010135910135808203611e18575050611d35611d2c82610fb8565b9835918b611457565b52611d50611d4386806111e3565b60808587010135916125af565b8b60a08486010135910135808203611e18575050908a60019392611d7389610fb8565b98611d8560808587010135918d611457565b52871580611e10575b15611dbb57509060e0915192611da38461132d565b0160c0810135835201356020820152995b0190611722565b9092611e039260e0855191611dcf8361132d565b60c08185010135835260208301930101358252611dee85519586611376565b8d3686376020835193015190519151926129fe565b6020830152815299611db4565b508d15611d8e565b7f18f639d8000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f611e5091611376565b5f611cf7565b8d513d5f823e3d90fd5b608083857f96539bd4000000000000000000000000000000000000000000000000000000005f5201013560045260245ffd5b877f39a940c5000000000000000000000000000000000000000000000000000000005f523560045260245ffd5b7ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b611ef88161025b84876111e3565b611f096102618361025b86896111e3565b60205f8d611f173686612531565b908382519201519080519185830193845281830152808252611f3a606083611376565b51918291518091835e8101838152039060025afa15611960575f51600460208e73ffffffffffffffffffffffffffffffffffffffff611f7886612510565b169051928380927f033f96a40000000000000000000000000000000000000000000000000000000082525afa9081156121ba575f91612189575b5080820361215b5750509061206060205f848f956120488761203a611ff7611fdb606095612510565b95612028611feb8a8301836113e2565b939092868101906113e2565b929093865198899773ffffffffffffffffffffffffffffffffffffffff8e8a019c168c528801526080870191611069565b91601f19858403016060860152611069565b03601f198101835282611376565b519020946120568a806111e3565b9490953690612531565b9080519060e08583019380518552868101518385015282810151606085015260608101516080850152608081015160a085015260a081015160c085015260c0810151828501520151151561010083015261010082526120c161012083611376565b51918291518091835e8101838152039060025afa1561196a576121186121026104bb8f946104246120f89161203a965f51916125af565b60808101906111e3565b8351928391602083019560208752830190611096565b5190209080820361212d575050600101611707565b7f64cc8b14000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fd3167e32000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b90506020813d82116121b2575b816121a360209383611376565b8101031261040457515f611fb2565b3d9150612196565b8e513d5f823e3d90fd5b6121db6121d58361020487806111e3565b806111e3565b905081018091116104f457600190910190611569565b61220084829893949598612611565b928094612250576401000003d0199084096401000003d01903906401000003d01982116104f4576122416401000003d019612247935f95089598809561261b565b90612503565b92909183611534565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001611521565b6401000003d019915014155f61151a565b5f604051612302602082611376565b525f6040518180805e5260205f808060025afa15610408575f5190565b90600182811c92168015612366575b602083101461233957565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f169161232e565b906123796122f3565b82146124db57815f52600860205260405f2060405190815f82549261239d8461231f565b9081845260208401946001811690815f146124a05750600114612461575b5050916123cd5f926020940385611376565b604051809185518091835e8101838152039060025afa15610408575f516123f26122f3565b810361242457837f632989d6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b90919281810361243357505090565b7f1844c87b000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f908152602081209092505b81831061248457505081016020016123cd5f6123bb565b602091935080600191548385890101520191019091849261246d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686525050151560051b820160200190506123cd5f6123bb565b7ff82ea8b4000000000000000000000000000000000000000000000000000000005f5260045ffd5b919082039182116104f457565b3573ffffffffffffffffffffffffffffffffffffffff811681036104045790565b91908261010091031261040457604051610100810181811067ffffffffffffffff8211176113495760405260e06125aa818395803585526020810135602086015260408101356040860152606081013560608601526080810135608086015260a081013560a086015260c081013560c086015201611089565b910152565b909291925f5b8181106125e857847f4e90c0bf000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b846125f761042483858761126a565b3514612605576001016125b5565b916110c993945061126a565b8115612250570490565b818102929181159184041417156104f457565b919060205f6040518386823780848101838152039060025afa15610408575f51926126576122f3565b84146124db57600283109182156127105783612674575050505090565b845f52600860205260405f20604051905f908054906126928261231f565b91600181169081156128ab5750600114612878575b5050816020925f92039060025afa15610408575f516126c46122f3565b146126d0575050505090565b9294919390926001861461273d5785857f4d511600000000000000000000000000000000000000000000000000000000005f52156127105760045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b9193509193506001827f2266f858e35b42156890bf9a1a4dd4ac86bcaf4e1e8a1669096531ac46c9728b5f80a3815f52600860205260405f209067ffffffffffffffff811161134957612790825461231f565b601f8111612833575b505f601f82116001146127d25781929394955f926127c7575b50505f198260011b9260031b1c191617905590565b013590505f806127b2565b601f19821695835f5260205f20915f5b88811061281b57508360019596979810612802575b505050811b01905590565b5f1960f88560031b161c199101351690555f80806127f7565b909260206001819286860135815501940191016127e2565b825f5260205f20601f830160051c8101916020841061286e575b601f0160051c01905b8181106128635750612799565b5f8155600101612856565b909150819061284d565b9091505f5260205f205f905b82821061289757505081018160206126a7565b600181602092548487015201910190612884565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168552505080151502820190508160206126a7565b5f9060209260405190848201928352604082015260408152612904606082611376565b604051918291518091835e8101838152039060025afa15610408575f5190565b8054821015610a91575f5260205f2001905f90565b805f52600760205260405f2054155f146129a457600654680100000000000000008110156113495761298d6129778260018594016006556006612924565b81939154905f199060031b92831b921b19161790565b9055600654905f52600760205260405f2055600190565b505f90565b805f52600460205260405f2054155f146129a45760035468010000000000000000811015611349576129e76129778260018594016003556003612924565b9055600354905f52600460205260405f2055600190565b9093929091808303612ba857506401000003d019908408612a2157505f91508190565b6401000003d0198380096401000003d0195f8180808086880960040995800960030908906401000003d019918284800883038381116104f4578390818380090893848403928484116104f457848091800960080984038481116104f45784600193818096819508900908950960020992905b8315158481612b97575b5080612b8f575b15612b31575f938460016401000003d019835b612ad85750505050906401000003d019809281808780098092099509900990565b612ae784829993949599612611565b928094612250576401000003d0199084096401000003d01903906401000003d01982116104f4576122416401000003d019612b28935f95089599809561261b565b92909183612ab7565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001612aa4565b6401000003d019915014155f612a9d565b612bba93946401000003d01993612ca6565b9291612a93565b8151919060418303612bf157612bea9250602082015190606060408401519301515f1a90612eb3565b9192909190565b50505f9160029190565b60048110156127105780612c0d575050565b60018103612c3d577ff645eedf000000000000000000000000000000000000000000000000000000005f5260045ffd5b60028103612c7157507ffce698f7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b600314612c7b5750565b7fd78bce0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9492909391851580612eab575b612ea057801580612e98575b612e9057604051608091612cd38383611376565b8236833784156122505784600180098083529385856001099860208401998a52604084019286845287845160010993606086019485526040519a878c01958c871067ffffffffffffffff881117611349578a80979581969482956040525190098d525190099460208b019586525190099860408901998a52519009606087019081528651885114801590612e84575b15612e2657849283808093816040519c85612d7e8f9788611376565b368737518c51612d8e9083612503565b90088452518551612d9f9083612503565b90089860208301998a5281808b8180808089518a5190099360408a019485528185518b5190096060909a01998a525180098851612ddc9083612503565b90088180875185519009600209612df39083612503565b90089c51935190519009612e078c83612503565b90089009925190519009612e1b9083612503565b900894510991929190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b50815181511415612d62565b505050600190565b508115612cbf565b945092506001919050565b508415612cb3565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612f37579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610408575f5173ffffffffffffffffffffffffffffffffffffffff811615612f2d57905f905f90565b505f906001905f90565b5050505f916003919056",
    "sourceMap": "909:10159:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:19:58;;;909:10159:44;;;;;;;;;;:::i;:::-;637:66:28;3327:69:31;1444:93:28;;1655:4;637:66;3556:68:31;2574:11:44;;;:::i;:::-;2627:10;;909:10159;2627:10;:::i;:::-;909:10159;2627:10;909:10159;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:63;909:10159;;;;;;;;;;:::i;:::-;;-1:-1:-1;;909:10159:44;;;;;;;;;:::i;:::-;2602:63;;;909:10159;2725:19;;;;;:::i;:::-;2766:13;;;909:10159;2781:12;;;;;;6669:23:35;;;;:::i;:::-;2948:17:59;2944:76;;3034:15;909:10159:44;3034:15:59;;909:10159:44;637:66:28;3556:68:31;909:10159:44;2944:76:59;2988:21;909:10159:44;2988:21:59;909:10159:44;;;;2988:21:59;2795:3:44;2839:22;:19;;;;;:::i;:::-;:22;;:::i;:::-;2897:18;;;;:::i;:::-;2941:13;;909:10159;2956:14;;;;;;3726:28;;909:10159;3726:28;;;;;;:::i;:::-;3780:13;;;909:10159;3795:19;;;;;;2795:3;;;;1655:4:28;909:10159:44;2766:13;;3816:3;909:10159;3861:36;:31;:28;;;;;:::i;:::-;:31;;:::i;:::-;909:10159;3861:36;;;;:::i;:::-;909:10159;;4278:23;;;:::i;:::-;909:10159;4315:10;909:10159;4315:10;;;;:::i;:::-;909:10159;;;;;;4267:59;;;;;;909:10159;4267:59;;909:10159;;4267:59;;909:10159;;;;;;:::i;:::-;4267:59;;;;;;;;;909:10159;4267:59;;;3816:3;909:10159;;;;;;4341:17;4372:11;909:10159;4372:11;;;909:10159;4372:11;;;;:::i;:::-;909:10159;;;:::i;:::-;;;;;;4362:22;4341:43;4337:149;;3816:3;;;1655:4:28;909:10159:44;3780:13;;4337:149;909:10159;4446:11;;;;:::i;:::-;909:10159;;;;;;4407:68;;;;;;909:10159;;4407:68;;909:10159;;;;;;:::i;:::-;;-1:-1:-1;;909:10159:44;;;;;;;;;:::i;:::-;4407:68;;;4267:59;;;;;;909:10159;4267:59;;;;;;:::i;:::-;;;909:10159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4267:59;;;;909:10159;;;;4267:59;909:10159;;;;;;;;;2972:3;3029:30;:21;:18;;;;;:::i;:21::-;909:10159;3029:30;;;;:::i;:::-;909:10159;3082:19;;909:10159;;;;;;;;3082:19;;;909:10159;;6669:23:35;;;:::i;:::-;;873:13:60;909:10159:44;;-1:-1:-1;;909:10159:44;;;;;;;917:73:60;909:10159:44;917:73:60;;3078:409:44;;909:10159;3522:16;;;;;;;:::i;:::-;3583:10;;;;;;;;2972:3;;;;;;:::i;:::-;2941:13;;3595:3;3633:16;;:19;:16;;;;:::i;:::-;:19;;:::i;:::-;1185:18:58;;909:10159:44;1185:18:58;;;;:::i;:::-;909:10159:44;;;;;;;;3595:3;1174:63:58;;;;:::i;:::-;;3595:3:44;:::i;:::-;3568:13;;;;909:10159;;;;;;;;;;3078:409;909:10159;;;;;;;;;2230:21:54;;;;:::i;:::-;909:10159:44;;1655:4:28;909:10159:44;;;;;;;1655:4:28;909:10159:44;;2312:26:54;;2308:61;;2429:28;2467:31;2513:13;909:10159:44;2508:1078:54;2528:13;;;;;;909:10159:44;;;325:19:58;909:10159:44;325:19:58;909:10159:44;;325:19:58;909:10159:44;;325:19:58;909:10159:44;2583:55:59;909:10159:44;2583:55:59;;3078:409:44;;;;2543:3:54;325:19:58;;;;909:10159:44;325:19:58;1655:4:28;909:10159:44;325:19:58;909:10159:44;;325:19:58;;909:10159:44;325:19:58;909:10159:44;325:19:58;;909:10159:44;;325:19:58;909:10159:44;1655:4:28;6631:9:54;;:14;2836:707;1655:4:28;;;909:10159:44;;325:19:58;;909:10159:44;;;1655:4:28;;3128:72:54;;909:10159:44;3128:72:54;:::i;:::-;2836:707;;909:10159:44;;2543:3:54;909:10159:44;2513:13:54;;;2836:707;325:19:58;909:10159:44;325:19:58;1655:4:28;909:10159:44;325:19:58;909:10159:44;;325:19:58;909:10159:44;-1:-1:-1;;909:10159:44;;;;;;;;1655:4:28;325:19:58;3465:63:54;325:19:58;909:10159:44;325:19:58;909:10159:44;325:19:58;909:10159:44;;325:19:58;909:10159:44;3465:63:54;:::i;:::-;2836:707;;;2308:61;2347:22;909:10159:44;2347:22:54;909:10159:44;;2347:22:54;909:10159:44;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:4:28;909:10159:44;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:10159:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1655:4:28;909:10159:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:10159:44;;;;;;;;;;;;;;;;;;;;1655:4:28;909:10159:44;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1655:4:28;909:10159:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1444:93:28;1496:30;909:10159:44;1496:30:28;909:10159:44;;1496:30:28;909:10159:44;;;;;-1:-1:-1;;909:10159:44;;;;;5882:6:59;909:10159:44;-1:-1:-1;;909:10159:44;;;;;;;5882:6:59;909:10159:44;-1:-1:-1;909:10159:44;;;5882:6:59;909:10159:44;325:19:58;909:10159:44;;;;;;;;325:19:58;;909:10159:44;;;;;;;;;;;;;;;;-1:-1:-1;;909:10159:44;;;;;;;5771:18:59;909:10159:44;;;;5771:18:59;909:10159:44;325:19:58;;909:10159:44;4335:26:59;;4331:81;;325:19:58;909:10159:44;325:19:58;4430:8:59;909:10159:44;325:19:58;909:10159:44;;325:19:58;909:10159:44;4465:10:59;;;4461:81;;-1:-1:-1;;909:10159:44;;;;;;;;;;4885:38:59;;;4881:155;;-1:-1:-1;909:10159:44;325:19:58;;;;909:10159:44;325:19:58;909:10159:44;325:19:58;;909:10159:44;;4655:23:59;;;4651:122;;4008:34;909:10159:44;;5771:18:59;909:10159:44;4450:24:54;;;:::i;:::-;4484:28;909:10159:44;4647:1114:54;4667:13;;;;;;909:10159:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4682:3:54;909:10159:44;6631:9:54;;909:10159:44;;325:19:58;909:10159:44;325:19:58;909:10159:44;;325:19:58;909:10159:44;;325:19:58;909:10159:44;;;;;;;;;;;325:19:58;909:10159:44;325:19:58;909:10159:44;325:19:58;909:10159:44;;325:19:58;909:10159:44;;;;;4998:25:54;4781:447;;5303:28;;;-1:-1:-1;5771:18:59;909:10159:44;325:19:58;;909:10159:44;;;5437:55:54;325:19:58;5437:55:54;;:::i;:::-;909:10159:44;5299:335:54;909:10159:44;;4682:3:54;909:10159:44;4652:13:54;;;5299:335;5591:28;;;;:::i;:::-;909:10159:44;5299:335:54;;4781:447;325:19:58;909:10159:44;325:19:58;909:10159:44;;325:19:58;909:10159:44;;325:19:58;909:10159:44;-1:-1:-1;;909:10159:44;;;;;;;;;325:19:58;909:10159:44;325:19:58;909:10159:44;325:19:58;909:10159:44;;325:19:58;909:10159:44;4781:447:54;;4651:122:59;4701:61;909:10159:44;4701:61:59;909:10159:44;;;;;;4701:61:59;4881:155;4946:79;;909:10159:44;4946:79:59;909:10159:44;;;;;;4946:79:59;4461:81;4498:33;909:10159:44;4498:33:59;909:10159:44;;;;4498:33:59;4331:81;4384:17;909:10159:44;4384:17:59;909:10159:44;;4384:17:59;909:10159:44;;;;;-1:-1:-1;;909:10159:44;;;;;;1025:21:58;909:10159:44;;1025:21:58;:::i;:::-;909:10159:44;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;909:10159:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6005:11:54;909:10159:44;3245:34:59;;;3241:143;;7577:28:35;;;-1:-1:-1;325:19:58;5006:14:35;325:19:58;;;-1:-1:-1;325:19:58;909:10159:44;5006:26:35;;4910:129;;7577:28;3431:22:59;3427:56;;909:10159:44;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7292:13:54;909:10159:44;7287:344:54;7307:13;;;;;;3647:20:59;;;;;3643:109;;909:10159:44;3643:109:59;3690:51;909:10159:44;3690:51:59;909:10159:44;;;;;;3690:51:59;7322:3:54;909:10159:44;;;;;;;;;;8024:24:54;:29;7341:280;909:10159:44;;;7443:38:54;7455:11;;;;;:::i;:::-;909:10159:44;7443:38:54;:::i;:::-;7341:280;;909:10159:44;7292:13:54;;;;;7341:280;7568:38;7594:11;;;;;:::i;:::-;909:10159:44;7568:38:54;;:::i;:::-;7341:280;;;909:10159:44;;;;;;;;;;;;;3427:56:59;3462:21;;909:10159:44;3462:21:59;909:10159:44;;;;3462:21:59;3241:143;3302:71;;;909:10159:44;3302:71:59;909:10159:44;;;;;;3302:71:59;909:10159:44;;;;;-1:-1:-1;;909:10159:44;;;;;;7577:28:35;909:10159:44;;-1:-1:-1;325:19:58;5006:14:35;325:19:58;;;-1:-1:-1;325:19:58;909:10159:44;5006:26:35;;4910:129;;7577:28;909:10159:44;;;;;;;;;;;;4093:11;909:10159;;;:::i;:::-;4093:11;:::i;:::-;909:10159;;;-1:-1:-1;;909:10159:44;;;;;;;;;;;;;-1:-1:-1;;909:10159:44;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;909:10159:44;;;;;;;;;;;;;;;;;-1:-1:-1;909:10159:44;;;;;;;;;;;:::o;:::-;-1:-1:-1;;909:10159:44;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;909:10159:44;;;;;;;;-1:-1:-1;909:10159:44;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;909:10159:44;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;909:10159:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;909:10159:44;;;;;-1:-1:-1;909:10159:44;;;;-1:-1:-1;;909:10159:44;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;909:10159:44;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;909:10159:44;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;909:10159:44;;;;;;:::o;4594:5054::-;909:10159;;;;;;;:::i;:::-;;;;;8360:1:0;584:66:52;417;8360:1:0;;842:20;;4594:5054:44;842:32:0;;;;4594:5054:44;909:10159;;;-1:-1:-1;;;8360:1:0;-1:-1:-1;;926:16:0;1003:7;;;3254:23;;;;;-1:-1:-1;;3254:23:0;;;;;;;3300:22;;;3356:24;;3345:41;;909:10159:44;;;;;;4748:19;;;;;:::i;:::-;4785:22;-1:-1:-1;;;4837:12:44;;;;;;5001:25;;;;:::i;:::-;5076:14;-1:-1:-1;;5121:12:44;;;;;;-1:-1:-1;;9138:13:44;;909:10159;;;;;9171:24;:52;;;;9134:508;-1:-1:-1;9167:205:44;;;9290:7::o;9167:205::-;9342:15;-1:-1:-1;9342:15:44;10204:65;-1:-1:-1;9342:15:44;9171:52;909:10159;;;;;9199:24;9171:52;;;9134:508;909:10159;;;1503:22:51;;;;909:10159:44;;;;;;;-1:-1:-1;909:10159:44;;;;;;1503:22:51;;;;;;-1:-1:-1;1503:22:51;909:10159:44;1503:22:51;;-1:-1:-1;;1503:22:51;;;;;;:::i;:::-;909:10159:44;;;;;;;;;;;;;;;1496:30:51;;909:10159:44;1496:30:51;;;;;3927:8:32;1496:30:51;909:10159:44;1496:30:51;3871:27:32;1496:30:51;;909:10159:44;9594:22;-1:-1:-1;1496:30:51;9594:22:44;909:10159;9594:22;;;;:::i;909:10159::-;3871:27:32;;:::i;:::-;3927:8;;;;;:::i;:::-;909:10159:44;;;;;;;;;805:30:56;909:10159:44;805:30:56;;909:10159:44;;;;;;;805:30:56;;;909:10159:44;805:30:56;;:::i;:::-;909:10159:44;1009:25:56;;909:10159:44;;;1799:21:56;;;;1795:113;;9134:508:44;;4594:5054::o;1795:113:56:-;1843:54;-1:-1:-1;1843:54:56;10204:65:44;909:10159;;;;-1:-1:-1;1843:54:56;1496:30:51;909:10159:44;;;-1:-1:-1;909:10159:44;;;;;;;;;;;;;;;;;;;8360:1:0;909:10159:44;;;5135:3;5179:22;:19;;;;;:::i;:22::-;9803:28;;;;;;;:::i;:::-;9853:13;;;-1:-1:-1;9868:19:44;;;;;;5326:22;;;;909:10159;5326:22;;;;:::i;:::-;-1:-1:-1;;;5393:8:44;;;;;;8077:18;;;;;;:::i;:::-;8151:25;;;;;:::i;:::-;-1:-1:-1;8214:14:44;;;;;;8411:18;8330:25:54;8360:1:0;909:10159:44;8411:18;909:10159;;8330:25:54;:::i;:::-;8370:13;-1:-1:-1;8385:14:54;8360:1:0;909:10159:44;8411:18;909:10159;;8385:14:54;;;;8411:18:44;;8360:1:0;909:10159:44;8411:18;909:10159;;8663:15:54;8360:1:0;8663:15:54;;;;8897:8;909:10159:44;;;;;;;;8454:13;-1:-1:-1;8469:14:44;;;;;;5135:3;;;;8360:1:0;909:10159:44;5106:13;;8485:3;8540:21;:18;;;;;:::i;:21::-;909:10159;8634:14;;;;;;;;;:::i;:::-;:29;909:10159;8634:55;8630:204;;8923:11;;909:10159;-1:-1:-1;8923:11:44;;;9042:14;8923:11;;:::i;:::-;9042:14;;;;;:::i;:::-;909:10159;;;9031:26;;;909:10159;9031:26;;;909:10159;;;;;;;;;:::i;:::-;9031:26;-1:-1:-1;;9031:26:44;;;;;;:::i;:::-;909:10159;;;;;;;;;;;;;;9024:34;;909:10159;9024:34;;;;;-1:-1:-1;9024:34:44;5860:27;909:10159;5860:27;909:10159;8856:225;;;;;909:10159;;-1:-1:-1;909:10159:44;;;8856:225;;;;;909:10159;8856:225;;8969:14;909:10159;8856:225;10204:65;8856:225;;;:::i;:::-;;5860:27;909:10159;5860:27;909:10159;8856:225;;;;;;;8360:1:0;8856:225:44;;;;8485:3;;909:10159;8454:13;;8856:225;-1:-1:-1;8856:225:44;;;:::i;:::-;;;;;909:10159;;;-1:-1:-1;909:10159:44;;;;;9024:34;909:10159;;;-1:-1:-1;909:10159:44;;;;;8630:204;8780:14;;;;;;:::i;:::-;:29;909:10159;8724:87;;-1:-1:-1;8724:87:44;10204:65;909:10159;;;;-1:-1:-1;8724:87:44;8656:224:54;-1:-1:-1;8714:19:54;260:66:55;8360:1:0;260:66:55;8714:19:54;;;;260:66:55;8360:1:0;260:66:55;8656:224:54;;8735:3;260:66:55;8360:1:0;260:66:55;;;;;;;;8793:12:54;;;;:::i;:::-;909:10159:44;260:66:55;8360:1:0;909:10159:44;;;;;;;;8807:16:54;;;-1:-1:-1;8807:16:54;;;:::i;:::-;909:10159:44;;;;8776:48:54;;;;909:10159:44;;;260:66:55;;;909:10159:44;8776:48:54;;;;909:10159:44;8776:48:54;;:::i;:::-;909:10159:44;;;;;;;;;;;;;;8769:56:54;;909:10159:44;8769:56:54;;;;;8360:1:0;8769:56:54;-1:-1:-1;8769:56:54;8758:67;;;;:::i;:::-;909:10159:44;;8699:13:54;;8769:56;909:10159:44;;;-1:-1:-1;909:10159:44;;;;;8401:3:54;8360:1:0;909:10159:44;;;8424:16:54;;8420:141;8428:12;;;8471:8;;;;:::i;:::-;909:10159:44;8460:19:54;;;;:::i;:::-;909:10159:44;8420:141:54;909:10159:44;8370:13:54;;8420:141;260:66:55;8518:28:54;;;;:::i;:::-;909:10159:44;8420:141:54;;8230:3:44;8273:18;:30;:21;8360:1:0;8273:18:44;;;;;:::i;:30::-;909:10159;8257:50;;;;:::i;:::-;909:10159;;8199:13;;5403:3;5326:22;;5461;909:10159;5326:22;;5461;;:::i;:::-;909:10159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5580:13;909:10159;;;;;5580:41;909:10159;7577:28:35;;-1:-1:-1;325:19:58;5006:14:35;325:19:58;;;-1:-1:-1;325:19:58;909:10159:44;5006:26:35;;4910:129;;7577:28;5596:22:59;5592:81;;7577:28:35;909:10159:44;;-1:-1:-1;325:19:58;5006:14:35;909:10159:44;325:19:58;;-1:-1:-1;325:19:58;909:10159:44;1083:102:60;;909:10159:44;;;;5804:21;909:10159;-1:-1:-1;325:19:58;909:10159:44;;325:19:58;;-1:-1:-1;325:19:58;909:10159:44;5182:95:59;;909:10159:44;;;-1:-1:-1;5927:10:44;909:10159;;;;5927:10;:::i;:::-;909:10159;;;;;6042:25;909:10159;6042:25;;;909:10159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6042:25;;;10023:36;6042:25;;:::i;:::-;909:10159;;;;;;;;;;;;;;6035:33;;909:10159;6035:33;;;;;-1:-1:-1;6035:33:44;5860:27;909:10159;5860:27;909:10159;5860:231;;;;-1:-1:-1;909:10159:44;;5860:231;909:10159;;5860:231;;;;;909:10159;5860:231;;5972:22;5860:231;10204:65;5860:231;;;:::i;:::-;;:27;909:10159;5860:27;909:10159;5860:231;;;;;;;;5403:3;6299:18;:29;:18;;;;:::i;:::-;909:10159;;6299:29;;:::i;:::-;909:10159;;;;;6359:31;909:10159;6394:19;;909:10159;6359:54;;;6355:308;;6768:12;;6763:23;6768:12;;;:::i;:::-;909:10159;;6763:23;;;:::i;:::-;909:10159;6960:29;:18;;;;:::i;:::-;909:10159;;;;5804:21;909:10159;6960:29;;:::i;:::-;909:10159;;;;;7020:30;909:10159;7054:19;;909:10159;7020:53;;;7016:306;;7427:12;;;;8360:1:0;7427:12:44;;;;;:::i;:::-;909:10159;7422:23;909:10159;;;;5804:21;909:10159;7422:23;;;:::i;:::-;909:10159;7543:6;;;:16;;5403:3;7539:425;;;909:10159;;;;;;;;;:::i;:::-;;;7615:24;;909:10159;;;7650:24;909:10159;;7606:70;;909:10159;;7539:425;909:10159;5378:13;;;7539:425;909:10159;;1283:75:52;909:10159:44;;;;;;;;:::i;:::-;;;;;7853:24;909:10159;;;;7844:70;;909:10159;;7888:24;909:10159;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1283:75:52;;:::i;:::-;909:10159:44;;;;;;7539:425;;;7543:16;7553:6;;;7543:16;;7016:306;7112:183;-1:-1:-1;7112:183:44;10204:65;909:10159;;;;-1:-1:-1;7112:183:44;5860:231;-1:-1:-1;5860:231:44;;;:::i;:::-;;;;;909:10159;;;-1:-1:-1;909:10159:44;;;;;5182:95:59;909:10159:44;5233:33:59;;;-1:-1:-1;5233:33:59;909:10159:44;5804:21;909:10159;10204:65;909:10159;;-1:-1:-1;5233:33:59;1083:102:60;1143:31;;-1:-1:-1;1143:31:60;909:10159:44;10204:65;909:10159;;-1:-1:-1;1143:31:60;5592:81:59;5641:21;-1:-1:-1;5641:21:59;10204:65:44;909:10159;;-1:-1:-1;5641:21:59;9889:3:44;9936:31;:28;;;;;:::i;:31::-;10023:36;:31;:28;;;;;:::i;:36::-;909:10159;-1:-1:-1;909:10159:44;;;;;:::i;:::-;260:66:55;;;;567:17:51;;260:66:55;909:10159:44;;;537:48:51;;;;909:10159:44;;;;;;;537:48:51;;;;909:10159:44;537:48:51;;:::i;:::-;909:10159:44;;;;;;;;;;;;;;530:56:51;;909:10159:44;530:56:51;;;;;-1:-1:-1;530:56:51;10204:65:44;909:10159;530:56:51;909:10159:44;10215:23;;;:::i;:::-;909:10159;;;10204:65;;;;909:10159;10204:65;;;;;;;;;-1:-1:-1;10204:65:44;;;9889:3;10292:25;;;;10288:151;;10575:23;;;909:10159;;-1:-1:-1;10575:23:44;;;10564:60;10575:23;909:10159;10612:11;10575:23;909:10159;10575:23;;:::i;:::-;10600:10;909:10159;10600:10;;;;;;:::i;:::-;10612:11;;;;;;;;:::i;:::-;909:10159;;;;;10564:60;;;909:10159;10564:60;;;909:10159;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;909:10159:44;;;;;;;;;:::i;:::-;10564:60;-1:-1:-1;;10564:60:44;;;;;;:::i;:::-;909:10159;10554:71;;10764:18;;;;;:::i;:::-;909:10159;;;;;;:::i;:::-;;;;236:20:51;909:10159:44;236:20:51;;;909:10159:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10023:36;909:10159;;;10023:36;236:20:51;;;;;;:::i;:::-;909:10159:44;;;;;;;;;;;;;;229:28:51;;909:10159:44;229:28:51;;;;;10753:79:44;10764:67;:64;229:28:51;;10764:47:44;:56;229:28:51;909:10159:44;229:28:51;-1:-1:-1;229:28:51;10764:47:44;;:::i;:56::-;909:10159;10764:64;;;;:::i;:67::-;909:10159;;10753:79;;;909:10159;10753:79;;909:10159;;;;;;;;:::i;10753:79::-;909:10159;10743:90;;10856:40;;;;10852:184;;9889:3;;8360:1:0;909:10159:44;9853:13;;10852:184;10927:90;-1:-1:-1;10927:90:44;10204:65;909:10159;;;;-1:-1:-1;10927:90:44;10288:151;10348:72;-1:-1:-1;10348:72:44;10204:65;909:10159;;;;-1:-1:-1;10348:72:44;10204:65;;;909:10159;10204:65;;;;;;;;;909:10159;10204:65;;;:::i;:::-;;;909:10159;;;;;10204:65;;;;;;-1:-1:-1;10204:65:44;;;909:10159;;;-1:-1:-1;909:10159:44;;;;;4851:3;4884:34;:22;:19;;;;;:::i;:22::-;:34;;:::i;:::-;4870:55;;909:10159;;;;;;;8360:1:0;4870:55:44;4851:3;909:10159;4822:13;;;996:169:0;1030:6;;;;;;;;;:::i;:::-;1062:52;;1086:20;;;-1:-1:-1;;1080:26:0;1086:20;;-1:-1:-1;;909:10159:44;;-1:-1:-1;;909:10159:44;;;;1147:6:0;-1:-1:-1;;1143:10:0;1069:44;-1:-1:-1;1069:44:0;;1050:64;1138:16;;1147:6;;:::i;:::-;1143:10;;:::i;:::-;1128:26;996:169;;1128:26;996:169;;1086:20;260:66:55;-1:-1:-1;260:66:55;;;;;-1:-1:-1;260:66:55;909:10159:44;;;;;;;;;;;;;;;;;;;;;;;842:32:0;;8360:1;842:32;;:20;-1:-1:-1;;853:9:0;;;;842:20;;;280:64:58;909:10159:44;;;;;;;:::i;:::-;;;;;;;;;;;;325:19:58;;;;;;;;909:10159:44;325:19:58;280:64;:::o;325:19::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;2257:523;;2364:16;;:::i;:::-;2352:28;;2348:77;;325:19;-1:-1:-1;325:19:58;2491:6;325:19;;;-1:-1:-1;325:19:58;;909:10159:44;325:19:58;;-1:-1:-1;325:19:58;;;;;;:::i;:::-;909:10159:44;;;;325:19:58;909:10159:44;;325:19:58;;;;;;;;;;;;;;;;;;;;-1:-1:-1;325:19:58;;;;;;:::i;:::-;;909:10159:44;;;;;;;;;;;;;;2549:12:58;;;;;;;;-1:-1:-1;2549:12:58;2600:16;;:::i;:::-;2579:37;;2575:149;;2751:22;;-1:-1:-1;2751:22:58;;909:10159:44;;-1:-1:-1;2751:22:58;2575:149;2884:29;;;;;;2880:132;;2698:11;;;:::o;2880:132::-;2936:65;-1:-1:-1;2936:65:58;;909:10159:44;;;;-1:-1:-1;2936:65:58;325:19;-1:-1:-1;325:19:58;;;;;;-1:-1:-1;;;325:19:58;;;;;;-1:-1:-1;;325:19:58;;;;;-1:-1:-1;325:19:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;325:19:58;;;;;;;;;-1:-1:-1;325:19:58;-1:-1:-1;325:19:58;;2348:77;2403:11;-1:-1:-1;2403:11:58;;-1:-1:-1;2403:11:58;909:10159:44;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;260:341:57:-;;;;;426:1;429:7;;;;;;568:26;;426:1;568:26;;909:10159:44;;426:1:57;568:26;438:3;461:6;:15;:6;;;;;:::i;:15::-;909:10159:44;461:26:57;457:85;;909:10159:44;;414:13:57;;457:85;521:6;;;;;;:::i;260:66:55:-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;1250:1001:58:-;;;1418:12;-1:-1:-1;909:10159:44;;;;;;;;;;;;;1418:12:58;;;;;;;;-1:-1:-1;1418:12:58;1489:16;;;:::i;:::-;1477:28;;1473:77;;1418:12;909:10159:44;;;;;;;1606:50:58;;;1748:15;;;;;:::o;1602:577::-;325:19;-1:-1:-1;325:19:58;1833:6;1418:12;325:19;909:10159:44;-1:-1:-1;325:19:58;909:10159:44;;;-1:-1:-1;909:10159:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1826:24:58;;;1418:12;1826:24;-1:-1:-1;1826:24:58;;;1418:12;1826:24;;;;;-1:-1:-1;1826:24:58;1854:16;;:::i;:::-;1826:44;1854:16;;1886:15;;;;;:::o;1822:357::-;909:10159:44;;;;;;;1960:44:58;;1956:223;;1822:357;;2196:48;-1:-1:-1;2196:48:58;909:10159:44;;;2196:48:58;909:10159:44;;-1:-1:-1;2196:48:58;909:10159:44;;-1:-1:-1;909:10159:44;;2196:48:58;909:10159:44;;-1:-1:-1;909:10159:44;1956:223:58;2025:76;;;;;;909:10159:44;2025:76:58;;-1:-1:-1;2025:76:58;;325:19;-1:-1:-1;325:19:58;1833:6;1418:12;325:19;909:10159:44;-1:-1:-1;325:19:58;909:10159:44;;;;;;;;;;:::i;:::-;;;;;;1956:223:58;909:10159:44;-1:-1:-1;909:10159:44;;;;;;;;;;;;-1:-1:-1;909:10159:44;;;;;;-1:-1:-1;;909:10159:44;;;;;;;;;;;;2153:15:58;:::o;909:10159:44:-;;;;-1:-1:-1;909:10159:44;;;;;-1:-1:-1;;909:10159:44;;325:19:58;;-1:-1:-1;325:19:58;1418:12;-1:-1:-1;325:19:58;909:10159:44;-1:-1:-1;909:10159:44;;;;;;;;;;;;;;;;;;;;;;;;;2153:15:58;:::o;909:10159:44:-;-1:-1:-1;;909:10159:44;;;;;;;;;;;;;;;;;;;;;1418:12:58;909:10159:44;;;;;;;;;;;;;;;;;325:19:58;-1:-1:-1;325:19:58;1418:12;-1:-1:-1;325:19:58;909:10159:44;;;;;;;;1418:12:58;909:10159:44;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;909:10159:44;;;;;;;;;-1:-1:-1;909:10159:44;;;;;325:19:58;;;-1:-1:-1;325:19:58;1418:12;-1:-1:-1;325:19:58;-1:-1:-1;909:10159:44;;;;;;;-1:-1:-1;;909:10159:44;;;1418:12:58;909:10159:44;;;;;1418:12:58;909:10159:44;;;;;;;;;;;;;;;;;-1:-1:-1;;909:10159:44;;;;;;;-1:-1:-1;909:10159:44;1418:12:58;909:10159:44;;442:119:55;-1:-1:-1;442:119:55;537:16;442:119;909:10159:44;;537:16:55;;;;909:10159:44;;;;;;;;537:16:55;;;;;;:::i;:::-;909:10159:44;;;;;;;;;;;;;;;530:24:55;;;;;;;;-1:-1:-1;530:24:55;442:119;:::o;909:10159:44:-;;;;;;;;-1:-1:-1;325:19:58;;-1:-1:-1;325:19:58;909:10159:44;;-1:-1:-1;909:10159:44;:::o;2336:406:35:-;325:19:58;909:10159:44;325:19:58;5006:14:35;325:19:58;;;909:10159:44;325:19:58;909:10159:44;5006:26:35;2415:321;2419:22;;;873:13:60;909:10159:44;;;;;;;;;;5006:14:35;909:10159:44;;;873:13:60;909:10159:44;873:13:60;909:10159:44;:::i;:::-;;;;;;-1:-1:-1;;909:10159:44;;;;;;;;;;;;;;;;873:13:60;909:10159:44;325:19:58;909:10159:44;325:19:58;5006:14:35;325:19:58;;;909:10159:44;325:19:58;909:10159:44;5006:14:35;2671:11;:::o;2415:321::-;2713:12;909:10159:44;2713:12:35;:::o;2336:406::-;325:19:58;909:10159:44;325:19:58;5006:14:35;325:19:58;;;909:10159:44;325:19:58;909:10159:44;5006:26:35;2415:321;2419:22;;;2949:6:59;909:10159:44;;;;;;;;;;5006:14:35;909:10159:44;;;2949:6:59;909:10159:44;2949:6:59;909:10159:44;:::i;:::-;;;2949:6:59;909:10159:44;325:19:58;909:10159:44;325:19:58;5006:14:35;325:19:58;;;909:10159:44;325:19:58;909:10159:44;5006:14:35;2671:11;:::o;6213:760:0:-;;;;;;6564:10;;;;;6624:21;-1:-1:-1;;6624:21:0;;;865:66:52;;-1:-1:-1;;;;;;6670:13:0:o;6620:188::-;-1:-1:-1;;11726:19:0;;;-1:-1:-1;;;11843:18:0;;;;;;;11840:1;11833:34;11678:19;;;11926:1;11919:17;11899:113;12249:23;-1:-1:-1;;12249:23:0;12255:17;;;;909:10159:44;;;;;;;12230:17:0;;;;;;12223:55;12365:7;909:10159:44;;;;;;;;;12398:39:0;;;12414:17;;12411:1;12404:33;909:10159:44;;;;;;;12355:23:0;6781:1;12355:23;;;;;;;12345:39;;12325:139;12512:19;;12509:1;12502:35;6749:44;;6560:338;842:7;;;3213:15;842:7;:20;;6560:338;842:32;;;;6560:338;909:10159:44;;;-1:-1:-1;;;941:1:0;-1:-1:-1;;926:16:0;1003:7;;;3254:23;;;;;-1:-1:-1;;3254:23:0;;;;;;;3300:22;;;3356:24;;3345:41;;6213:760;:::o;996:169::-;1030:6;;;;;;;;;:::i;:::-;1062:52;;1086:20;;;-1:-1:-1;;1080:26:0;1086:20;;-1:-1:-1;;909:10159:44;;-1:-1:-1;;909:10159:44;;;;1147:6:0;-1:-1:-1;;1143:10:0;1069:44;-1:-1:-1;1069:44:0;;1050:64;1138:16;;1147:6;;:::i;1143:10::-;1128:26;996:169;;1128:26;996:169;;909:10159:44;;;;;;;;;;;;;;;;;;;;;;;842:32:0;;866:8;842:32;;:20;-1:-1:-1;;853:9:0;;;;842:20;;;6560:338;6850:37;;;-1:-1:-1;;6850:37:0;;:::i;:::-;6838:49;;6560:338;;2129:778:32;909:10159:44;;;2129:778:32;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:32;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;7280:532::-;909:10159:44;;;;;;7366:29:32;;;7411:7;;:::o;7362:444::-;909:10159:44;7462:38:32;;909:10159:44;;7523:23:32;7375:20;7523:23;909:10159:44;7375:20:32;7523:23;7458:348;7576:35;7567:44;;7576:35;;7634:46;;7375:20;7634:46;909:10159:44;;;7375:20:32;7634:46;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;7763:32;7375:20;7763:32;909:10159:44;;;7375:20:32;7763:32;8838:1966:0;;;;;;9126:8;;:20;;;8838:1966;9122:48;;9184:8;;:20;;;8838:1966;9180:48;;909:10159:44;;;;;;;;:::i;:::-;;;;;9437:21:0;;;;;6867:1;9437:21;;909:10159:44;;;;;;6867:1:0;9476:23;909:10159:44;;;;;;;;;;;;;;;;;6867:1:0;9556:23;909:10159:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:23:0;;909:10159:44;;;9672:23:0;;9621:158;909:10159:44;9621:158:0;;909:10159:44;;;;9709:23:0;;9621:158;909:10159:44;9621:158:0;;909:10159:44;;;;9746:23:0;;909:10159:44;9621:158:0;;909:10159:44;;;;;;;9898:14:0;;;:32;;;8838:1966;909:10159:44;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;10058:11:0;;;;:::i;:::-;10044:31;;909:10159:44;;;;;10119:11:0;;;;:::i;:::-;10105:31;;909:10159:44;;;;;;;;;;;;;;;;;;10168:25:0;;909:10159:44;;;;;;;;;;;;10226:25:0;;909:10159:44;;;;;;;;;10315:25:0;909:10159:44;;10342:11:0;;;;:::i;:::-;10308:51;;909:10159:44;;;;;;10401:25:0;;9512:1;10391:41;10385:47;;;;:::i;:::-;10374:64;;909:10159:44;;;;;;10549:25:0;;10576:8;;;;:::i;:::-;10542:48;;10503:114;;909:10159:44;;;;10649:25:0;;10643:31;;;;:::i;:::-;10632:48;;909:10159:44;;10727:41:0;10778:19;;;8838:1966;:::o;909:10159:44:-;;;;;;;;;;;;;;;;;;;;;;;9898:32:0;909:10159:44;;;;;9916:14:0;;9898:32;;9180:48;9206:22;;;6867:1;9206:22;:::o;9184:20::-;9196:8;;;9184:20;;9122:48;9148:22;-1:-1:-1;9148:22:0;-1:-1:-1;6867:1:0;;9148:22;-1:-1:-1;9148:22:0:o;9126:20::-;9138:8;;;9126:20;;5203:1551:32;;;6283:66;6270:79;;6266:164;;909:10159:44;;;;;;-1:-1:-1;909:10159:44;;;;;;;;;;;;;;;;;;;6541:24:32;;;;;;;;;-1:-1:-1;6541:24:32;909:10159:44;;;6579:20:32;6575:113;;6698:49;-1:-1:-1;6698:49:32;-1:-1:-1;5203:1551:32;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:32;6541:24;6615:62;-1:-1:-1;6615:62:32;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "47795": [
        {
          "start": 6299,
          "length": 32
        },
        {
          "start": 6423,
          "length": 32
        },
        {
          "start": 7216,
          "length": 32
        },
        {
          "start": 7370,
          "length": 32
        }
      ],
      "47797": [
        {
          "start": 7304,
          "length": 32
        }
      ],
      "47799": [
        {
          "start": 5971,
          "length": 32
        },
        {
          "start": 6018,
          "length": 32
        },
        {
          "start": 6065,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "containsRoot(bytes32)": "48cbdfca",
    "execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": "ff4ffb85",
    "latestRoot()": "d7b0fef1",
    "lookupBlob(bytes32)": "8310d485",
    "merkleProof(bytes32)": "c235cd9e",
    "verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": "2583f763",
    "verifyMerkleProof(bytes32,bytes32,bytes32[],uint256)": "59a89283"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"riscZeroVerifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"complianceCircuitID\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"commitmentTreeDepth\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"actionTreeDepth\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BlobEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"BlobHashMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blobHash\",\"type\":\"bytes32\"}],\"name\":\"BlobNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierAppDataMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierCommitmentNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierKindMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierLabelMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"CommitmentIndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CommitmentMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"}],\"name\":\"DeletionCriterionNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"DeltaMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyCommitment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"expected\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"actual\",\"type\":\"bytes\"}],\"name\":\"ForwarderCallOutputMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"InvalidCommitmentRef\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"}],\"name\":\"InvalidNullifierRef\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"InvalidPathLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"InvalidRootRef\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"}],\"name\":\"LogicProofTagNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"LogicRefMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonEmptyDelta\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NonExistentLeafIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"NonExistingCommitment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"NonExistingRoot\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"PreExistingCommitment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"}],\"name\":\"PreExistingNullifier\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"PreExistingRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"RootMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TreeCapacityExceeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"blobHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"}],\"name\":\"BlobStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"CommitmentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NullifierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"RootAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isConsumed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"actionTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"ciphertext\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"internalType\":\"struct ExpirableBlob[]\",\"name\":\"appData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LogicInstance\",\"name\":\"instance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct LogicProof[]\",\"name\":\"logicProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentTreeRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ConsumedRefs\",\"name\":\"consumed\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct CreatedRefs\",\"name\":\"created\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"unitDeltaX\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"unitDeltaY\",\"type\":\"bytes32\"}],\"internalType\":\"struct ComplianceInstance\",\"name\":\"instance\",\"type\":\"tuple\"}],\"internalType\":\"struct ComplianceUnit[]\",\"name\":\"complianceUnits\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"valueRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierKeyCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ephemeral\",\"type\":\"bool\"}],\"internalType\":\"struct Resource\",\"name\":\"carrier\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"untrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"internalType\":\"struct ForwarderCalldata\",\"name\":\"call\",\"type\":\"tuple\"}],\"internalType\":\"struct ResourceForwarderCalldataPair[]\",\"name\":\"resourceCalldataPairs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"deltaProof\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"containsRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isContained\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isConsumed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"actionTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"ciphertext\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"internalType\":\"struct ExpirableBlob[]\",\"name\":\"appData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LogicInstance\",\"name\":\"instance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct LogicProof[]\",\"name\":\"logicProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentTreeRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ConsumedRefs\",\"name\":\"consumed\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct CreatedRefs\",\"name\":\"created\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"unitDeltaX\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"unitDeltaY\",\"type\":\"bytes32\"}],\"internalType\":\"struct ComplianceInstance\",\"name\":\"instance\",\"type\":\"tuple\"}],\"internalType\":\"struct ComplianceUnit[]\",\"name\":\"complianceUnits\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"valueRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierKeyCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ephemeral\",\"type\":\"bool\"}],\"internalType\":\"struct Resource\",\"name\":\"carrier\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"untrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"internalType\":\"struct ForwarderCalldata\",\"name\":\"call\",\"type\":\"tuple\"}],\"internalType\":\"struct ResourceForwarderCalldataPair[]\",\"name\":\"resourceCalldataPairs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"deltaProof\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blobHash\",\"type\":\"bytes32\"}],\"name\":\"lookupBlob\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"merkleProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"directionBits\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isConsumed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"actionTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"ciphertext\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"internalType\":\"struct ExpirableBlob[]\",\"name\":\"appData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LogicInstance\",\"name\":\"instance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct LogicProof[]\",\"name\":\"logicProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentTreeRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ConsumedRefs\",\"name\":\"consumed\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct CreatedRefs\",\"name\":\"created\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"unitDeltaX\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"unitDeltaY\",\"type\":\"bytes32\"}],\"internalType\":\"struct ComplianceInstance\",\"name\":\"instance\",\"type\":\"tuple\"}],\"internalType\":\"struct ComplianceUnit[]\",\"name\":\"complianceUnits\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"valueRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierKeyCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ephemeral\",\"type\":\"bool\"}],\"internalType\":\"struct Resource\",\"name\":\"carrier\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"untrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"internalType\":\"struct ForwarderCalldata\",\"name\":\"call\",\"type\":\"tuple\"}],\"internalType\":\"struct ResourceForwarderCalldataPair[]\",\"name\":\"resourceCalldataPairs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"deltaProof\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"path\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"directionBits\",\"type\":\"uint256\"}],\"name\":\"verifyMerkleProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"BlobStored(bytes32,uint8)\":{\"params\":{\"blobHash\":\"The hash of the blob being stored.\",\"deletionCriterion\":\"The deletion criterion of the blob.\"}},\"CommitmentAdded(bytes32,uint256)\":{\"params\":{\"commitment\":\"The commitment being stored.\",\"index\":\"The index of the commitment in the Merkle tree.\"}},\"NullifierAdded(bytes32,uint256)\":{\"params\":{\"index\":\"The index of the nullifier in the enumerable set.\",\"nullifier\":\"The nullifier being stored.\"}},\"RootAdded(bytes32)\":{\"params\":{\"root\":\"The root.\"}}},\"kind\":\"dev\",\"methods\":{\"containsRoot(bytes32)\":{\"params\":{\"root\":\"The root to check.\"},\"returns\":{\"isContained\":\"Whether the root exists or not.\"}},\"execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"params\":{\"transaction\":\"The transaction to execute.\"}},\"latestRoot()\":{\"returns\":{\"root\":\"The latest commitment tree state root.\"}},\"lookupBlob(bytes32)\":{\"params\":{\"blobHash\":\"The hash of the blob to lookup.\"},\"returns\":{\"blob\":\"The found blob.\"}},\"merkleProof(bytes32)\":{\"params\":{\"commitment\":\"The commitment leaf to proof inclusion in the tree for.\"},\"returns\":{\"directionBits\":\"The direction bits for the proof.\",\"siblings\":\"The siblings constituting the path from the leaf to the root.\"}},\"verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"params\":{\"transaction\":\"The transaction to verify.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BlobStored(bytes32,uint8)\":{\"notice\":\"Emitted if a blob is stored.\"},\"CommitmentAdded(bytes32,uint256)\":{\"notice\":\"Emitted if a commitment is added to the commitment accumulator.\"},\"NullifierAdded(bytes32,uint256)\":{\"notice\":\"Emitted if a nullifier is added to the nullifier set.\"},\"RootAdded(bytes32)\":{\"notice\":\"Emitted if a root is stored in the root storage.\"}},\"kind\":\"user\",\"methods\":{\"containsRoot(bytes32)\":{\"notice\":\"Checks if a commitment tree state root exists.\"},\"execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"notice\":\"Executes a transaction by adding the commitments and nullifiers to the commitment tree and nullifier set, respectively.\"},\"latestRoot()\":{\"notice\":\"Returns the latest  commitment tree state root.\"},\"lookupBlob(bytes32)\":{\"notice\":\"Looks a blob up in the blob storage or reverts.\"},\"merkleProof(bytes32)\":{\"notice\":\"Returns the Merkle proof and associated root for a commitment leaf in the tree.\"},\"verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"notice\":\"Verifies a transaction by checking the delta, resource logic, and compliance proofs.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ProtocolAdapter.sol\":\"ProtocolAdapter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@risc0-ethereum/=lib/risc0-ethereum/contracts/src/\",\":ds-test/=lib/risc0-ethereum/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-deep/=lib/forge-deep/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":solady/=lib/forge-deep/lib/solady/src/\",\":solmate/=lib/forge-deep/lib/solady/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/elliptic-curve-solidity/contracts/EllipticCurve.sol\":{\"keccak256\":\"0x50ee7c49cd01a085214ce375a6f806f8fa0898f616247770a2e8d2f9b7a59d7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://828da8f7309850b2afd6b5eaea78f3bac7678c666c1a92108abddb17c3286e4b\",\"dweb:/ipfs/Qmdv2jiGW1cfvCB5UP6MNGWGNVkQ2aAh89xG5uyinbS3hP\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuardTransient.sol\":{\"keccak256\":\"0xe56ff5015046505f81f9d62671a784e933dd099db4c3a8fa8de598f20af2c5a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355863359b4a250f7016836ef9a9672578e898503896f70a0d42b80141586f3e\",\"dweb:/ipfs/QmXXzvoMSFNQf8nRbcyRap5qzcbekWuzbXDY5C8f68JiG3\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/TransientSlot.sol\":{\"keccak256\":\"0xac673fa1e374d9e6107504af363333e3e5f6344d2e83faf57d9bfd41d77cc946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5982478dbbb218e9dd5a6e83f5c0e8d1654ddf20178484b43ef21dd2246809de\",\"dweb:/ipfs/QmaB1hS68n2kG8vTbt7EPEzmrGhkUbfiFyykGGLsAr9X22\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol\":{\"keccak256\":\"0xae73e91e4d2829b0a88176584d876382b4b7540ff07c62cb947cdf9ea43d5cf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2dd7da39a6f9b100fc1dcde565d799462cdc7d27722d2265317c3a01619c818\",\"dweb:/ipfs/Qmd3k3kcvrtfkLqVza4jHodbFH8wvq5vmfPtwekBKtPjmz\"]},\"lib/risc0-ethereum/contracts/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]},\"src/ProtocolAdapter.sol\":{\"keccak256\":\"0xa6deabafe692c263c9c49e02ced6ddd6c630714155539844f4d4eb8bd6f6ce60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f9a878a5d16a08dad4145ef47da60ef9591d0a09a0129e30dfe5940edca9f93\",\"dweb:/ipfs/QmZyMoozmkHNjoPjy9fGBauGxDHdDRMNC6N6KzRHVJnEc9\"]},\"src/Types.sol\":{\"keccak256\":\"0x4d66d36564981e4857491ddda2361576948013617804c9b2f93db07cb2f02902\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d66799e792bce5c7c0a49e636c1d2ac563eb309a6b3cf9091c45abaac745902\",\"dweb:/ipfs/QmWC9ty8aHTmGJUstH1WXKoEWcRAVFRC6M6DdWAtHX1iP5\"]},\"src/interfaces/IBlobStorage.sol\":{\"keccak256\":\"0xcf32467a2efcd49bc44370ad1bc6530699f2dbb13c42a1c942de4299b84652fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f434f6b2d5d625e4c3e6b150f7803dae3bc042baecc942a1b68ebe4bf134737a\",\"dweb:/ipfs/QmbLWBiNmzeNwik7PKi2W8FQMsGMt8jZHzw34JMNd4AZYu\"]},\"src/interfaces/ICommitmentAccumulator.sol\":{\"keccak256\":\"0xe3f2091c1aac0fc3244d2ae5877b1acecce762c2e349abec6ce03cb840df4157\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://697d2b095271884c05e6b1891fa43589ef836c6943384503541d793585bddc9e\",\"dweb:/ipfs/QmUzWCMnupyub7VDT58p4vBYwo7s1A4PBLbF8iA5SAtv6c\"]},\"src/interfaces/IForwarder.sol\":{\"keccak256\":\"0xf74120232baf3b69e5f3af0cee2e22a88718bb23747f577433b362222efb19b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c053cd5a9605a26dbebb2497ba4f6e348b4efe0ea6a1f4ea3e66fec252ff630c\",\"dweb:/ipfs/QmesTNpmnMhDngxgcdh5y2BEXAn9rwPSWMvHAyMvUsu9Lq\"]},\"src/interfaces/INullifierSet.sol\":{\"keccak256\":\"0x263ee8c0961ea5aef2a7e12e8e4ff21c7f86eccb80d62cd317f5545265a510df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df48f0e97e493be9877180ab7b22a9b6ec14d674204535881250c99f6919fb1\",\"dweb:/ipfs/Qma2DSoGrmYWxpiTDqxuB1Wir3txbjL5PxPGLUSRNPFUqs\"]},\"src/interfaces/IProtocolAdapter.sol\":{\"keccak256\":\"0x888d92cd3637520b2e9a787ab1f07b70417dc5adb73dadd6ad6689dfc6c1f452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a6b37166a5790f374c8a18ae5ddd28c481db6ce28105c45c8ff795d4cb571b\",\"dweb:/ipfs/QmQRLg7YSJY75GK1oNieRmjKVFcKKcxMCzHQCEcwRc4NVr\"]},\"src/libs/ComputableComponents.sol\":{\"keccak256\":\"0x1f7efa50202b50bb1ddd8f073d6b9904334fac280a6acb09d17f3e8fcabab1a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9219757775f1086a37be8406ee31fdb51c0488d91b55056d75088eea89beb70\",\"dweb:/ipfs/QmTgtcdTntvrdxj1TGMm6aXH2QgJ7X6V5YpBpc5s5Hp7rC\"]},\"src/libs/EllipticCurveK256.sol\":{\"keccak256\":\"0x5e683c6c694135a244b938f680b33e3d7380b10a2aa1ddd1d812dea88c0c5857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6161ad3e7f3887859e67393ddfd87701124acbaced24763339a65b165882385\",\"dweb:/ipfs/QmaoXZCMbnjgdarBZkU3CwvNhbriaE3TQZfX5sUR8ajc3j\"]},\"src/libs/MerkleTree.sol\":{\"keccak256\":\"0x536b05191ae1e1881e2896f8aade132dc4fcb28fefc3132c755d854bb02aa6d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17000b942aa8d78bf4ccc3b458d7c53d4ce440fcfae7e8d381511ffd05eeb850\",\"dweb:/ipfs/QmYjwhK4DnobCBuFN53uXpQRBzWSb3C9Ld3yfqpgkSdVBC\"]},\"src/libs/SHA256.sol\":{\"keccak256\":\"0x85cda44e257c0d69a4e9a5d5300154f7eb0787d40580c263e0a6517717c17cb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c2d664f1b843c9068a4fae25cf44355cbc0ab3e095b55eddfe3105836dd5982\",\"dweb:/ipfs/QmQg4GXwtL6hxQQa7jjepj6Sq65d89CD6awx6R7PwVY42u\"]},\"src/proving/Delta.sol\":{\"keccak256\":\"0x10e673c790d62939c5d20b5bbb84599915a38353a2ffc451a842a445ed9946ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0c891184204efb187e5108e6d37cc4c53de01be981c14b876b1978891bac4d2\",\"dweb:/ipfs/QmXuUtt6rn5qw3fvS5jFdY5qUo21ciSQgfbWNZxcTGJfkd\"]},\"src/proving/Logic.sol\":{\"keccak256\":\"0x3fa3b748b7bf36c9766679f2cf273e00f19b0f338de39b3cf94fa888647b0405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf6023a2d1f3846b8d678b738acfe6c28ced7f8ce268ae4499bd814297b7f22c\",\"dweb:/ipfs/QmTbtrGKsVGNpTaRmTBw3awAE5T2c4mu4bwjbD9SnGXXgU\"]},\"src/state/BlobStorage.sol\":{\"keccak256\":\"0x11ef2ffeaa43a67f8beaf48b4fed2721052b96c01b611bd259fab8907f4d05ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c4a32137ed9dcbacf6eef632814840a24eda4f889fbdfeec1edc879df458b9b\",\"dweb:/ipfs/QmQqvnA5VVXSG5fcsWAcu1UVXE8fQL4HsKN6royU95ruD3\"]},\"src/state/CommitmentAccumulator.sol\":{\"keccak256\":\"0xdfd257f017db48747f2b7d6dad897bcd11c4a2c6949cdc343cd969848d284414\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c260e1f46e2355dcc21832aa2920103f563fa02c8edf803762dbcaeed88683c9\",\"dweb:/ipfs/QmYs9P6yrEMzRCLyDPJDAKGdsBRJhoNDh6xHArJpAM9pog\"]},\"src/state/NullifierSet.sol\":{\"keccak256\":\"0x8314d0e2b8115d36a89fc1b0dd3eb17f5fef8b70831a374425c32d2f6c2f1a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a0d0f5e1b4f466fc95091d7c45199dc1caf564c4d48e30fd229c0aef5312d05\",\"dweb:/ipfs/QmX9pGdMrz9ZqR98W3uxLRmiE3Esm7YQNvLxNDcC82H3oT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IRiscZeroVerifier",
              "name": "riscZeroVerifier",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "complianceCircuitID",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "commitmentTreeDepth",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "actionTreeDepth",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BlobEmpty"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "BlobHashMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blobHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "BlobNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierAppDataMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierCommitmentNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierKindMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierLabelMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "current",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CommitmentIndexOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CommitmentMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "enum DeletionCriterion",
              "name": "deletionCriterion",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "DeletionCriterionNotSupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "expected",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "actual",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DeltaMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAInvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "expected",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "actual",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "ForwarderCallOutputMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidCommitmentRef"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nullifier",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidNullifierRef"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidPathLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidRootRef"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tag",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LogicProofTagNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LogicRefMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonEmptyDelta"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NonExistentLeafIndex"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "NonExistingCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "NonExistingRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "PreExistingCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nullifier",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "PreExistingNullifier"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "PreExistingRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "RootMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TreeCapacityExceeded"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blobHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "enum DeletionCriterion",
              "name": "deletionCriterion",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BlobStored",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CommitmentAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nullifier",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NullifierAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RootAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Action[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct LogicProof[]",
                      "name": "logicProofs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct LogicInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "tag",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bool",
                              "name": "isConsumed",
                              "type": "bool"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "actionTreeRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ciphertext",
                              "type": "bytes"
                            },
                            {
                              "internalType": "struct ExpirableBlob[]",
                              "name": "appData",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "enum DeletionCriterion",
                                  "name": "deletionCriterion",
                                  "type": "uint8"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "blob",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes32",
                          "name": "logicRef",
                          "type": "bytes32"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ComplianceUnit[]",
                      "name": "complianceUnits",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct ComplianceInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "struct ConsumedRefs",
                              "name": "consumed",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "nullifier",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "commitmentTreeRoot",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "struct CreatedRefs",
                              "name": "created",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "commitment",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "bytes32",
                              "name": "unitDeltaX",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "unitDeltaY",
                              "type": "bytes32"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ResourceForwarderCalldataPair[]",
                      "name": "resourceCalldataPairs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Resource",
                          "name": "carrier",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "logicRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "labelRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "valueRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "nullifierKeyCommitment",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "quantity",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "randSeed",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bool",
                              "name": "ephemeral",
                              "type": "bool"
                            }
                          ]
                        },
                        {
                          "internalType": "struct ForwarderCalldata",
                          "name": "call",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "untrustedForwarder",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "input",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "output",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "deltaProof",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransactionExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "containsRoot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isContained",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Action[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct LogicProof[]",
                      "name": "logicProofs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct LogicInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "tag",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bool",
                              "name": "isConsumed",
                              "type": "bool"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "actionTreeRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ciphertext",
                              "type": "bytes"
                            },
                            {
                              "internalType": "struct ExpirableBlob[]",
                              "name": "appData",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "enum DeletionCriterion",
                                  "name": "deletionCriterion",
                                  "type": "uint8"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "blob",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes32",
                          "name": "logicRef",
                          "type": "bytes32"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ComplianceUnit[]",
                      "name": "complianceUnits",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct ComplianceInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "struct ConsumedRefs",
                              "name": "consumed",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "nullifier",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "commitmentTreeRoot",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "struct CreatedRefs",
                              "name": "created",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "commitment",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "bytes32",
                              "name": "unitDeltaX",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "unitDeltaY",
                              "type": "bytes32"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ResourceForwarderCalldataPair[]",
                      "name": "resourceCalldataPairs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Resource",
                          "name": "carrier",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "logicRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "labelRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "valueRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "nullifierKeyCommitment",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "quantity",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "randSeed",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bool",
                              "name": "ephemeral",
                              "type": "bool"
                            }
                          ]
                        },
                        {
                          "internalType": "struct ForwarderCalldata",
                          "name": "call",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "untrustedForwarder",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "input",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "output",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "deltaProof",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blobHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lookupBlob",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "blob",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "siblings",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "directionBits",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Action[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct LogicProof[]",
                      "name": "logicProofs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct LogicInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "tag",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bool",
                              "name": "isConsumed",
                              "type": "bool"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "actionTreeRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ciphertext",
                              "type": "bytes"
                            },
                            {
                              "internalType": "struct ExpirableBlob[]",
                              "name": "appData",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "enum DeletionCriterion",
                                  "name": "deletionCriterion",
                                  "type": "uint8"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "blob",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes32",
                          "name": "logicRef",
                          "type": "bytes32"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ComplianceUnit[]",
                      "name": "complianceUnits",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct ComplianceInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "struct ConsumedRefs",
                              "name": "consumed",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "nullifier",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "commitmentTreeRoot",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "struct CreatedRefs",
                              "name": "created",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "commitment",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "bytes32",
                              "name": "unitDeltaX",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "unitDeltaY",
                              "type": "bytes32"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ResourceForwarderCalldataPair[]",
                      "name": "resourceCalldataPairs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Resource",
                          "name": "carrier",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "logicRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "labelRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "valueRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "nullifierKeyCommitment",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "quantity",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "randSeed",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bool",
                              "name": "ephemeral",
                              "type": "bool"
                            }
                          ]
                        },
                        {
                          "internalType": "struct ForwarderCalldata",
                          "name": "call",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "untrustedForwarder",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "input",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "output",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "deltaProof",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "path",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "directionBits",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyMerkleProof"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "containsRoot(bytes32)": {
            "params": {
              "root": "The root to check."
            },
            "returns": {
              "isContained": "Whether the root exists or not."
            }
          },
          "execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "params": {
              "transaction": "The transaction to execute."
            }
          },
          "latestRoot()": {
            "returns": {
              "root": "The latest commitment tree state root."
            }
          },
          "lookupBlob(bytes32)": {
            "params": {
              "blobHash": "The hash of the blob to lookup."
            },
            "returns": {
              "blob": "The found blob."
            }
          },
          "merkleProof(bytes32)": {
            "params": {
              "commitment": "The commitment leaf to proof inclusion in the tree for."
            },
            "returns": {
              "directionBits": "The direction bits for the proof.",
              "siblings": "The siblings constituting the path from the leaf to the root."
            }
          },
          "verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "params": {
              "transaction": "The transaction to verify."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "containsRoot(bytes32)": {
            "notice": "Checks if a commitment tree state root exists."
          },
          "execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "notice": "Executes a transaction by adding the commitments and nullifiers to the commitment tree and nullifier set, respectively."
          },
          "latestRoot()": {
            "notice": "Returns the latest  commitment tree state root."
          },
          "lookupBlob(bytes32)": {
            "notice": "Looks a blob up in the blob storage or reverts."
          },
          "merkleProof(bytes32)": {
            "notice": "Returns the Merkle proof and associated root for a commitment leaf in the tree."
          },
          "verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),bytes32,bytes32))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "notice": "Verifies a transaction by checking the delta, resource logic, and compliance proofs."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@risc0-ethereum/=lib/risc0-ethereum/contracts/src/",
        "ds-test/=lib/risc0-ethereum/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-deep/=lib/forge-deep/src/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "risc0-ethereum/=lib/risc0-ethereum/",
        "solady/=lib/forge-deep/lib/solady/src/",
        "solmate/=lib/forge-deep/lib/solady/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/ProtocolAdapter.sol": "ProtocolAdapter"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/elliptic-curve-solidity/contracts/EllipticCurve.sol": {
        "keccak256": "0x50ee7c49cd01a085214ce375a6f806f8fa0898f616247770a2e8d2f9b7a59d7b",
        "urls": [
          "bzz-raw://828da8f7309850b2afd6b5eaea78f3bac7678c666c1a92108abddb17c3286e4b",
          "dweb:/ipfs/Qmdv2jiGW1cfvCB5UP6MNGWGNVkQ2aAh89xG5uyinbS3hP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
        "keccak256": "0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6",
        "urls": [
          "bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd",
          "dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuardTransient.sol": {
        "keccak256": "0xe56ff5015046505f81f9d62671a784e933dd099db4c3a8fa8de598f20af2c5a3",
        "urls": [
          "bzz-raw://355863359b4a250f7016836ef9a9672578e898503896f70a0d42b80141586f3e",
          "dweb:/ipfs/QmXXzvoMSFNQf8nRbcyRap5qzcbekWuzbXDY5C8f68JiG3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol": {
        "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
        "urls": [
          "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
          "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/TransientSlot.sol": {
        "keccak256": "0xac673fa1e374d9e6107504af363333e3e5f6344d2e83faf57d9bfd41d77cc946",
        "urls": [
          "bzz-raw://5982478dbbb218e9dd5a6e83f5c0e8d1654ddf20178484b43ef21dd2246809de",
          "dweb:/ipfs/QmaB1hS68n2kG8vTbt7EPEzmrGhkUbfiFyykGGLsAr9X22"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
        "urls": [
          "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
          "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06",
        "urls": [
          "bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231",
          "dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y"
        ],
        "license": "MIT"
      },
      "lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol": {
        "keccak256": "0xae73e91e4d2829b0a88176584d876382b4b7540ff07c62cb947cdf9ea43d5cf3",
        "urls": [
          "bzz-raw://f2dd7da39a6f9b100fc1dcde565d799462cdc7d27722d2265317c3a01619c818",
          "dweb:/ipfs/Qmd3k3kcvrtfkLqVza4jHodbFH8wvq5vmfPtwekBKtPjmz"
        ],
        "license": "Apache-2.0"
      },
      "lib/risc0-ethereum/contracts/src/Util.sol": {
        "keccak256": "0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82",
        "urls": [
          "bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c",
          "dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"
        ],
        "license": "Apache-2.0"
      },
      "src/ProtocolAdapter.sol": {
        "keccak256": "0xa6deabafe692c263c9c49e02ced6ddd6c630714155539844f4d4eb8bd6f6ce60",
        "urls": [
          "bzz-raw://9f9a878a5d16a08dad4145ef47da60ef9591d0a09a0129e30dfe5940edca9f93",
          "dweb:/ipfs/QmZyMoozmkHNjoPjy9fGBauGxDHdDRMNC6N6KzRHVJnEc9"
        ],
        "license": "MIT"
      },
      "src/Types.sol": {
        "keccak256": "0x4d66d36564981e4857491ddda2361576948013617804c9b2f93db07cb2f02902",
        "urls": [
          "bzz-raw://0d66799e792bce5c7c0a49e636c1d2ac563eb309a6b3cf9091c45abaac745902",
          "dweb:/ipfs/QmWC9ty8aHTmGJUstH1WXKoEWcRAVFRC6M6DdWAtHX1iP5"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBlobStorage.sol": {
        "keccak256": "0xcf32467a2efcd49bc44370ad1bc6530699f2dbb13c42a1c942de4299b84652fb",
        "urls": [
          "bzz-raw://f434f6b2d5d625e4c3e6b150f7803dae3bc042baecc942a1b68ebe4bf134737a",
          "dweb:/ipfs/QmbLWBiNmzeNwik7PKi2W8FQMsGMt8jZHzw34JMNd4AZYu"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICommitmentAccumulator.sol": {
        "keccak256": "0xe3f2091c1aac0fc3244d2ae5877b1acecce762c2e349abec6ce03cb840df4157",
        "urls": [
          "bzz-raw://697d2b095271884c05e6b1891fa43589ef836c6943384503541d793585bddc9e",
          "dweb:/ipfs/QmUzWCMnupyub7VDT58p4vBYwo7s1A4PBLbF8iA5SAtv6c"
        ],
        "license": "MIT"
      },
      "src/interfaces/IForwarder.sol": {
        "keccak256": "0xf74120232baf3b69e5f3af0cee2e22a88718bb23747f577433b362222efb19b1",
        "urls": [
          "bzz-raw://c053cd5a9605a26dbebb2497ba4f6e348b4efe0ea6a1f4ea3e66fec252ff630c",
          "dweb:/ipfs/QmesTNpmnMhDngxgcdh5y2BEXAn9rwPSWMvHAyMvUsu9Lq"
        ],
        "license": "MIT"
      },
      "src/interfaces/INullifierSet.sol": {
        "keccak256": "0x263ee8c0961ea5aef2a7e12e8e4ff21c7f86eccb80d62cd317f5545265a510df",
        "urls": [
          "bzz-raw://6df48f0e97e493be9877180ab7b22a9b6ec14d674204535881250c99f6919fb1",
          "dweb:/ipfs/Qma2DSoGrmYWxpiTDqxuB1Wir3txbjL5PxPGLUSRNPFUqs"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolAdapter.sol": {
        "keccak256": "0x888d92cd3637520b2e9a787ab1f07b70417dc5adb73dadd6ad6689dfc6c1f452",
        "urls": [
          "bzz-raw://c9a6b37166a5790f374c8a18ae5ddd28c481db6ce28105c45c8ff795d4cb571b",
          "dweb:/ipfs/QmQRLg7YSJY75GK1oNieRmjKVFcKKcxMCzHQCEcwRc4NVr"
        ],
        "license": "MIT"
      },
      "src/libs/ComputableComponents.sol": {
        "keccak256": "0x1f7efa50202b50bb1ddd8f073d6b9904334fac280a6acb09d17f3e8fcabab1a4",
        "urls": [
          "bzz-raw://f9219757775f1086a37be8406ee31fdb51c0488d91b55056d75088eea89beb70",
          "dweb:/ipfs/QmTgtcdTntvrdxj1TGMm6aXH2QgJ7X6V5YpBpc5s5Hp7rC"
        ],
        "license": "MIT"
      },
      "src/libs/EllipticCurveK256.sol": {
        "keccak256": "0x5e683c6c694135a244b938f680b33e3d7380b10a2aa1ddd1d812dea88c0c5857",
        "urls": [
          "bzz-raw://d6161ad3e7f3887859e67393ddfd87701124acbaced24763339a65b165882385",
          "dweb:/ipfs/QmaoXZCMbnjgdarBZkU3CwvNhbriaE3TQZfX5sUR8ajc3j"
        ],
        "license": "MIT"
      },
      "src/libs/MerkleTree.sol": {
        "keccak256": "0x536b05191ae1e1881e2896f8aade132dc4fcb28fefc3132c755d854bb02aa6d1",
        "urls": [
          "bzz-raw://17000b942aa8d78bf4ccc3b458d7c53d4ce440fcfae7e8d381511ffd05eeb850",
          "dweb:/ipfs/QmYjwhK4DnobCBuFN53uXpQRBzWSb3C9Ld3yfqpgkSdVBC"
        ],
        "license": "MIT"
      },
      "src/libs/SHA256.sol": {
        "keccak256": "0x85cda44e257c0d69a4e9a5d5300154f7eb0787d40580c263e0a6517717c17cb9",
        "urls": [
          "bzz-raw://5c2d664f1b843c9068a4fae25cf44355cbc0ab3e095b55eddfe3105836dd5982",
          "dweb:/ipfs/QmQg4GXwtL6hxQQa7jjepj6Sq65d89CD6awx6R7PwVY42u"
        ],
        "license": "MIT"
      },
      "src/proving/Delta.sol": {
        "keccak256": "0x10e673c790d62939c5d20b5bbb84599915a38353a2ffc451a842a445ed9946ef",
        "urls": [
          "bzz-raw://d0c891184204efb187e5108e6d37cc4c53de01be981c14b876b1978891bac4d2",
          "dweb:/ipfs/QmXuUtt6rn5qw3fvS5jFdY5qUo21ciSQgfbWNZxcTGJfkd"
        ],
        "license": "MIT"
      },
      "src/proving/Logic.sol": {
        "keccak256": "0x3fa3b748b7bf36c9766679f2cf273e00f19b0f338de39b3cf94fa888647b0405",
        "urls": [
          "bzz-raw://cf6023a2d1f3846b8d678b738acfe6c28ced7f8ce268ae4499bd814297b7f22c",
          "dweb:/ipfs/QmTbtrGKsVGNpTaRmTBw3awAE5T2c4mu4bwjbD9SnGXXgU"
        ],
        "license": "MIT"
      },
      "src/state/BlobStorage.sol": {
        "keccak256": "0x11ef2ffeaa43a67f8beaf48b4fed2721052b96c01b611bd259fab8907f4d05ec",
        "urls": [
          "bzz-raw://3c4a32137ed9dcbacf6eef632814840a24eda4f889fbdfeec1edc879df458b9b",
          "dweb:/ipfs/QmQqvnA5VVXSG5fcsWAcu1UVXE8fQL4HsKN6royU95ruD3"
        ],
        "license": "MIT"
      },
      "src/state/CommitmentAccumulator.sol": {
        "keccak256": "0xdfd257f017db48747f2b7d6dad897bcd11c4a2c6949cdc343cd969848d284414",
        "urls": [
          "bzz-raw://c260e1f46e2355dcc21832aa2920103f563fa02c8edf803762dbcaeed88683c9",
          "dweb:/ipfs/QmYs9P6yrEMzRCLyDPJDAKGdsBRJhoNDh6xHArJpAM9pog"
        ],
        "license": "MIT"
      },
      "src/state/NullifierSet.sol": {
        "keccak256": "0x8314d0e2b8115d36a89fc1b0dd3eb17f5fef8b70831a374425c32d2f6c2f1a90",
        "urls": [
          "bzz-raw://5a0d0f5e1b4f466fc95091d7c45199dc1caf564c4d48e30fd229c0aef5312d05",
          "dweb:/ipfs/QmX9pGdMrz9ZqR98W3uxLRmiE3Esm7YQNvLxNDcC82H3oT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 44
}