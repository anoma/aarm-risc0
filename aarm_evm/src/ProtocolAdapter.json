{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "riscZeroVerifier",
          "type": "address",
          "internalType": "contract IRiscZeroVerifier"
        },
        {
          "name": "complianceCircuitID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "commitmentTreeDepth",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "actionTreeDepth",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "containsRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "isContained",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "transaction",
          "type": "tuple",
          "internalType": "struct Transaction",
          "components": [
            {
              "name": "actions",
              "type": "tuple[]",
              "internalType": "struct Action[]",
              "components": [
                {
                  "name": "logicProofs",
                  "type": "tuple[]",
                  "internalType": "struct LogicProof[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct LogicInstance",
                      "components": [
                        {
                          "name": "tag",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "isConsumed",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "actionTreeRoot",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "ciphertext",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "appData",
                          "type": "tuple[]",
                          "internalType": "struct ExpirableBlob[]",
                          "components": [
                            {
                              "name": "deletionCriterion",
                              "type": "uint8",
                              "internalType": "enum DeletionCriterion"
                            },
                            {
                              "name": "blob",
                              "type": "bytes",
                              "internalType": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "logicRef",
                      "type": "bytes32",
                      "internalType": "bytes32"
                    }
                  ]
                },
                {
                  "name": "complianceUnits",
                  "type": "tuple[]",
                  "internalType": "struct ComplianceUnit[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct ComplianceInstance",
                      "components": [
                        {
                          "name": "consumed",
                          "type": "tuple",
                          "internalType": "struct ConsumedRefs",
                          "components": [
                            {
                              "name": "nullifier",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "commitmentTreeRoot",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "created",
                          "type": "tuple",
                          "internalType": "struct CreatedRefs",
                          "components": [
                            {
                              "name": "commitment",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "unitDelta",
                          "type": "uint256[2]",
                          "internalType": "uint256[2]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "resourceCalldataPairs",
                  "type": "tuple[]",
                  "internalType": "struct ResourceForwarderCalldataPair[]",
                  "components": [
                    {
                      "name": "carrier",
                      "type": "tuple",
                      "internalType": "struct Resource",
                      "components": [
                        {
                          "name": "logicRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "labelRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "valueRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "nullifierKeyCommitment",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "quantity",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "nonce",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "randSeed",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "ephemeral",
                          "type": "bool",
                          "internalType": "bool"
                        }
                      ]
                    },
                    {
                      "name": "call",
                      "type": "tuple",
                      "internalType": "struct ForwarderCalldata",
                      "components": [
                        {
                          "name": "untrustedForwarder",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "input",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "output",
                          "type": "bytes",
                          "internalType": "bytes"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "deltaProof",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "latestRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lookupBlob",
      "inputs": [
        {
          "name": "blobHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "blob",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "merkleProof",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "siblings",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        },
        {
          "name": "directionBits",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verify",
      "inputs": [
        {
          "name": "transaction",
          "type": "tuple",
          "internalType": "struct Transaction",
          "components": [
            {
              "name": "actions",
              "type": "tuple[]",
              "internalType": "struct Action[]",
              "components": [
                {
                  "name": "logicProofs",
                  "type": "tuple[]",
                  "internalType": "struct LogicProof[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct LogicInstance",
                      "components": [
                        {
                          "name": "tag",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "isConsumed",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "actionTreeRoot",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "ciphertext",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "appData",
                          "type": "tuple[]",
                          "internalType": "struct ExpirableBlob[]",
                          "components": [
                            {
                              "name": "deletionCriterion",
                              "type": "uint8",
                              "internalType": "enum DeletionCriterion"
                            },
                            {
                              "name": "blob",
                              "type": "bytes",
                              "internalType": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "logicRef",
                      "type": "bytes32",
                      "internalType": "bytes32"
                    }
                  ]
                },
                {
                  "name": "complianceUnits",
                  "type": "tuple[]",
                  "internalType": "struct ComplianceUnit[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct ComplianceInstance",
                      "components": [
                        {
                          "name": "consumed",
                          "type": "tuple",
                          "internalType": "struct ConsumedRefs",
                          "components": [
                            {
                              "name": "nullifier",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "commitmentTreeRoot",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "created",
                          "type": "tuple",
                          "internalType": "struct CreatedRefs",
                          "components": [
                            {
                              "name": "commitment",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "unitDelta",
                          "type": "uint256[2]",
                          "internalType": "uint256[2]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "resourceCalldataPairs",
                  "type": "tuple[]",
                  "internalType": "struct ResourceForwarderCalldataPair[]",
                  "components": [
                    {
                      "name": "carrier",
                      "type": "tuple",
                      "internalType": "struct Resource",
                      "components": [
                        {
                          "name": "logicRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "labelRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "valueRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "nullifierKeyCommitment",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "quantity",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "nonce",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "randSeed",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "ephemeral",
                          "type": "bool",
                          "internalType": "bool"
                        }
                      ]
                    },
                    {
                      "name": "call",
                      "type": "tuple",
                      "internalType": "struct ForwarderCalldata",
                      "components": [
                        {
                          "name": "untrustedForwarder",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "input",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "output",
                          "type": "bytes",
                          "internalType": "bytes"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "deltaProof",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verifyMerkleProof",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "path",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        },
        {
          "name": "directionBits",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "BlobStored",
      "inputs": [
        {
          "name": "blobHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "deletionCriterion",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum DeletionCriterion"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CommitmentAdded",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NullifierAdded",
      "inputs": [
        {
          "name": "nullifier",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RootAdded",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransactionExecuted",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "transaction",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Transaction",
          "components": [
            {
              "name": "actions",
              "type": "tuple[]",
              "internalType": "struct Action[]",
              "components": [
                {
                  "name": "logicProofs",
                  "type": "tuple[]",
                  "internalType": "struct LogicProof[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct LogicInstance",
                      "components": [
                        {
                          "name": "tag",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "isConsumed",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "actionTreeRoot",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "ciphertext",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "appData",
                          "type": "tuple[]",
                          "internalType": "struct ExpirableBlob[]",
                          "components": [
                            {
                              "name": "deletionCriterion",
                              "type": "uint8",
                              "internalType": "enum DeletionCriterion"
                            },
                            {
                              "name": "blob",
                              "type": "bytes",
                              "internalType": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "logicRef",
                      "type": "bytes32",
                      "internalType": "bytes32"
                    }
                  ]
                },
                {
                  "name": "complianceUnits",
                  "type": "tuple[]",
                  "internalType": "struct ComplianceUnit[]",
                  "components": [
                    {
                      "name": "proof",
                      "type": "bytes",
                      "internalType": "bytes"
                    },
                    {
                      "name": "instance",
                      "type": "tuple",
                      "internalType": "struct ComplianceInstance",
                      "components": [
                        {
                          "name": "consumed",
                          "type": "tuple",
                          "internalType": "struct ConsumedRefs",
                          "components": [
                            {
                              "name": "nullifier",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "commitmentTreeRoot",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "created",
                          "type": "tuple",
                          "internalType": "struct CreatedRefs",
                          "components": [
                            {
                              "name": "commitment",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            },
                            {
                              "name": "logicRef",
                              "type": "bytes32",
                              "internalType": "bytes32"
                            }
                          ]
                        },
                        {
                          "name": "unitDelta",
                          "type": "uint256[2]",
                          "internalType": "uint256[2]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "resourceCalldataPairs",
                  "type": "tuple[]",
                  "internalType": "struct ResourceForwarderCalldataPair[]",
                  "components": [
                    {
                      "name": "carrier",
                      "type": "tuple",
                      "internalType": "struct Resource",
                      "components": [
                        {
                          "name": "logicRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "labelRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "valueRef",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "nullifierKeyCommitment",
                          "type": "bytes32",
                          "internalType": "bytes32"
                        },
                        {
                          "name": "quantity",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "nonce",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "randSeed",
                          "type": "uint256",
                          "internalType": "uint256"
                        },
                        {
                          "name": "ephemeral",
                          "type": "bool",
                          "internalType": "bool"
                        }
                      ]
                    },
                    {
                      "name": "call",
                      "type": "tuple",
                      "internalType": "struct ForwarderCalldata",
                      "components": [
                        {
                          "name": "untrustedForwarder",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "input",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "output",
                          "type": "bytes",
                          "internalType": "bytes"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "deltaProof",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "BlobEmpty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "BlobHashMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "BlobNotFound",
      "inputs": [
        {
          "name": "blobHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierAppDataMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierCommitmentNotFound",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierKindMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CalldataCarrierLabelMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "CommitmentIndexOutOfBounds",
      "inputs": [
        {
          "name": "current",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "limit",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "CommitmentMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "DeletionCriterionNotSupported",
      "inputs": [
        {
          "name": "deletionCriterion",
          "type": "uint8",
          "internalType": "enum DeletionCriterion"
        }
      ]
    },
    {
      "type": "error",
      "name": "DeltaMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "actual",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureLength",
      "inputs": [
        {
          "name": "length",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureS",
      "inputs": [
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "EmptyCommitment",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ForwarderCallOutputMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "actual",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidCommitmentRef",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidNullifierRef",
      "inputs": [
        {
          "name": "nullifier",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidPathLength",
      "inputs": [
        {
          "name": "expected",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "actual",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidRoot",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidRootRef",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "LogicProofTagNotFound",
      "inputs": [
        {
          "name": "tag",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "LogicRefMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "NonEmptyDelta",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NonExistentLeafIndex",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "NonExistingCommitment",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "NonExistingRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "PreExistingCommitment",
      "inputs": [
        {
          "name": "commitment",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "PreExistingNullifier",
      "inputs": [
        {
          "name": "nullifier",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "PreExistingRoot",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RootMismatch",
      "inputs": [
        {
          "name": "expected",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "actual",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "TreeCapacityExceeded",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60e0806040523461016b57608081613178803803809161001f828561016f565b83398101031261016b578051906001600160a01b038216820361016b5760208101519160ff61005c6060610055604086016101a6565b94016101a6565b9216806002557fcc1d2f838445db7aec431df9ee8a871f40e7aa5e064fc056633ef8c60fab7b06905f905b80821061010a5750505f805561009c816101b4565b156100f8575060805260c05260a052604051612f3790816102418239608051818181611abb01528181611b3701528181611e300152611ec9015260a05181611e87015260c051818181611973015281816119a201526119d10152f35b63db788c2b60e01b5f5260045260245ffd5b90915f60209160028252808584842001556040518381019180835260408201526040815261013960608261016f565b604051918291518091835e8101838152039060025afa156101605760015f51920190610087565b6040513d5f823e3d90fd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761019257604052565b634e487b7160e01b5f52604160045260245ffd5b519060ff8216820361016b57565b805f52600460205260405f2054155f1461023b5760035468010000000000000000811015610192576001810180600355811015610227577fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018190556003545f9182526004602052604090912055600190565b634e487b7160e01b5f52603260045260245ffd5b505f9056fe60806040526004361015610011575f80fd5b5f3560e01c806348cbdfca14610f1b57806359a8928314610d6e5780638310d48514610d375780639a49e741146103a7578063c235cd9e14610135578063d7b0fef1146100825763f3eeec5514610066575f80fd5b3461007e5761007c61007736610f74565b6116dd565b005b5f80fd5b3461007e575f60031936011261007e576003545f1981018181116101085760035411156100db5760035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85a0154604051908152602090f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b3461007e57602060031936011261007e57600435600254156100db5760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace54811461037f57805f52600560205260405f2054908115610354575f19820191808311610108575f5480911161032557505f8281527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496020526040902054908082036102f757825f906002546101eb816115b0565b915f905b8282106102435750505060405190604082019260408352815180945260206060840192015f945b80861061022b57505082935060208301520390f35b90926020806001928651815201940195019490610216565b600181166102cc57815f52600160205260405f20906001810191828211610108576001925f5260205260405f20549582841b17955b806102bc575060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8301546102b08487611656565b525b811c9101906101ef565b6102c68487611656565b526102b2565b815f52600160205260405f20905f19810191818311610108576001925f5260205260405f2054610278565b7fc9e0e757000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b827fdbc744cd000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fff34f2b6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faac1fcc6000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461007e576103b536610f74565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c610d0f5760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d610408816116dd565b610413600954610fa7565b80600955604051602081526060810161042c8480610fb5565b80926040602086015252608083019060808360051b8501019281925f925b8284106109685788887fe6cf32ad35a824b023c28f7d5fd0e9018038406df7c491a244fc5752894d953989806104998b6104876020880188611008565b90601f19858403016040860152611058565b0390a25f906104a881806111d2565b9190505f5b82811061053757836104be8161299e565b1561050c577f388a5f4af784e29fc791e14e90d372b6057e8379d9d5556e843545420c675dea5f80a25f7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d005b7fdb788c2b000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b61054b8161054584806111d2565b90611259565b61055581806111d2565b90505f5b8181106107505750506040810161057081836111d2565b9290505f5b83811061058857505050506001016104ad565b61061b6105ad6105a28361059c87876111d2565b906112dc565b610100810190611226565b5f73ffffffffffffffffffffffffffffffffffffffff6105cc83612505565b166105da60208401846115e1565b836040939293518097819582947f2dec7eb1000000000000000000000000000000000000000000000000000000008452602060048501526024840191611058565b03925af1918215610745575f926106c9575b508151602083012090604081019161064f61064884846115e1565b36916116a7565b602081519101200361066657505050600101610575565b6106c591610673916115e1565b9190926106b36040519485947fc504fada000000000000000000000000000000000000000000000000000000008652604060048701526044860191611058565b90600319848303016024850152610f4f565b0390fd5b9091503d805f833e6106db818361131c565b81019060208183031261007e5780519067ffffffffffffffff821161007e570181601f8201121561007e5780519061071282611384565b92610720604051948561131c565b8284526020838301011161007e57815f9260208093018386015e83010152908a61062d565b6040513d5f823e3d90fd5b61076b6107618261054586806111d2565b6020810190611270565b6020810135801515810361007e57156108315780356107898161292e565b50600654905f198201918211610108577f48baa580cd3e9c4040ffa9507f688e0d988bb8b15450fb680ce90fe52f7e544a5f80a3905b60808201916107ce83826111d2565b9050155b80156107e95750506107e49150610fa7565b610559565b90916107fe6107f885856111d2565b906112a3565b9061080c60208301836115e1565b9235600281101561007e5761082a9361082492612623565b50610fa7565b91906107d2565b80975035600254905f549061084582610fa7565b5f5560018201808311610108576001841b8111610940578282945f905b8082106108a457505050815f52600560205260405f20557f0c825ce0b2f71c91fa27e49984551a39d6f4db65958d2cf59a0ce45c3948312f5f80a396906107bf565b909195825f52600160205260405f20875f526020528060405f205560018716155f1461090b5760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8301546001916108ff91906128d6565b965b811c920190610862565b825f52600160205260405f20905f198801908882116101085760019261093a925f5260205260405f20546128d6565b96610901565b7f494a639d000000000000000000000000000000000000000000000000000000005f5260045ffd5b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087820301835261099e86836111a0565b60608201906109ad8180610fb5565b809360608652526080840160808460051b86010193825f905b828210610c5d5750505050506109df6020820182610fb5565b84849294036020860152808252602082019060208160051b8401019480935f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0181360301925b848110610bd45750505050505050806040610a42920190610fb5565b926040818403910152828252602082019060208460051b8401019381935f927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee181360301905b838510610aab57505050505050506020806001929701930194019291939061044a565b90919293949596601f1984820301875287358381121561007e5782610b299101803583526020810135602084015260408101356040840152606081013560608401526080810135608084015260a081013560a084015260c081013560c0840152610b1760e08201611078565b151560e08401526101008101906111a0565b61012061010083015280359173ffffffffffffffffffffffffffffffffffffffff831680930361007e57610bc56020928260019561012086950152610b94610b89610b7686850185611008565b6060610140860152610180850191611058565b926040810190611008565b916101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee082860301910152611058565b99019701950193929190610a88565b90919293949597601f198482030187528835908582121561007e5760208091604086600195019160c080610c1b610c0b8680611008565b6101008652610100860191611058565b9486810135878501528481013585850152606081013560608501526080810135608085015260a081013560a0850152019101379a019701959493929101610a26565b90919293957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888203018552610c9387836111a0565b610cae610ca08280611008565b606085526060850191611058565b6020820135917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030183121561007e5783604080610cfc858560209860019a8a990389880152016110bb565b93013591015298019501939201906109c6565b7f3ee5aeb5000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461007e57602060031936011261007e57610d6a610d5660043561141d565b604051918291602083526020830190610f4f565b0390f35b3461007e57608060031936011261007e5760443560043567ffffffffffffffff821161007e573660238301121561007e5781600401359167ffffffffffffffff831161007e5760248360051b82010136811161007e5760643591600254808603610eeb5750610de8845f52600460205260405f2054151590565b15610ebf57610df68561136c565b94610e04604051968761131c565b8552602401602085015b828210610eaf57505050602435928051905f925b828410610e62578585818103610e3457005b7fa0d3b062000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b909192946001908183881c16155f14610e9457610e8990610e838886611656565b516128d6565b955b01929190610e22565b610ea990610ea28886611656565b51906128d6565b95610e8b565b8135815260209182019101610e0e565b837ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b85907f88b3170e000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b3461007e57602060031936011261007e576020610f456004355f52600460205260405f2054151590565b6040519015158152f35b90601f19601f602080948051918291828752018686015e5f8582860101520116010190565b602060031982011261007e576004359067ffffffffffffffff821161007e576003198260409203011261007e5760040190565b5f1981146101085760010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561007e57016020813591019167ffffffffffffffff821161007e578160051b3603831361007e57565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561007e57016020813591019167ffffffffffffffff821161007e57813603831361007e57565b601f8260209493601f1993818652868601375f8582860101520116010190565b3590811515820361007e57565b90813591600283101561007e576110a86040916110b89484526020810190611008565b9190928160208201520191611058565b90565b90813581526110cc60208301611078565b151560208201526040820135604082015261110c6111016110f06060850185611008565b60a0606086015260a0850191611058565b926080810190610fb5565b9290916080818303910152828152602081019260208160051b83010193835f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc182360301945b848410611164575050505050505090565b90919293949596601f1982820301835287358781121561007e57602061118f60019387839401611085565b990193019401929195949390611153565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18236030181121561007e570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561007e570180359067ffffffffffffffff821161007e57602001918160051b3603831361007e57565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18136030182121561007e570190565b908210156100db576110b89160051b810190611226565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030182121561007e570190565b90156100db578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18136030182121561007e570190565b91908110156100db5760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee18136030182121561007e570190565b90601f601f19910116810190811067ffffffffffffffff82111761133f57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161133f5760051b60200190565b67ffffffffffffffff811161133f57601f01601f191660200190565b5f6040516113af60208261131c565b525f6040518180805e5260205f808060025afa15610745575f5190565b90600182811c92168015611413575b60208310146113e657565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916113db565b906114266113a0565b821461158857815f52600860205260405f2060405190815f82549261144a846113cc565b9081845260208401946001811690815f1461154d575060011461150e575b50509161147a5f92602094038561131c565b604051809185518091835e8101838152039060025afa15610745575f5161149f6113a0565b81036114d157837f632989d6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091928181036114e057505090565b7f1844c87b000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f908152602081209092505b818310611531575050810160200161147a5f611468565b602091935080600191548385890101520191019091849261151a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686525050151560051b8201602001905061147a5f611468565b7ff82ea8b4000000000000000000000000000000000000000000000000000000005f5260045ffd5b906115ba8261136c565b6115c7604051918261131c565b828152601f196115d7829461136c565b0190602036910137565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561007e570180359067ffffffffffffffff821161007e5760200191813603831361007e57565b9061164c9060409396959496606084526060840191611058565b9460208201520152565b80518210156100db5760209160051b010190565b919060408051939061167c908561131c565b83906040810192831161007e57905b82821061169757505050565b813581526020918201910161168b565b9291926116b382611384565b916116c1604051938461131c565b82948184528183011161007e578281602093845f960137010152565b604080516116eb828261131c565b8136823760017f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b87f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179882806124e7565b50806124df575b15612482575f928360016401000003d019835b6123f65750505050906401000003d0198092818086800980920994099009602083015281529161178481806111d2565b90505f805b8282106123c95761179a91506115b0565b905f5f5b8281106119075750506117f55750505080511590816117e8575b50156117c057565b7fe073516d000000000000000000000000000000000000000000000000000000005f5260045ffd5b602091500151155f6117b8565b825160208101918260208251919201905f5b8181106118f15750505091816118295f9360209503601f19810183528261131c565b8551918291518091835e8101838152039060025afa156118e7576118849273ffffffffffffffffffffffffffffffffffffffff9261187b84936118756106485f519260208101906115e1565b90612bb6565b90969196612bf0565b6020825192015190805191602083019384528183015281526118a760608261131c565b519020169116908082036118b9575050565b7fe6d44b4c000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b50513d5f823e3d90fd5b8251845260209384019390920191600101611807565b6119158161054587806111d2565b86810161192281836111d2565b9190505f5b8281106120ef5750505061193e60208201826111d2565b5f91505b808210611d1057505061195581806111d2565b9050611960816115b0565b5f5b828110611cea5750611999600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b6115b0565b905f5b600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b8110611c8f575050600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b5b60018111611bd157508051156100db5760200151915f5b828110611a1d575050505060010161179e565b611a2b8161054584806111d2565b6020810190858c611a3c8484611270565b013503611b9457908160205f8e611a5684611a5f976115e1565b96909585611270565b90805190611a8882611a7a87820195888752848301906110bb565b03601f19810184528361131c565b51918291518091835e8101838152039060025afa15611b8a575f519073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b1561007e57611b1e8e925f94845196879586957fab750e7500000000000000000000000000000000000000000000000000000000875201359160048601611632565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611b80579060019291611b70575b5001611a0a565b5f611b7a9161131c565b5f611b69565b8b513d5f823e3d90fd5b8c513d5f823e3d90fd5b611ba086928d92611270565b0135907f7c532e31000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f5b8160011c8110611be6575060011c6119f3565b8060011b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8216820361010857611c1d8185611656565b519060018101809111610108576020918d611c395f9388611656565b519080519185830193845281830152808252611c5660608361131c565b51918291518091835e8101838152039060025afa15611c85576001905f51611c7e8286611656565b5201611bd3565b8a513d5f823e3d90fd5b600190825181105f14611cb957611ca68184611656565b51611cb18286611656565b525b0161199c565b7fcc1d2f838445db7aec431df9ee8a871f40e7aa5e064fc056633ef8c60fab7b06611ce48286611656565b52611cb3565b80611cfe61076160019361054588806111d2565b35611d098285611656565b5201611962565b9098611d1f60208401846111d2565b8b10156100db578a60051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018136030182121561007e57016060810135805f5260046020528a5f2054156120c45760208201355f5260076020528a5f20546120945760808201355f5260056020528a5f2054612064578a9060205f611da885806115e1565b9390948051908482019285890135845260808901358284015281890135606084015260a0890135608084015260a083015260c088013560c083015260e088013560e083015260e08252611dfd6101008361131c565b51918291518091835e8101838152039060025afa15611b80575f519173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b1561007e575f91611eb08e5194859384937fab750e750000000000000000000000000000000000000000000000000000000085527f00000000000000000000000000000000000000000000000000000000000000009160048601611632565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611b8057612054575b5089611f10611f0586806111d2565b6020850135916125a4565b0135808b830135036120215750611f2686610fa7565b95611f366020830135918a611656565b5289611f50611f4586806111d2565b6080850135916125a4565b01358060a083013503611fed575090600191611f6b87610fa7565b96611f7b6080830135918b611656565b52851580611fe5575b15611fa157611f98915060c036910161166a565b995b0190611942565b611fb2611fd89160c036910161166a565b918b5192611fc08d8561131c565b8c3685376020825192015160208251920151926129f3565b6020830152815299611f9a565b508b15611f84565b60a092507f18f639d8000000000000000000000000000000000000000000000000000000005f52600452013560245260445ffd5b8a92507f18f639d8000000000000000000000000000000000000000000000000000000005f52600452013560245260445ffd5b5f61205e9161131c565b5f611ef6565b6080827f96539bd4000000000000000000000000000000000000000000000000000000005f52013560045260245ffd5b6020827f39a940c5000000000000000000000000000000000000000000000000000000005f52013560045260245ffd5b7ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6120fd8161059c84876111d2565b61210e6105a28361059c86896111d2565b60205f8d61211c3686612526565b90838251920151908051918583019384528183015280825261213f60608361131c565b51918291518091835e8101838152039060025afa15611b80575f51600460208e73ffffffffffffffffffffffffffffffffffffffff61217d86612505565b169051928380927f033f96a40000000000000000000000000000000000000000000000000000000082525afa9081156123bf575f9161238e575b508082036123605750509061226560205f848f9561224d8761223f6121fc6121e0606095612505565b9561222d6121f08a8301836115e1565b939092868101906115e1565b929093865198899773ffffffffffffffffffffffffffffffffffffffff8e8a019c168c528801526080870191611058565b91601f19858403016060860152611058565b03601f19810183528261131c565b5190209461225b8a806111d2565b9490953690612526565b9080519060e08583019380518552868101518385015282810151606085015260608101516080850152608081015160a085015260a081015160c085015260c0810151828501520151151561010083015261010082526122c66101208361131c565b51918291518091835e8101838152039060025afa15611b8a5761231d6123076107f88f946107616122fd9161223f965f51916125a4565b60808101906111d2565b8351928391602083019560208752830190611085565b51902090808203612332575050600101611927565b7f64cc8b14000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fd3167e32000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b90506020813d82116123b7575b816123a86020938361131c565b8101031261007e57515f6121b7565b3d915061239b565b8e513d5f823e3d90fd5b6123e06123da8361054587806111d2565b806111d2565b9050810180911161010857600190910190611789565b61240584829893949598612606565b928094612455576401000003d0199084096401000003d01903906401000003d0198211610108576124466401000003d01961244c935f950895988095612610565b906124f8565b92909183611754565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001611741565b6401000003d019915014155f61173a565b9190820391821161010857565b3573ffffffffffffffffffffffffffffffffffffffff8116810361007e5790565b91908261010091031261007e57604051610100810181811067ffffffffffffffff82111761133f5760405260e061259f818395803585526020810135602086015260408101356040860152606081013560608601526080810135608086015260a081013560a086015260c081013560c086015201611078565b910152565b909291925f5b8181106125dd57847f4e90c0bf000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b846125ec610761838587611259565b35146125fa576001016125aa565b916110b8939450611259565b8115612455570490565b8181029291811591840414171561010857565b919060205f6040518386823780848101838152039060025afa15610745575f519261264c6113a0565b841461158857600283109182156127055783612669575050505090565b845f52600860205260405f20604051905f90805490612687826113cc565b91600181169081156128a0575060011461286d575b5050816020925f92039060025afa15610745575f516126b96113a0565b146126c5575050505090565b929491939092600186146127325785857f4d511600000000000000000000000000000000000000000000000000000000005f52156127055760045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b9193509193506001827f2266f858e35b42156890bf9a1a4dd4ac86bcaf4e1e8a1669096531ac46c9728b5f80a3815f52600860205260405f209067ffffffffffffffff811161133f5761278582546113cc565b601f8111612828575b505f601f82116001146127c75781929394955f926127bc575b50505f198260011b9260031b1c191617905590565b013590505f806127a7565b601f19821695835f5260205f20915f5b888110612810575083600195969798106127f7575b505050811b01905590565b5f1960f88560031b161c199101351690555f80806127ec565b909260206001819286860135815501940191016127d7565b825f5260205f20601f830160051c81019160208410612863575b601f0160051c01905b818110612858575061278e565b5f815560010161284b565b9091508190612842565b9091505f5260205f205f905b82821061288c575050810181602061269c565b600181602092548487015201910190612879565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050801515028201905081602061269c565b5f90602092604051908482019283526040820152604081526128f960608261131c565b604051918291518091835e8101838152039060025afa15610745575f5190565b80548210156100db575f5260205f2001905f90565b805f52600760205260405f2054155f14612999576006546801000000000000000081101561133f5761298261296c8260018594016006556006612919565b81939154905f199060031b92831b921b19161790565b9055600654905f52600760205260405f2055600190565b505f90565b805f52600460205260405f2054155f14612999576003546801000000000000000081101561133f576129dc61296c8260018594016003556003612919565b9055600354905f52600460205260405f2055600190565b9093929091808303612b9d57506401000003d019908408612a1657505f91508190565b6401000003d0198380096401000003d0195f8180808086880960040995800960030908906401000003d019918284800883038381116101085783908183800908938484039284841161010857848091800960080984038481116101085784600193818096819508900908950960020992905b8315158481612b8c575b5080612b84575b15612b26575f938460016401000003d019835b612acd5750505050906401000003d019809281808780098092099509900990565b612adc84829993949599612606565b928094612455576401000003d0199084096401000003d01903906401000003d0198211610108576124466401000003d019612b1d935f950895998095612610565b92909183612aac565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001612a99565b6401000003d019915014155f612a92565b612baf93946401000003d01993612c9b565b9291612a88565b8151919060418303612be657612bdf9250602082015190606060408401519301515f1a90612ea8565b9192909190565b50505f9160029190565b60048110156127055780612c02575050565b60018103612c32577ff645eedf000000000000000000000000000000000000000000000000000000005f5260045ffd5b60028103612c6657507ffce698f7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b600314612c705750565b7fd78bce0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9492909391851580612ea0575b612e9557801580612e8d575b612e8557604051608091612cc8838361131c565b8236833784156124555784600180098083529385856001099860208401998a52604084019286845287845160010993606086019485526040519a878c01958c871067ffffffffffffffff88111761133f578a80979581969482956040525190098d525190099460208b019586525190099860408901998a52519009606087019081528651885114801590612e79575b15612e1b57849283808093816040519c85612d738f978861131c565b368737518c51612d8390836124f8565b90088452518551612d9490836124f8565b90089860208301998a5281808b8180808089518a5190099360408a019485528185518b5190096060909a01998a525180098851612dd190836124f8565b90088180875185519009600209612de890836124f8565b90089c51935190519009612dfc8c836124f8565b90089009925190519009612e1090836124f8565b900894510991929190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b50815181511415612d57565b505050600190565b508115612cb4565b945092506001919050565b508415612ca8565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612f2c579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610745575f5173ffffffffffffffffffffffffffffffffffffffff811615612f2257905f905f90565b505f906001905f90565b5050505f916003919056",
    "sourceMap": "909:10508:41:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;909:10508:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;17853:72:22;1336:11:50;17853:72:22;260:66:51;1425:13:50;-1:-1:-1;1420:185:50;1440:13;;;;;;260:66:51;;-1:-1:-1;260:66:51;;6669:23:34;;;:::i;:::-;1368:24:55;1364:65;;2227:46:41;909:10508;2227:46;2283:36;;2329:44;;909:10508;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2329:44;909:10508;;;;;2283:36;909:10508;;;;;;;;;;;;;;;;1364:65:55;1401:28;;;-1:-1:-1;1401:28:55;;909:10508:41;;-1:-1:-1;1401:28:55;1455:3:50;909:10508:41;;-1:-1:-1;909:10508:41;;1336:11:50;909:10508:41;;;;;;;;260:66:51;909:10508:41;;537:16:51;;;909:10508:41;;;;;;;;;537:16:51;;;909:10508:41;537:16:51;;:::i;:::-;909:10508:41;;;;;;;;;;;;;;;530:24:51;;1336:11:50;530:24:51;;;;;909:10508:41;-1:-1:-1;530:24:51;1455:3:50;260:66:51;1425:13:50;;;530:24:51;909:10508:41;;;-1:-1:-1;909:10508:41;;;;;;-1:-1:-1;909:10508:41;;;;;;;-1:-1:-1;;909:10508:41;;;;-1:-1:-1;;;;;909:10508:41;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;909:10508:41;;;;;-1:-1:-1;909:10508:41;;;;;;;;;;;:::o;2336:406:34:-;909:10508:41;;;5006:14:34;909:10508:41;;;;;;5006:26:34;2415:321;909:10508:41;;;1369:6:55;909:10508:41;;;;;;;5006:14:34;909:10508:41;;;1369:6:55;909:10508:41;;;;;;;;;;;1369:6:55;909:10508:41;;;;;5006:14:34;909:10508:41;;;;;;260:66:51;5006:14:34;;2671:11::o;909:10508:41:-;;;;;;;5006:14:34;909:10508:41;;;;2415:321:34;2713:12;909:10508:41;2713:12:34;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c806348cbdfca14610f1b57806359a8928314610d6e5780638310d48514610d375780639a49e741146103a7578063c235cd9e14610135578063d7b0fef1146100825763f3eeec5514610066575f80fd5b3461007e5761007c61007736610f74565b6116dd565b005b5f80fd5b3461007e575f60031936011261007e576003545f1981018181116101085760035411156100db5760035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85a0154604051908152602090f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b3461007e57602060031936011261007e57600435600254156100db5760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace54811461037f57805f52600560205260405f2054908115610354575f19820191808311610108575f5480911161032557505f8281527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496020526040902054908082036102f757825f906002546101eb816115b0565b915f905b8282106102435750505060405190604082019260408352815180945260206060840192015f945b80861061022b57505082935060208301520390f35b90926020806001928651815201940195019490610216565b600181166102cc57815f52600160205260405f20906001810191828211610108576001925f5260205260405f20549582841b17955b806102bc575060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8301546102b08487611656565b525b811c9101906101ef565b6102c68487611656565b526102b2565b815f52600160205260405f20905f19810191818311610108576001925f5260205260405f2054610278565b7fc9e0e757000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b827fdbc744cd000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fff34f2b6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faac1fcc6000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461007e576103b536610f74565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c610d0f5760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d610408816116dd565b610413600954610fa7565b80600955604051602081526060810161042c8480610fb5565b80926040602086015252608083019060808360051b8501019281925f925b8284106109685788887fe6cf32ad35a824b023c28f7d5fd0e9018038406df7c491a244fc5752894d953989806104998b6104876020880188611008565b90601f19858403016040860152611058565b0390a25f906104a881806111d2565b9190505f5b82811061053757836104be8161299e565b1561050c577f388a5f4af784e29fc791e14e90d372b6057e8379d9d5556e843545420c675dea5f80a25f7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d005b7fdb788c2b000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b61054b8161054584806111d2565b90611259565b61055581806111d2565b90505f5b8181106107505750506040810161057081836111d2565b9290505f5b83811061058857505050506001016104ad565b61061b6105ad6105a28361059c87876111d2565b906112dc565b610100810190611226565b5f73ffffffffffffffffffffffffffffffffffffffff6105cc83612505565b166105da60208401846115e1565b836040939293518097819582947f2dec7eb1000000000000000000000000000000000000000000000000000000008452602060048501526024840191611058565b03925af1918215610745575f926106c9575b508151602083012090604081019161064f61064884846115e1565b36916116a7565b602081519101200361066657505050600101610575565b6106c591610673916115e1565b9190926106b36040519485947fc504fada000000000000000000000000000000000000000000000000000000008652604060048701526044860191611058565b90600319848303016024850152610f4f565b0390fd5b9091503d805f833e6106db818361131c565b81019060208183031261007e5780519067ffffffffffffffff821161007e570181601f8201121561007e5780519061071282611384565b92610720604051948561131c565b8284526020838301011161007e57815f9260208093018386015e83010152908a61062d565b6040513d5f823e3d90fd5b61076b6107618261054586806111d2565b6020810190611270565b6020810135801515810361007e57156108315780356107898161292e565b50600654905f198201918211610108577f48baa580cd3e9c4040ffa9507f688e0d988bb8b15450fb680ce90fe52f7e544a5f80a3905b60808201916107ce83826111d2565b9050155b80156107e95750506107e49150610fa7565b610559565b90916107fe6107f885856111d2565b906112a3565b9061080c60208301836115e1565b9235600281101561007e5761082a9361082492612623565b50610fa7565b91906107d2565b80975035600254905f549061084582610fa7565b5f5560018201808311610108576001841b8111610940578282945f905b8082106108a457505050815f52600560205260405f20557f0c825ce0b2f71c91fa27e49984551a39d6f4db65958d2cf59a0ce45c3948312f5f80a396906107bf565b909195825f52600160205260405f20875f526020528060405f205560018716155f1461090b5760025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8301546001916108ff91906128d6565b965b811c920190610862565b825f52600160205260405f20905f198801908882116101085760019261093a925f5260205260405f20546128d6565b96610901565b7f494a639d000000000000000000000000000000000000000000000000000000005f5260045ffd5b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087820301835261099e86836111a0565b60608201906109ad8180610fb5565b809360608652526080840160808460051b86010193825f905b828210610c5d5750505050506109df6020820182610fb5565b84849294036020860152808252602082019060208160051b8401019480935f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0181360301925b848110610bd45750505050505050806040610a42920190610fb5565b926040818403910152828252602082019060208460051b8401019381935f927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee181360301905b838510610aab57505050505050506020806001929701930194019291939061044a565b90919293949596601f1984820301875287358381121561007e5782610b299101803583526020810135602084015260408101356040840152606081013560608401526080810135608084015260a081013560a084015260c081013560c0840152610b1760e08201611078565b151560e08401526101008101906111a0565b61012061010083015280359173ffffffffffffffffffffffffffffffffffffffff831680930361007e57610bc56020928260019561012086950152610b94610b89610b7686850185611008565b6060610140860152610180850191611058565b926040810190611008565b916101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee082860301910152611058565b99019701950193929190610a88565b90919293949597601f198482030187528835908582121561007e5760208091604086600195019160c080610c1b610c0b8680611008565b6101008652610100860191611058565b9486810135878501528481013585850152606081013560608501526080810135608085015260a081013560a0850152019101379a019701959493929101610a26565b90919293957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888203018552610c9387836111a0565b610cae610ca08280611008565b606085526060850191611058565b6020820135917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030183121561007e5783604080610cfc858560209860019a8a990389880152016110bb565b93013591015298019501939201906109c6565b7f3ee5aeb5000000000000000000000000000000000000000000000000000000005f5260045ffd5b3461007e57602060031936011261007e57610d6a610d5660043561141d565b604051918291602083526020830190610f4f565b0390f35b3461007e57608060031936011261007e5760443560043567ffffffffffffffff821161007e573660238301121561007e5781600401359167ffffffffffffffff831161007e5760248360051b82010136811161007e5760643591600254808603610eeb5750610de8845f52600460205260405f2054151590565b15610ebf57610df68561136c565b94610e04604051968761131c565b8552602401602085015b828210610eaf57505050602435928051905f925b828410610e62578585818103610e3457005b7fa0d3b062000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b909192946001908183881c16155f14610e9457610e8990610e838886611656565b516128d6565b955b01929190610e22565b610ea990610ea28886611656565b51906128d6565b95610e8b565b8135815260209182019101610e0e565b837ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b85907f88b3170e000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b3461007e57602060031936011261007e576020610f456004355f52600460205260405f2054151590565b6040519015158152f35b90601f19601f602080948051918291828752018686015e5f8582860101520116010190565b602060031982011261007e576004359067ffffffffffffffff821161007e576003198260409203011261007e5760040190565b5f1981146101085760010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561007e57016020813591019167ffffffffffffffff821161007e578160051b3603831361007e57565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561007e57016020813591019167ffffffffffffffff821161007e57813603831361007e57565b601f8260209493601f1993818652868601375f8582860101520116010190565b3590811515820361007e57565b90813591600283101561007e576110a86040916110b89484526020810190611008565b9190928160208201520191611058565b90565b90813581526110cc60208301611078565b151560208201526040820135604082015261110c6111016110f06060850185611008565b60a0606086015260a0850191611058565b926080810190610fb5565b9290916080818303910152828152602081019260208160051b83010193835f917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc182360301945b848410611164575050505050505090565b90919293949596601f1982820301835287358781121561007e57602061118f60019387839401611085565b990193019401929195949390611153565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18236030181121561007e570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561007e570180359067ffffffffffffffff821161007e57602001918160051b3603831361007e57565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18136030182121561007e570190565b908210156100db576110b89160051b810190611226565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618136030182121561007e570190565b90156100db578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18136030182121561007e570190565b91908110156100db5760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee18136030182121561007e570190565b90601f601f19910116810190811067ffffffffffffffff82111761133f57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161133f5760051b60200190565b67ffffffffffffffff811161133f57601f01601f191660200190565b5f6040516113af60208261131c565b525f6040518180805e5260205f808060025afa15610745575f5190565b90600182811c92168015611413575b60208310146113e657565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916113db565b906114266113a0565b821461158857815f52600860205260405f2060405190815f82549261144a846113cc565b9081845260208401946001811690815f1461154d575060011461150e575b50509161147a5f92602094038561131c565b604051809185518091835e8101838152039060025afa15610745575f5161149f6113a0565b81036114d157837f632989d6000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091928181036114e057505090565b7f1844c87b000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f908152602081209092505b818310611531575050810160200161147a5f611468565b602091935080600191548385890101520191019091849261151a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686525050151560051b8201602001905061147a5f611468565b7ff82ea8b4000000000000000000000000000000000000000000000000000000005f5260045ffd5b906115ba8261136c565b6115c7604051918261131c565b828152601f196115d7829461136c565b0190602036910137565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561007e570180359067ffffffffffffffff821161007e5760200191813603831361007e57565b9061164c9060409396959496606084526060840191611058565b9460208201520152565b80518210156100db5760209160051b010190565b919060408051939061167c908561131c565b83906040810192831161007e57905b82821061169757505050565b813581526020918201910161168b565b9291926116b382611384565b916116c1604051938461131c565b82948184528183011161007e578281602093845f960137010152565b604080516116eb828261131c565b8136823760017f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b87f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179882806124e7565b50806124df575b15612482575f928360016401000003d019835b6123f65750505050906401000003d0198092818086800980920994099009602083015281529161178481806111d2565b90505f805b8282106123c95761179a91506115b0565b905f5f5b8281106119075750506117f55750505080511590816117e8575b50156117c057565b7fe073516d000000000000000000000000000000000000000000000000000000005f5260045ffd5b602091500151155f6117b8565b825160208101918260208251919201905f5b8181106118f15750505091816118295f9360209503601f19810183528261131c565b8551918291518091835e8101838152039060025afa156118e7576118849273ffffffffffffffffffffffffffffffffffffffff9261187b84936118756106485f519260208101906115e1565b90612bb6565b90969196612bf0565b6020825192015190805191602083019384528183015281526118a760608261131c565b519020169116908082036118b9575050565b7fe6d44b4c000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b50513d5f823e3d90fd5b8251845260209384019390920191600101611807565b6119158161054587806111d2565b86810161192281836111d2565b9190505f5b8281106120ef5750505061193e60208201826111d2565b5f91505b808210611d1057505061195581806111d2565b9050611960816115b0565b5f5b828110611cea5750611999600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b6115b0565b905f5b600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b8110611c8f575050600160ff7f0000000000000000000000000000000000000000000000000000000000000000161b5b60018111611bd157508051156100db5760200151915f5b828110611a1d575050505060010161179e565b611a2b8161054584806111d2565b6020810190858c611a3c8484611270565b013503611b9457908160205f8e611a5684611a5f976115e1565b96909585611270565b90805190611a8882611a7a87820195888752848301906110bb565b03601f19810184528361131c565b51918291518091835e8101838152039060025afa15611b8a575f519073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b1561007e57611b1e8e925f94845196879586957fab750e7500000000000000000000000000000000000000000000000000000000875201359160048601611632565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611b80579060019291611b70575b5001611a0a565b5f611b7a9161131c565b5f611b69565b8b513d5f823e3d90fd5b8c513d5f823e3d90fd5b611ba086928d92611270565b0135907f7c532e31000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5f5b8160011c8110611be6575060011c6119f3565b8060011b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8216820361010857611c1d8185611656565b519060018101809111610108576020918d611c395f9388611656565b519080519185830193845281830152808252611c5660608361131c565b51918291518091835e8101838152039060025afa15611c85576001905f51611c7e8286611656565b5201611bd3565b8a513d5f823e3d90fd5b600190825181105f14611cb957611ca68184611656565b51611cb18286611656565b525b0161199c565b7fcc1d2f838445db7aec431df9ee8a871f40e7aa5e064fc056633ef8c60fab7b06611ce48286611656565b52611cb3565b80611cfe61076160019361054588806111d2565b35611d098285611656565b5201611962565b9098611d1f60208401846111d2565b8b10156100db578a60051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018136030182121561007e57016060810135805f5260046020528a5f2054156120c45760208201355f5260076020528a5f20546120945760808201355f5260056020528a5f2054612064578a9060205f611da885806115e1565b9390948051908482019285890135845260808901358284015281890135606084015260a0890135608084015260a083015260c088013560c083015260e088013560e083015260e08252611dfd6101008361131c565b51918291518091835e8101838152039060025afa15611b80575f519173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b1561007e575f91611eb08e5194859384937fab750e750000000000000000000000000000000000000000000000000000000085527f00000000000000000000000000000000000000000000000000000000000000009160048601611632565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa8015611b8057612054575b5089611f10611f0586806111d2565b6020850135916125a4565b0135808b830135036120215750611f2686610fa7565b95611f366020830135918a611656565b5289611f50611f4586806111d2565b6080850135916125a4565b01358060a083013503611fed575090600191611f6b87610fa7565b96611f7b6080830135918b611656565b52851580611fe5575b15611fa157611f98915060c036910161166a565b995b0190611942565b611fb2611fd89160c036910161166a565b918b5192611fc08d8561131c565b8c3685376020825192015160208251920151926129f3565b6020830152815299611f9a565b508b15611f84565b60a092507f18f639d8000000000000000000000000000000000000000000000000000000005f52600452013560245260445ffd5b8a92507f18f639d8000000000000000000000000000000000000000000000000000000005f52600452013560245260445ffd5b5f61205e9161131c565b5f611ef6565b6080827f96539bd4000000000000000000000000000000000000000000000000000000005f52013560045260245ffd5b6020827f39a940c5000000000000000000000000000000000000000000000000000000005f52013560045260245ffd5b7ff9849ea3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6120fd8161059c84876111d2565b61210e6105a28361059c86896111d2565b60205f8d61211c3686612526565b90838251920151908051918583019384528183015280825261213f60608361131c565b51918291518091835e8101838152039060025afa15611b80575f51600460208e73ffffffffffffffffffffffffffffffffffffffff61217d86612505565b169051928380927f033f96a40000000000000000000000000000000000000000000000000000000082525afa9081156123bf575f9161238e575b508082036123605750509061226560205f848f9561224d8761223f6121fc6121e0606095612505565b9561222d6121f08a8301836115e1565b939092868101906115e1565b929093865198899773ffffffffffffffffffffffffffffffffffffffff8e8a019c168c528801526080870191611058565b91601f19858403016060860152611058565b03601f19810183528261131c565b5190209461225b8a806111d2565b9490953690612526565b9080519060e08583019380518552868101518385015282810151606085015260608101516080850152608081015160a085015260a081015160c085015260c0810151828501520151151561010083015261010082526122c66101208361131c565b51918291518091835e8101838152039060025afa15611b8a5761231d6123076107f88f946107616122fd9161223f965f51916125a4565b60808101906111d2565b8351928391602083019560208752830190611085565b51902090808203612332575050600101611927565b7f64cc8b14000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7fd3167e32000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b90506020813d82116123b7575b816123a86020938361131c565b8101031261007e57515f6121b7565b3d915061239b565b8e513d5f823e3d90fd5b6123e06123da8361054587806111d2565b806111d2565b9050810180911161010857600190910190611789565b61240584829893949598612606565b928094612455576401000003d0199084096401000003d01903906401000003d0198211610108576124466401000003d01961244c935f950895988095612610565b906124f8565b92909183611754565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001611741565b6401000003d019915014155f61173a565b9190820391821161010857565b3573ffffffffffffffffffffffffffffffffffffffff8116810361007e5790565b91908261010091031261007e57604051610100810181811067ffffffffffffffff82111761133f5760405260e061259f818395803585526020810135602086015260408101356040860152606081013560608601526080810135608086015260a081013560a086015260c081013560c086015201611078565b910152565b909291925f5b8181106125dd57847f4e90c0bf000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b846125ec610761838587611259565b35146125fa576001016125aa565b916110b8939450611259565b8115612455570490565b8181029291811591840414171561010857565b919060205f6040518386823780848101838152039060025afa15610745575f519261264c6113a0565b841461158857600283109182156127055783612669575050505090565b845f52600860205260405f20604051905f90805490612687826113cc565b91600181169081156128a0575060011461286d575b5050816020925f92039060025afa15610745575f516126b96113a0565b146126c5575050505090565b929491939092600186146127325785857f4d511600000000000000000000000000000000000000000000000000000000005f52156127055760045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b9193509193506001827f2266f858e35b42156890bf9a1a4dd4ac86bcaf4e1e8a1669096531ac46c9728b5f80a3815f52600860205260405f209067ffffffffffffffff811161133f5761278582546113cc565b601f8111612828575b505f601f82116001146127c75781929394955f926127bc575b50505f198260011b9260031b1c191617905590565b013590505f806127a7565b601f19821695835f5260205f20915f5b888110612810575083600195969798106127f7575b505050811b01905590565b5f1960f88560031b161c199101351690555f80806127ec565b909260206001819286860135815501940191016127d7565b825f5260205f20601f830160051c81019160208410612863575b601f0160051c01905b818110612858575061278e565b5f815560010161284b565b9091508190612842565b9091505f5260205f205f905b82821061288c575050810181602061269c565b600181602092548487015201910190612879565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050801515028201905081602061269c565b5f90602092604051908482019283526040820152604081526128f960608261131c565b604051918291518091835e8101838152039060025afa15610745575f5190565b80548210156100db575f5260205f2001905f90565b805f52600760205260405f2054155f14612999576006546801000000000000000081101561133f5761298261296c8260018594016006556006612919565b81939154905f199060031b92831b921b19161790565b9055600654905f52600760205260405f2055600190565b505f90565b805f52600460205260405f2054155f14612999576003546801000000000000000081101561133f576129dc61296c8260018594016003556003612919565b9055600354905f52600460205260405f2055600190565b9093929091808303612b9d57506401000003d019908408612a1657505f91508190565b6401000003d0198380096401000003d0195f8180808086880960040995800960030908906401000003d019918284800883038381116101085783908183800908938484039284841161010857848091800960080984038481116101085784600193818096819508900908950960020992905b8315158481612b8c575b5080612b84575b15612b26575f938460016401000003d019835b612acd5750505050906401000003d019809281808780098092099509900990565b612adc84829993949599612606565b928094612455576401000003d0199084096401000003d01903906401000003d0198211610108576124466401000003d019612b1d935f950895998095612610565b92909183612aac565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001612a99565b6401000003d019915014155f612a92565b612baf93946401000003d01993612c9b565b9291612a88565b8151919060418303612be657612bdf9250602082015190606060408401519301515f1a90612ea8565b9192909190565b50505f9160029190565b60048110156127055780612c02575050565b60018103612c32577ff645eedf000000000000000000000000000000000000000000000000000000005f5260045ffd5b60028103612c6657507ffce698f7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b600314612c705750565b7fd78bce0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9492909391851580612ea0575b612e9557801580612e8d575b612e8557604051608091612cc8838361131c565b8236833784156124555784600180098083529385856001099860208401998a52604084019286845287845160010993606086019485526040519a878c01958c871067ffffffffffffffff88111761133f578a80979581969482956040525190098d525190099460208b019586525190099860408901998a52519009606087019081528651885114801590612e79575b15612e1b57849283808093816040519c85612d738f978861131c565b368737518c51612d8390836124f8565b90088452518551612d9490836124f8565b90089860208301998a5281808b8180808089518a5190099360408a019485528185518b5190096060909a01998a525180098851612dd190836124f8565b90088180875185519009600209612de890836124f8565b90089c51935190519009612dfc8c836124f8565b90089009925190519009612e1090836124f8565b900894510991929190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b50815181511415612d57565b505050600190565b508115612cb4565b945092506001919050565b508415612ca8565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612f2c579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610745575f5173ffffffffffffffffffffffffffffffffffffffff811615612f2257905f905f90565b505f906001905f90565b5050505f916003919056",
    "sourceMap": "909:10508:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:19:54;;;909:10508:41;;;;;;;4093:11;909:10508;;;:::i;:::-;4093:11;:::i;:::-;909:10508;;;;;;;;;;-1:-1:-1;;909:10508:41;;;;;5882:6:55;909:10508:41;-1:-1:-1;;909:10508:41;;;;;;;5882:6:55;909:10508:41;-1:-1:-1;909:10508:41;;;5882:6:55;909:10508:41;325:19:54;909:10508:41;;;;;;;;325:19:54;;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:10508:41;;;;;;;5771:18:55;909:10508:41;;;;5771:18:55;909:10508:41;325:19:54;;909:10508:41;4335:26:55;;4331:81;;325:19:54;909:10508:41;325:19:54;4430:8:55;909:10508:41;325:19:54;909:10508:41;;325:19:54;909:10508:41;4465:10:55;;;4461:81;;-1:-1:-1;;909:10508:41;;;;;;;;;;4885:38:55;;;4881:155;;-1:-1:-1;909:10508:41;325:19:54;;;;909:10508:41;325:19:54;909:10508:41;325:19:54;;909:10508:41;;4655:23:55;;;4651:122;;4008:34;909:10508:41;;5771:18:55;909:10508:41;4450:24:50;;;:::i;:::-;4484:28;909:10508:41;4647:1114:50;4667:13;;;;;;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4682:3:50;909:10508:41;6631:9:50;;909:10508:41;;325:19:54;909:10508:41;325:19:54;909:10508:41;;325:19:54;909:10508:41;;325:19:54;909:10508:41;;;;;;;;;;;325:19:54;909:10508:41;325:19:54;909:10508:41;325:19:54;909:10508:41;;325:19:54;909:10508:41;;;;;4998:25:50;4781:447;;5303:28;;;-1:-1:-1;5771:18:55;909:10508:41;325:19:54;;909:10508:41;;;5437:55:50;325:19:54;5437:55:50;;:::i;:::-;909:10508:41;5299:335:50;909:10508:41;;4682:3:50;909:10508:41;4652:13:50;;;5299:335;5591:28;;;;:::i;:::-;909:10508:41;5299:335:50;;4781:447;325:19:54;909:10508:41;325:19:54;909:10508:41;;325:19:54;909:10508:41;;325:19:54;909:10508:41;-1:-1:-1;;909:10508:41;;;;;;;;;325:19:54;909:10508:41;325:19:54;909:10508:41;325:19:54;909:10508:41;;325:19:54;909:10508:41;4781:447:50;;4651:122:55;4701:61;909:10508:41;4701:61:55;909:10508:41;;;;;;4701:61:55;4881:155;4946:79;;909:10508:41;4946:79:55;909:10508:41;;;;;;4946:79:55;4461:81;4498:33;909:10508:41;4498:33:55;909:10508:41;;;;4498:33:55;4331:81;4384:17;909:10508:41;4384:17:55;909:10508:41;;4384:17:55;909:10508:41;;;;;;;:::i;:::-;637:66:27;3327:69:30;1444:93:27;;1655:4;637:66;3556:68:30;2574:11:41;;;:::i;:::-;2627:10;;909:10508;2627:10;:::i;:::-;909:10508;2627:10;909:10508;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:63;909:10508;;;;;;;;;;:::i;:::-;;-1:-1:-1;;909:10508:41;;;;;;;;;:::i;:::-;2602:63;;;909:10508;2725:19;;;;;:::i;:::-;2766:13;;;909:10508;2781:12;;;;;;6669:23:34;;;;:::i;:::-;2948:17:55;2944:76;;3034:15;909:10508:41;3034:15:55;;909:10508:41;637:66:27;3556:68:30;909:10508:41;2944:76:55;2988:21;909:10508:41;2988:21:55;909:10508:41;;;;2988:21:55;2795:3:41;2839:22;:19;;;;;:::i;:::-;:22;;:::i;:::-;2897:18;;;;:::i;:::-;2941:13;;909:10508;2956:14;;;;;;3726:28;;909:10508;3726:28;;;;;;:::i;:::-;3780:13;;;909:10508;3795:19;;;;;;2795:3;;;;1655:4:27;909:10508:41;2766:13;;3816:3;909:10508;3861:36;:31;:28;;;;;:::i;:::-;:31;;:::i;:::-;909:10508;3861:36;;;;:::i;:::-;909:10508;;4278:23;;;:::i;:::-;909:10508;4315:10;909:10508;4315:10;;;;:::i;:::-;909:10508;;;;;;4267:59;;;;;;909:10508;4267:59;;909:10508;;4267:59;;909:10508;;;;;;:::i;:::-;4267:59;;;;;;;;;909:10508;4267:59;;;3816:3;909:10508;;;;;;4341:17;4372:11;909:10508;4372:11;;;909:10508;4372:11;;;;:::i;:::-;909:10508;;;:::i;:::-;;;;;;4362:22;4341:43;4337:149;;3816:3;;;1655:4:27;909:10508:41;3780:13;;4337:149;909:10508;4446:11;;;;:::i;:::-;909:10508;;;;;;4407:68;;;;;;909:10508;;4407:68;;909:10508;;;;;;:::i;:::-;;-1:-1:-1;;909:10508:41;;;;;;;;;:::i;:::-;4407:68;;;4267:59;;;;;;909:10508;4267:59;;;;;;:::i;:::-;;;909:10508;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4267:59;;;;;909:10508;;265:9:54;909:10508:41;265:9:54;;;;;2972:3:41;3029:30;:21;:18;;;;;:::i;:21::-;909:10508;3029:30;;;;:::i;:::-;909:10508;3082:19;;909:10508;;;;;;;;3082:19;;;909:10508;;6669:23:34;;;:::i;:::-;;873:13:56;909:10508:41;;-1:-1:-1;;909:10508:41;;;;;;;917:73:56;909:10508:41;917:73:56;;3078:409:41;;909:10508;3522:16;;;;;;;:::i;:::-;3583:10;;;;;;;;2972:3;;;;;;:::i;:::-;2941:13;;3595:3;3633:16;;:19;:16;;;;:::i;:::-;:19;;:::i;:::-;1185:18:54;;909:10508:41;1185:18:54;;;;:::i;:::-;909:10508:41;;;;;;;;3595:3;1174:63:54;;;;:::i;:::-;;3595:3:41;:::i;:::-;3568:13;;;;3078:409;909:10508;;;;;;;;;2230:21:50;;;;:::i;:::-;909:10508:41;;1655:4:27;909:10508:41;;;;;;;1655:4:27;909:10508:41;;2312:26:50;;2308:61;;2429:28;2467:31;2513:13;909:10508:41;2508:1078:50;2528:13;;;;;;909:10508:41;;;325:19:54;909:10508:41;325:19:54;909:10508:41;;325:19:54;909:10508:41;;325:19:54;909:10508:41;2583:55:55;909:10508:41;2583:55:55;;3078:409:41;;;;2543:3:50;325:19:54;;;;909:10508:41;325:19:54;1655:4:27;909:10508:41;325:19:54;909:10508:41;;325:19:54;;909:10508:41;325:19:54;909:10508:41;325:19:54;;909:10508:41;;325:19:54;909:10508:41;1655:4:27;6631:9:50;;:14;2836:707;1655:4:27;;;909:10508:41;;325:19:54;;909:10508:41;;;1655:4:27;;3128:72:50;;909:10508:41;3128:72:50;:::i;:::-;2836:707;;909:10508:41;;2543:3:50;909:10508:41;2513:13:50;;;2836:707;325:19:54;909:10508:41;325:19:54;1655:4:27;909:10508:41;325:19:54;909:10508:41;;325:19:54;909:10508:41;-1:-1:-1;;909:10508:41;;;;;;;;1655:4:27;325:19:54;3465:63:50;325:19:54;909:10508:41;325:19:54;909:10508:41;325:19:54;909:10508:41;;325:19:54;909:10508:41;3465:63:50;:::i;:::-;2836:707;;;2308:61;2347:22;909:10508:41;2347:22:50;909:10508:41;;2347:22:50;909:10508:41;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:4:27;909:10508:41;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1655:4:27;909:10508:41;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:10508:41;;;;;;;;;;;;;;;;;;;;1655:4:27;909:10508:41;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1655:4:27;909:10508:41;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1444:93:27;1496:30;909:10508:41;1496:30:27;909:10508:41;;1496:30:27;909:10508:41;;;;;-1:-1:-1;;909:10508:41;;;;;;1025:21:54;909:10508:41;;1025:21:54;:::i;:::-;909:10508:41;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6005:11:50;909:10508:41;3245:34:55;;;3241:143;;7577:28:34;;;-1:-1:-1;325:19:54;5006:14:34;325:19:54;;;-1:-1:-1;325:19:54;909:10508:41;5006:26:34;;4910:129;;7577:28;3431:22:55;3427:56;;909:10508:41;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7292:13:50;909:10508:41;7287:344:50;7307:13;;;;;;3647:20:55;;;;;3643:109;;909:10508:41;3643:109:55;3690:51;909:10508:41;3690:51:55;909:10508:41;;;;;;3690:51:55;7322:3:50;909:10508:41;;;;;;;;;;8024:24:50;:29;7341:280;909:10508:41;;;7443:38:50;7455:11;;;;;:::i;:::-;909:10508:41;7443:38:50;:::i;:::-;7341:280;;909:10508:41;7292:13:50;;;;;7341:280;7568:38;7594:11;;;;;:::i;:::-;909:10508:41;7568:38:50;;:::i;:::-;7341:280;;;909:10508:41;;;;;;;;;;;;;3427:56:55;3462:21;;909:10508:41;3462:21:55;909:10508:41;;;;3462:21:55;3241:143;3302:71;;;909:10508:41;3302:71:55;909:10508:41;;;;;;3302:71:55;909:10508:41;;;;;-1:-1:-1;;909:10508:41;;;;;;7577:28:34;909:10508:41;;-1:-1:-1;325:19:54;5006:14:34;325:19:54;;;-1:-1:-1;325:19:54;909:10508:41;5006:26:34;;4910:129;;7577:28;909:10508:41;;;;;;;;;;-1:-1:-1;;909:10508:41;;;;;;;;;;;;;;;;;-1:-1:-1;909:10508:41;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;909:10508:41;;;;;;;;;;;;;-1:-1:-1;;909:10508:41;;;;;;;;;;;:::o;:::-;-1:-1:-1;;909:10508:41;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;909:10508:41;;;;;;;;-1:-1:-1;909:10508:41;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;909:10508:41;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;909:10508:41;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;909:10508:41;;;;;-1:-1:-1;909:10508:41;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;909:10508:41;;;;:::o;280:64:54:-;909:10508:41;;;;;;;:::i;:::-;;;;;;;;;;;;325:19:54;;;;;;;;909:10508:41;325:19:54;280:64;:::o;325:19::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;2257:523;;2364:16;;:::i;:::-;2352:28;;2348:77;;325:19;-1:-1:-1;325:19:54;2491:6;325:19;;;-1:-1:-1;325:19:54;;909:10508:41;325:19:54;;-1:-1:-1;325:19:54;;;;;;:::i;:::-;909:10508:41;;;;325:19:54;909:10508:41;;325:19:54;;;;;;;;;;;;;;;;;;;;-1:-1:-1;325:19:54;;;;;;:::i;:::-;;909:10508:41;;;;;;;;;;;;;;2549:12:54;;;;;;;;-1:-1:-1;2549:12:54;2600:16;;:::i;:::-;2579:37;;2575:149;;2751:22;;-1:-1:-1;2751:22:54;;909:10508:41;;-1:-1:-1;2751:22:54;2575:149;2884:29;;;;;;2880:132;;2698:11;;;:::o;2880:132::-;2936:65;-1:-1:-1;2936:65:54;;909:10508:41;;;;-1:-1:-1;2936:65:54;325:19;-1:-1:-1;325:19:54;;;;;;-1:-1:-1;;;325:19:54;;;;;;-1:-1:-1;;325:19:54;;;;;-1:-1:-1;325:19:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;325:19:54;;;;;;;;;-1:-1:-1;325:19:54;-1:-1:-1;325:19:54;;2348:77;2403:11;-1:-1:-1;2403:11:54;;-1:-1:-1;2403:11:54;909:10508:41;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;909:10508:41;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;909:10508:41;;;;;;:::o;4594:5403::-;909:10508;;;;;;;:::i;:::-;;;;;8360:1:0;584:66:49;417;8360:1:0;;842:20;;4594:5403:41;842:32:0;;;;4594:5403:41;909:10508;;;-1:-1:-1;;;8360:1:0;-1:-1:-1;;926:16:0;1003:7;;;3254:23;;;;;-1:-1:-1;;3254:23:0;;;;;;;3300:22;;;3356:24;;3345:41;;909:10508:41;;;;;;4748:19;;;;;:::i;:::-;4785:22;-1:-1:-1;;;4837:12:41;;;;;;5001:25;;;;:::i;:::-;5076:14;-1:-1:-1;;5121:12:41;;;;;;-1:-1:-1;;9487:13:41;;909:10508;;;;;9520:24;:52;;;;9483:508;-1:-1:-1;9516:205:41;;;9639:7::o;9516:205::-;9691:15;-1:-1:-1;9691:15:41;10553:65;-1:-1:-1;9691:15:41;9520:52;909:10508;;;;;9548:24;9520:52;;;9483:508;909:10508;;;1503:22:48;;;;909:10508:41;;;;;;;-1:-1:-1;909:10508:41;;;;;;1503:22:48;;;;;;-1:-1:-1;1503:22:48;909:10508:41;1503:22:48;;-1:-1:-1;;1503:22:48;;;;;;:::i;:::-;909:10508:41;;;;;;;;;;;;;;;1496:30:48;;909:10508:41;1496:30:48;;;;;3927:8:31;1496:30:48;909:10508:41;1496:30:48;3871:27:31;1496:30:48;;909:10508:41;9943:22;-1:-1:-1;1496:30:48;9943:22:41;909:10508;9943:22;;;;:::i;909:10508::-;3871:27:31;;:::i;:::-;3927:8;;;;;:::i;:::-;909:10508:41;;;;;;;;;805:30:52;909:10508:41;805:30:52;;909:10508:41;;;;;;;805:30:52;;;909:10508:41;805:30:52;;:::i;:::-;909:10508:41;1009:25:52;;909:10508:41;;;1799:21:52;;;;1795:113;;9483:508:41;;4594:5403::o;1795:113:52:-;1843:54;-1:-1:-1;1843:54:52;10553:65:41;909:10508;;;;-1:-1:-1;1843:54:52;1496:30:48;909:10508:41;;265:9:54;-1:-1:-1;265:9:54;;;;;909:10508:41;;;;;;;;;;;;;;8360:1:0;909:10508:41;;;5135:3;5179:22;:19;;;;;:::i;:22::-;10152:28;;;;;;;:::i;:::-;10202:13;;;-1:-1:-1;10217:19:41;;;;;;5326:22;;;;909:10508;5326:22;;;;:::i;:::-;-1:-1:-1;;;5393:8:41;;;;;;8426:18;;;;;;:::i;:::-;8500:25;;;;;:::i;:::-;-1:-1:-1;8563:14:41;;;;;;8760:18;8330:25:50;8360:1:0;909:10508:41;8760:18;909:10508;;8330:25:50;:::i;:::-;8370:13;-1:-1:-1;8385:14:50;8360:1:0;909:10508:41;8760:18;909:10508;;8385:14:50;;;;8760:18:41;;8360:1:0;909:10508:41;8760:18;909:10508;;8663:15:50;8360:1:0;8663:15:50;;;;8897:8;909:10508:41;;;;;;;;8803:13;-1:-1:-1;8818:14:41;;;;;;5135:3;;;;8360:1:0;909:10508:41;5106:13;;8834:3;8889:21;:18;;;;;:::i;:21::-;909:10508;8983:14;;;;;;;;;:::i;:::-;:29;909:10508;8983:55;8979:204;;9272:11;;909:10508;-1:-1:-1;9272:11:41;;;9391:14;9272:11;;:::i;:::-;9391:14;;;;;:::i;:::-;909:10508;;;9380:26;;;909:10508;9380:26;;;909:10508;;;;;;;;;:::i;:::-;9380:26;-1:-1:-1;;9380:26:41;;;;;;:::i;:::-;909:10508;;;;;;;;;;;;;;9373:34;;909:10508;9373:34;;;;;-1:-1:-1;9373:34:41;5860:27;909:10508;5860:27;909:10508;9205:225;;;;;909:10508;;-1:-1:-1;909:10508:41;;;9205:225;;;;;909:10508;9205:225;;9318:14;909:10508;9205:225;10553:65;9205:225;;;:::i;:::-;;5860:27;909:10508;5860:27;909:10508;9205:225;;;;;;;8360:1:0;9205:225:41;;;;8834:3;;909:10508;8803:13;;9205:225;-1:-1:-1;9205:225:41;;;:::i;:::-;;;;;909:10508;;265:9:54;-1:-1:-1;265:9:54;;;;;9373:34:41;909:10508;;265:9:54;-1:-1:-1;265:9:54;;;;;8979:204:41;9129:14;;;;;;:::i;:::-;:29;909:10508;9073:87;;-1:-1:-1;9073:87:41;10553:65;909:10508;;;;-1:-1:-1;9073:87:41;8656:224:50;-1:-1:-1;8714:19:50;260:66:51;8360:1:0;260:66:51;8714:19:50;;;;260:66:51;8360:1:0;260:66:51;8656:224:50;;8735:3;260:66:51;8360:1:0;260:66:51;;;;;;;;8793:12:50;;;;:::i;:::-;909:10508:41;260:66:51;8360:1:0;909:10508:41;;;;;;;;8807:16:50;;;-1:-1:-1;8807:16:50;;;:::i;:::-;909:10508:41;;;;8776:48:50;;;;909:10508:41;;;260:66:51;;;909:10508:41;8776:48:50;;;;909:10508:41;8776:48:50;;:::i;:::-;909:10508:41;;;;;;;;;;;;;;8769:56:50;;909:10508:41;8769:56:50;;;;;8360:1:0;8769:56:50;-1:-1:-1;8769:56:50;8758:67;;;;:::i;:::-;909:10508:41;;8699:13:50;;8769:56;909:10508:41;;265:9:54;-1:-1:-1;265:9:54;;;;;8401:3:50;8360:1:0;909:10508:41;;;8424:16:50;;8420:141;8428:12;;;8471:8;;;;:::i;:::-;909:10508:41;8460:19:50;;;;:::i;:::-;909:10508:41;8420:141:50;909:10508:41;8370:13:50;;8420:141;260:66:51;8518:28:50;;;;:::i;:::-;909:10508:41;8420:141:50;;8579:3:41;8622:18;:30;:21;8360:1:0;8622:18:41;;;;;:::i;:30::-;909:10508;8606:50;;;;:::i;:::-;909:10508;;8548:13;;5403:3;5326:22;;5461;909:10508;5326:22;;5461;;:::i;:::-;909:10508;;;;;;;;;;;;;;;;;;;;;;;;5580:41;;909:10508;325:19:54;-1:-1:-1;325:19:54;10553:65:41;909:10508;325:19:54;;-1:-1:-1;325:19:54;909:10508:41;5006:26:34;5592:81:55;;909:10508:41;5580:13;;909:10508;-1:-1:-1;325:19:54;5006:14:34;909:10508:41;325:19:54;;-1:-1:-1;325:19:54;909:10508:41;1083:102:56;;909:10508:41;5804:21;;909:10508;-1:-1:-1;325:19:54;909:10508:41;;325:19:54;;-1:-1:-1;325:19:54;909:10508:41;5182:95:55;;5927:10:41;;909:10508;-1:-1:-1;5927:10:41;;;;:::i;:::-;909:10508;;;;;6071:496;;;;5580:13;;;;909:10508;;;;5804:21;;909:10508;;;;;6247:31;;;909:10508;;;;;;6312:30;;909:10508;;;;;;;;;;6451:23;;909:10508;;;;;;;;;;;;;;6071:496;;;10372:36;6071:496;;:::i;:::-;909:10508;;;;;;;;;;;;;;6035:558;;909:10508;6035:558;;;;;-1:-1:-1;6035:558:41;5860:27;909:10508;5860:27;909:10508;5860:756;;;;-1:-1:-1;909:10508:41;5860:756;909:10508;;5860:756;;;;;909:10508;5860:756;;5972:22;5860:756;10553:65;5860:756;;;:::i;:::-;;:27;909:10508;5860:27;909:10508;5860:756;;;;;;;;5403:3;6824:18;;:29;:18;;;;:::i;:::-;909:10508;5580:13;;909:10508;6824:29;;:::i;:::-;6919:19;909:10508;6247:31;;;;909:10508;6884:54;6880:308;;7293:12;;;;:::i;:::-;5580:13;7288:23;909:10508;5580:13;;909:10508;7288:23;;;:::i;:::-;909:10508;7485:18;:29;:18;;;;:::i;:::-;909:10508;5804:21;;909:10508;7485:29;;:::i;:::-;7579:19;909:10508;6312:30;909:10508;6312:30;;909:10508;7545:53;7541:306;;7952:12;;8360:1:0;7952:12:41;;;;:::i;:::-;5804:21;7947:23;909:10508;5804:21;;909:10508;7947:23;;;:::i;:::-;909:10508;8068:6;;;:16;;5403:3;8064:249;;;909:10508;;;;;6451:23;;909:10508;:::i;:::-;8064:249;;909:10508;5378:13;;;8064:249;909:10508;1283:75:49;909:10508:41;;;6451:23;;909:10508;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1283:75:49;;:::i;:::-;909:10508:41;;;;;;8064:249;;;8068:16;8078:6;;;8068:16;;7541:306;909:10508;7637:183;;;-1:-1:-1;7637:183:41;10553:65;909:10508;6312:30;909:10508;;;;-1:-1:-1;7637:183:41;6880:308;6977:184;;;;-1:-1:-1;6977:184:41;10553:65;909:10508;6247:31;909:10508;;;;-1:-1:-1;6977:184:41;5860:756;-1:-1:-1;5860:756:41;;;:::i;:::-;;;;5182:95:55;909:10508:41;5233:33:55;;-1:-1:-1;5233:33:55;5804:21:41;909:10508;10553:65;909:10508;;-1:-1:-1;5233:33:55;1083:102:56;909:10508:41;1143:31:56;;-1:-1:-1;1143:31:56;5580:13:41;909:10508;10553:65;909:10508;;-1:-1:-1;1143:31:56;5592:81:55;5641:21;-1:-1:-1;5641:21:55;10553:65:41;909:10508;;-1:-1:-1;5641:21:55;10238:3:41;10285:31;:28;;;;;:::i;:31::-;10372:36;:31;:28;;;;;:::i;:36::-;909:10508;-1:-1:-1;909:10508:41;;;;;:::i;:::-;;;;;567:17:48;;909:10508:41;;;;537:48:48;;;;909:10508:41;;;;;;;537:48:48;;;;909:10508:41;537:48:48;;:::i;:::-;909:10508:41;;;;;;;;;;;;;;530:56:48;;909:10508:41;530:56:48;;;;;-1:-1:-1;530:56:48;10553:65:41;909:10508;530:56:48;909:10508:41;10564:23;;;:::i;:::-;909:10508;;;10553:65;;;;909:10508;10553:65;;;;;;;;;-1:-1:-1;10553:65:41;;;10238:3;10641:25;;;;10637:151;;10924:23;;;909:10508;;-1:-1:-1;10924:23:41;;;10913:60;10924:23;909:10508;10961:11;10924:23;909:10508;10924:23;;:::i;:::-;10949:10;909:10508;10949:10;;;;;;:::i;:::-;10961:11;;;;;;;;:::i;:::-;909:10508;;;;;10913:60;;;909:10508;10913:60;;;909:10508;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;909:10508:41;;;;;;;;;:::i;:::-;10913:60;-1:-1:-1;;10913:60:41;;;;;;:::i;:::-;909:10508;10903:71;;11113:18;;;;;:::i;:::-;909:10508;;;;;;:::i;:::-;;;;236:20:48;909:10508:41;236:20:48;;;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10372:36;909:10508;;;10372:36;236:20:48;;;;;;:::i;:::-;909:10508:41;;;;;;;;;;;;;;229:28:48;;909:10508:41;229:28:48;;;;;11102:79:41;11113:67;:64;229:28:48;;11113:47:41;:56;229:28:48;909:10508:41;229:28:48;-1:-1:-1;229:28:48;11113:47:41;;:::i;:56::-;909:10508;11113:64;;;;:::i;:67::-;909:10508;;11102:79;;;909:10508;11102:79;;909:10508;;;;;;;;:::i;11102:79::-;909:10508;11092:90;;11205:40;;;;11201:184;;10238:3;;8360:1:0;909:10508:41;10202:13;;11201:184;11276:90;-1:-1:-1;11276:90:41;10553:65;909:10508;;;;-1:-1:-1;11276:90:41;10637:151;10697:72;-1:-1:-1;10697:72:41;10553:65;909:10508;;;;-1:-1:-1;10697:72:41;10553:65;;;909:10508;10553:65;;;;;;;;;909:10508;10553:65;;;:::i;:::-;;;909:10508;;;;;10553:65;;;;;;-1:-1:-1;10553:65:41;;;909:10508;;265:9:54;-1:-1:-1;265:9:54;;;;;4851:3:41;4884:34;:22;:19;;;;;:::i;:22::-;:34;;:::i;:::-;4870:55;;909:10508;;;;;;;8360:1:0;4870:55:41;4851:3;909:10508;4822:13;;;996:169:0;1030:6;;;;;;;;;:::i;:::-;1062:52;;1086:20;;;-1:-1:-1;;1080:26:0;1086:20;;-1:-1:-1;;909:10508:41;;-1:-1:-1;;909:10508:41;;;;1147:6:0;-1:-1:-1;;1143:10:0;1069:44;-1:-1:-1;1069:44:0;;1050:64;1138:16;;1147:6;;:::i;:::-;1143:10;;:::i;:::-;1128:26;996:169;;1128:26;996:169;;1086:20;260:66:51;-1:-1:-1;260:66:51;;;;;-1:-1:-1;260:66:51;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;842:32:0;;8360:1;842:32;;:20;-1:-1:-1;;853:9:0;;;;842:20;;;909:10508:41;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;260:341:53:-;;;;;426:1;429:7;;;;;;568:26;;426:1;568:26;;909:10508:41;;426:1:53;568:26;438:3;461:6;:15;:6;;;;;:::i;:15::-;909:10508:41;461:26:53;457:85;;909:10508:41;;414:13:53;;457:85;521:6;;;;;;:::i;260:66:51:-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;1250:1001:54:-;;;1418:12;-1:-1:-1;909:10508:41;;;;;;;;;;;;;1418:12:54;;;;;;;;-1:-1:-1;1418:12:54;1489:16;;;:::i;:::-;1477:28;;1473:77;;1418:12;909:10508:41;;;;;;;1606:50:54;;;1748:15;;;;;:::o;1602:577::-;325:19;-1:-1:-1;325:19:54;1833:6;1418:12;325:19;909:10508:41;-1:-1:-1;325:19:54;909:10508:41;;;-1:-1:-1;909:10508:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1826:24:54;;;1418:12;1826:24;-1:-1:-1;1826:24:54;;;1418:12;1826:24;;;;;-1:-1:-1;1826:24:54;1854:16;;:::i;:::-;1826:44;1854:16;;1886:15;;;;;:::o;1822:357::-;909:10508:41;;;;;;;1960:44:54;;1956:223;;1822:357;;2196:48;-1:-1:-1;2196:48:54;909:10508:41;;;2196:48:54;909:10508:41;;-1:-1:-1;2196:48:54;909:10508:41;;-1:-1:-1;909:10508:41;;2196:48:54;909:10508:41;;-1:-1:-1;909:10508:41;1956:223:54;2025:76;;;;;;909:10508:41;2025:76:54;;-1:-1:-1;2025:76:54;;325:19;-1:-1:-1;325:19:54;1833:6;1418:12;325:19;909:10508:41;-1:-1:-1;325:19:54;909:10508:41;;;;;;;;;;:::i;:::-;;;;;;1956:223:54;909:10508:41;-1:-1:-1;909:10508:41;;;;;;;;;;;;-1:-1:-1;909:10508:41;;;;;;-1:-1:-1;;909:10508:41;;;;;;;;;;;;2153:15:54;:::o;909:10508:41:-;;;;-1:-1:-1;909:10508:41;;;;;-1:-1:-1;;909:10508:41;;325:19:54;;-1:-1:-1;325:19:54;1418:12;-1:-1:-1;325:19:54;909:10508:41;-1:-1:-1;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;;;2153:15:54;:::o;909:10508:41:-;-1:-1:-1;;909:10508:41;;;;;;;;;;;;;;;;;;;;;1418:12:54;909:10508:41;;;;;;;;;;;;;;;;;325:19:54;-1:-1:-1;325:19:54;1418:12;-1:-1:-1;325:19:54;909:10508:41;;;;;;;;1418:12:54;909:10508:41;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;909:10508:41;;;;;;;;;-1:-1:-1;909:10508:41;;;;;325:19:54;;;-1:-1:-1;325:19:54;1418:12;-1:-1:-1;325:19:54;-1:-1:-1;909:10508:41;;;;;;;-1:-1:-1;;909:10508:41;;;1418:12:54;909:10508:41;;;;;1418:12:54;909:10508:41;;;;;;;;;;;;;;;;;-1:-1:-1;;909:10508:41;;;;;;;-1:-1:-1;909:10508:41;1418:12:54;909:10508:41;;442:119:51;-1:-1:-1;442:119:51;537:16;442:119;909:10508:41;;537:16:51;;;;909:10508:41;;;;;;;;537:16:51;;;;;;:::i;:::-;909:10508:41;;;;;;;;;;;;;;;530:24:51;;;;;;;;-1:-1:-1;530:24:51;442:119;:::o;909:10508:41:-;;;;;;;;-1:-1:-1;325:19:54;;-1:-1:-1;325:19:54;909:10508:41;;-1:-1:-1;909:10508:41;:::o;2336:406:34:-;325:19:54;909:10508:41;325:19:54;5006:14:34;325:19:54;;;909:10508:41;325:19:54;909:10508:41;5006:26:34;2415:321;2419:22;;;873:13:56;909:10508:41;;;;;;;;;;5006:14:34;909:10508:41;;;873:13:56;909:10508:41;873:13:56;909:10508:41;:::i;:::-;;;;;;-1:-1:-1;;909:10508:41;;;;;;;;;;;;;;;;873:13:56;909:10508:41;325:19:54;909:10508:41;325:19:54;5006:14:34;325:19:54;;;909:10508:41;325:19:54;909:10508:41;5006:14:34;2671:11;:::o;2415:321::-;2713:12;909:10508:41;2713:12:34;:::o;2336:406::-;325:19:54;909:10508:41;325:19:54;5006:14:34;325:19:54;;;909:10508:41;325:19:54;909:10508:41;5006:26:34;2415:321;2419:22;;;2949:6:55;909:10508:41;;;;;;;;;;5006:14:34;909:10508:41;;;2949:6:55;909:10508:41;2949:6:55;909:10508:41;:::i;:::-;;;2949:6:55;909:10508:41;325:19:54;909:10508:41;325:19:54;5006:14:34;325:19:54;;;909:10508:41;325:19:54;909:10508:41;5006:14:34;2671:11;:::o;6213:760:0:-;;;;;;6564:10;;;;;6624:21;-1:-1:-1;;6624:21:0;;;865:66:49;;-1:-1:-1;;;;;;6670:13:0:o;6620:188::-;-1:-1:-1;;11726:19:0;;;-1:-1:-1;;;11843:18:0;;;;;;;11840:1;11833:34;11678:19;;;11926:1;11919:17;11899:113;12249:23;-1:-1:-1;;12249:23:0;12255:17;;;;909:10508:41;;;;;;;12230:17:0;;;;;;12223:55;12365:7;909:10508:41;;;;;;;;;12398:39:0;;;12414:17;;12411:1;12404:33;909:10508:41;;;;;;;12355:23:0;6781:1;12355:23;;;;;;;12345:39;;12325:139;12512:19;;12509:1;12502:35;6749:44;;6560:338;842:7;;;3213:15;842:7;:20;;6560:338;842:32;;;;6560:338;909:10508:41;;;-1:-1:-1;;;941:1:0;-1:-1:-1;;926:16:0;1003:7;;;3254:23;;;;;-1:-1:-1;;3254:23:0;;;;;;;3300:22;;;3356:24;;3345:41;;6213:760;:::o;996:169::-;1030:6;;;;;;;;;:::i;:::-;1062:52;;1086:20;;;-1:-1:-1;;1080:26:0;1086:20;;-1:-1:-1;;909:10508:41;;-1:-1:-1;;909:10508:41;;;;1147:6:0;-1:-1:-1;;1143:10:0;1069:44;-1:-1:-1;1069:44:0;;1050:64;1138:16;;1147:6;;:::i;1143:10::-;1128:26;996:169;;1128:26;996:169;;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;842:32:0;;866:8;842:32;;:20;-1:-1:-1;;853:9:0;;;;842:20;;;6560:338;6850:37;;;-1:-1:-1;;6850:37:0;;:::i;:::-;6838:49;;6560:338;;2129:778:31;909:10508:41;;;2129:778:31;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:31;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;7280:532::-;909:10508:41;;;;;;7366:29:31;;;7411:7;;:::o;7362:444::-;909:10508:41;7462:38:31;;909:10508:41;;7523:23:31;7375:20;7523:23;909:10508:41;7375:20:31;7523:23;7458:348;7576:35;7567:44;;7576:35;;7634:46;;7375:20;7634:46;909:10508:41;;;7375:20:31;7634:46;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;7763:32;7375:20;7763:32;909:10508:41;;;7375:20:31;7763:32;8838:1966:0;;;;;;9126:8;;:20;;;8838:1966;9122:48;;9184:8;;:20;;;8838:1966;9180:48;;909:10508:41;;;;;;;;:::i;:::-;;;;;9437:21:0;;;;;6867:1;9437:21;;909:10508:41;;;;;;6867:1:0;9476:23;909:10508:41;;;;;;;;;;;;;;;;;6867:1:0;9556:23;909:10508:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:23:0;;909:10508:41;;;9672:23:0;;9621:158;909:10508:41;9621:158:0;;909:10508:41;;;;9709:23:0;;9621:158;909:10508:41;9621:158:0;;909:10508:41;;;;9746:23:0;;909:10508:41;9621:158:0;;909:10508:41;;;;;;;9898:14:0;;;:32;;;8838:1966;909:10508:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;10058:11:0;;;;:::i;:::-;10044:31;;909:10508:41;;;;;10119:11:0;;;;:::i;:::-;10105:31;;909:10508:41;;;;;;;;;;;;;;;;;;10168:25:0;;909:10508:41;;;;;;;;;;;;10226:25:0;;909:10508:41;;;;;;;;;10315:25:0;909:10508:41;;10342:11:0;;;;:::i;:::-;10308:51;;909:10508:41;;;;;;10401:25:0;;9512:1;10391:41;10385:47;;;;:::i;:::-;10374:64;;909:10508:41;;;;;;10549:25:0;;10576:8;;;;:::i;:::-;10542:48;;10503:114;;909:10508:41;;;;10649:25:0;;10643:31;;;;:::i;:::-;10632:48;;909:10508:41;;10727:41:0;10778:19;;;8838:1966;:::o;909:10508:41:-;;;;;;;;;;;;;;;;;;;;;;;9898:32:0;909:10508:41;;;;;9916:14:0;;9898:32;;9180:48;9206:22;;;6867:1;9206:22;:::o;9184:20::-;9196:8;;;9184:20;;9122:48;9148:22;-1:-1:-1;9148:22:0;-1:-1:-1;6867:1:0;;9148:22;-1:-1:-1;9148:22:0:o;9126:20::-;9138:8;;;9126:20;;5203:1551:31;;;6283:66;6270:79;;6266:164;;909:10508:41;;;;;;-1:-1:-1;909:10508:41;;;;;;;;;;;;;;;;;;;6541:24:31;;;;;;;;;-1:-1:-1;6541:24:31;909:10508:41;;;6579:20:31;6575:113;;6698:49;-1:-1:-1;6698:49:31;-1:-1:-1;5203:1551:31;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:31;6541:24;6615:62;-1:-1:-1;6615:62:31;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "47645": [
        {
          "start": 6843,
          "length": 32
        },
        {
          "start": 6967,
          "length": 32
        },
        {
          "start": 7728,
          "length": 32
        },
        {
          "start": 7881,
          "length": 32
        }
      ],
      "47647": [
        {
          "start": 7815,
          "length": 32
        }
      ],
      "47649": [
        {
          "start": 6515,
          "length": 32
        },
        {
          "start": 6562,
          "length": 32
        },
        {
          "start": 6609,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "containsRoot(bytes32)": "48cbdfca",
    "execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": "9a49e741",
    "latestRoot()": "d7b0fef1",
    "lookupBlob(bytes32)": "8310d485",
    "merkleProof(bytes32)": "c235cd9e",
    "verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": "f3eeec55",
    "verifyMerkleProof(bytes32,bytes32,bytes32[],uint256)": "59a89283"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"riscZeroVerifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"complianceCircuitID\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"commitmentTreeDepth\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"actionTreeDepth\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BlobEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"BlobHashMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blobHash\",\"type\":\"bytes32\"}],\"name\":\"BlobNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierAppDataMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierCommitmentNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierKindMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CalldataCarrierLabelMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"CommitmentIndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"CommitmentMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"}],\"name\":\"DeletionCriterionNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"DeltaMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyCommitment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"expected\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"actual\",\"type\":\"bytes\"}],\"name\":\"ForwarderCallOutputMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"InvalidCommitmentRef\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"}],\"name\":\"InvalidNullifierRef\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"InvalidPathLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"InvalidRootRef\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"}],\"name\":\"LogicProofTagNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"LogicRefMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonEmptyDelta\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NonExistentLeafIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"NonExistingCommitment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"NonExistingRoot\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"PreExistingCommitment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"}],\"name\":\"PreExistingNullifier\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"PreExistingRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"RootMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TreeCapacityExceeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"blobHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"}],\"name\":\"BlobStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"CommitmentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NullifierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"RootAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isConsumed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"actionTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"ciphertext\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"internalType\":\"struct ExpirableBlob[]\",\"name\":\"appData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LogicInstance\",\"name\":\"instance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct LogicProof[]\",\"name\":\"logicProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentTreeRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ConsumedRefs\",\"name\":\"consumed\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct CreatedRefs\",\"name\":\"created\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"unitDelta\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ComplianceInstance\",\"name\":\"instance\",\"type\":\"tuple\"}],\"internalType\":\"struct ComplianceUnit[]\",\"name\":\"complianceUnits\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"valueRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierKeyCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ephemeral\",\"type\":\"bool\"}],\"internalType\":\"struct Resource\",\"name\":\"carrier\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"untrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"internalType\":\"struct ForwarderCalldata\",\"name\":\"call\",\"type\":\"tuple\"}],\"internalType\":\"struct ResourceForwarderCalldataPair[]\",\"name\":\"resourceCalldataPairs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"deltaProof\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"containsRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isContained\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isConsumed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"actionTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"ciphertext\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"internalType\":\"struct ExpirableBlob[]\",\"name\":\"appData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LogicInstance\",\"name\":\"instance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct LogicProof[]\",\"name\":\"logicProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentTreeRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ConsumedRefs\",\"name\":\"consumed\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct CreatedRefs\",\"name\":\"created\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"unitDelta\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ComplianceInstance\",\"name\":\"instance\",\"type\":\"tuple\"}],\"internalType\":\"struct ComplianceUnit[]\",\"name\":\"complianceUnits\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"valueRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierKeyCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ephemeral\",\"type\":\"bool\"}],\"internalType\":\"struct Resource\",\"name\":\"carrier\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"untrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"internalType\":\"struct ForwarderCalldata\",\"name\":\"call\",\"type\":\"tuple\"}],\"internalType\":\"struct ResourceForwarderCalldataPair[]\",\"name\":\"resourceCalldataPairs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"deltaProof\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blobHash\",\"type\":\"bytes32\"}],\"name\":\"lookupBlob\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"merkleProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"directionBits\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tag\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isConsumed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"actionTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"ciphertext\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum DeletionCriterion\",\"name\":\"deletionCriterion\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"internalType\":\"struct ExpirableBlob[]\",\"name\":\"appData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LogicInstance\",\"name\":\"instance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct LogicProof[]\",\"name\":\"logicProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentTreeRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ConsumedRefs\",\"name\":\"consumed\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"}],\"internalType\":\"struct CreatedRefs\",\"name\":\"created\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"unitDelta\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ComplianceInstance\",\"name\":\"instance\",\"type\":\"tuple\"}],\"internalType\":\"struct ComplianceUnit[]\",\"name\":\"complianceUnits\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"logicRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"valueRef\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierKeyCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ephemeral\",\"type\":\"bool\"}],\"internalType\":\"struct Resource\",\"name\":\"carrier\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"untrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"internalType\":\"struct ForwarderCalldata\",\"name\":\"call\",\"type\":\"tuple\"}],\"internalType\":\"struct ResourceForwarderCalldataPair[]\",\"name\":\"resourceCalldataPairs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"deltaProof\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"path\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"directionBits\",\"type\":\"uint256\"}],\"name\":\"verifyMerkleProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"BlobStored(bytes32,uint8)\":{\"params\":{\"blobHash\":\"The hash of the blob being stored.\",\"deletionCriterion\":\"The deletion criterion of the blob.\"}},\"CommitmentAdded(bytes32,uint256)\":{\"params\":{\"commitment\":\"The commitment being stored.\",\"index\":\"The index of the commitment in the Merkle tree.\"}},\"NullifierAdded(bytes32,uint256)\":{\"params\":{\"index\":\"The index of the nullifier in the enumerable set.\",\"nullifier\":\"The nullifier being stored.\"}},\"RootAdded(bytes32)\":{\"params\":{\"root\":\"The root.\"}}},\"kind\":\"dev\",\"methods\":{\"containsRoot(bytes32)\":{\"params\":{\"root\":\"The root to check.\"},\"returns\":{\"isContained\":\"Whether the root exists or not.\"}},\"execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"params\":{\"transaction\":\"The transaction to execute.\"}},\"latestRoot()\":{\"returns\":{\"root\":\"The latest commitment tree state root.\"}},\"lookupBlob(bytes32)\":{\"params\":{\"blobHash\":\"The hash of the blob to lookup.\"},\"returns\":{\"blob\":\"The found blob.\"}},\"merkleProof(bytes32)\":{\"params\":{\"commitment\":\"The commitment leaf to proof inclusion in the tree for.\"},\"returns\":{\"directionBits\":\"The direction bits for the proof.\",\"siblings\":\"The siblings constituting the path from the leaf to the root.\"}},\"verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"params\":{\"transaction\":\"The transaction to verify.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BlobStored(bytes32,uint8)\":{\"notice\":\"Emitted if a blob is stored.\"},\"CommitmentAdded(bytes32,uint256)\":{\"notice\":\"Emitted if a commitment is added to the commitment accumulator.\"},\"NullifierAdded(bytes32,uint256)\":{\"notice\":\"Emitted if a nullifier is added to the nullifier set.\"},\"RootAdded(bytes32)\":{\"notice\":\"Emitted if a root is stored in the root storage.\"}},\"kind\":\"user\",\"methods\":{\"containsRoot(bytes32)\":{\"notice\":\"Checks if a commitment tree state root exists.\"},\"execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"notice\":\"Executes a transaction by adding the commitments and nullifiers to the commitment tree and nullifier set, respectively.\"},\"latestRoot()\":{\"notice\":\"Returns the latest  commitment tree state root.\"},\"lookupBlob(bytes32)\":{\"notice\":\"Looks a blob up in the blob storage or reverts.\"},\"merkleProof(bytes32)\":{\"notice\":\"Returns the Merkle proof and associated root for a commitment leaf in the tree.\"},\"verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))\":{\"notice\":\"Verifies a transaction by checking the delta, resource logic, and compliance proofs.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ProtocolAdapter.sol\":\"ProtocolAdapter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@risc0-ethereum/=lib/risc0-ethereum/contracts/src/\",\":ds-test/=lib/risc0-ethereum/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-deep/=lib/forge-deep/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":solady/=lib/forge-deep/lib/solady/src/\",\":solmate/=lib/forge-deep/lib/solady/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/elliptic-curve-solidity/contracts/EllipticCurve.sol\":{\"keccak256\":\"0x50ee7c49cd01a085214ce375a6f806f8fa0898f616247770a2e8d2f9b7a59d7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://828da8f7309850b2afd6b5eaea78f3bac7678c666c1a92108abddb17c3286e4b\",\"dweb:/ipfs/Qmdv2jiGW1cfvCB5UP6MNGWGNVkQ2aAh89xG5uyinbS3hP\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuardTransient.sol\":{\"keccak256\":\"0xe56ff5015046505f81f9d62671a784e933dd099db4c3a8fa8de598f20af2c5a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355863359b4a250f7016836ef9a9672578e898503896f70a0d42b80141586f3e\",\"dweb:/ipfs/QmXXzvoMSFNQf8nRbcyRap5qzcbekWuzbXDY5C8f68JiG3\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/TransientSlot.sol\":{\"keccak256\":\"0xac673fa1e374d9e6107504af363333e3e5f6344d2e83faf57d9bfd41d77cc946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5982478dbbb218e9dd5a6e83f5c0e8d1654ddf20178484b43ef21dd2246809de\",\"dweb:/ipfs/QmaB1hS68n2kG8vTbt7EPEzmrGhkUbfiFyykGGLsAr9X22\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol\":{\"keccak256\":\"0xae73e91e4d2829b0a88176584d876382b4b7540ff07c62cb947cdf9ea43d5cf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2dd7da39a6f9b100fc1dcde565d799462cdc7d27722d2265317c3a01619c818\",\"dweb:/ipfs/Qmd3k3kcvrtfkLqVza4jHodbFH8wvq5vmfPtwekBKtPjmz\"]},\"lib/risc0-ethereum/contracts/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]},\"src/ProtocolAdapter.sol\":{\"keccak256\":\"0x207897f4912b37910c3dd59a34ff8bb32c6f9ece9535bd6f2ac908ffd77133ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd6223bc4a103494794013e14cb09426a6dc212d15fb1280fd02237c90b69082\",\"dweb:/ipfs/QmPHzuaud6najvvnYRatsYvzMH1C1xkb77mzB3msGo5RhE\"]},\"src/Types.sol\":{\"keccak256\":\"0xa93ab7902ad9f77cf7f761f9b21dff137bccc7fc695107d43888e4ff11802deb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12e8ee3342955066df04769c294b9bb371709fdc4764e0b31c89f325dff61bc3\",\"dweb:/ipfs/QmS67WJma4d85Vcp9mwQb7WFGW3Earq2zNi1Hxrwamf6L2\"]},\"src/interfaces/IBlobStorage.sol\":{\"keccak256\":\"0xcf32467a2efcd49bc44370ad1bc6530699f2dbb13c42a1c942de4299b84652fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f434f6b2d5d625e4c3e6b150f7803dae3bc042baecc942a1b68ebe4bf134737a\",\"dweb:/ipfs/QmbLWBiNmzeNwik7PKi2W8FQMsGMt8jZHzw34JMNd4AZYu\"]},\"src/interfaces/ICommitmentAccumulator.sol\":{\"keccak256\":\"0xe3f2091c1aac0fc3244d2ae5877b1acecce762c2e349abec6ce03cb840df4157\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://697d2b095271884c05e6b1891fa43589ef836c6943384503541d793585bddc9e\",\"dweb:/ipfs/QmUzWCMnupyub7VDT58p4vBYwo7s1A4PBLbF8iA5SAtv6c\"]},\"src/interfaces/IForwarder.sol\":{\"keccak256\":\"0xf74120232baf3b69e5f3af0cee2e22a88718bb23747f577433b362222efb19b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c053cd5a9605a26dbebb2497ba4f6e348b4efe0ea6a1f4ea3e66fec252ff630c\",\"dweb:/ipfs/QmesTNpmnMhDngxgcdh5y2BEXAn9rwPSWMvHAyMvUsu9Lq\"]},\"src/interfaces/INullifierSet.sol\":{\"keccak256\":\"0x263ee8c0961ea5aef2a7e12e8e4ff21c7f86eccb80d62cd317f5545265a510df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df48f0e97e493be9877180ab7b22a9b6ec14d674204535881250c99f6919fb1\",\"dweb:/ipfs/Qma2DSoGrmYWxpiTDqxuB1Wir3txbjL5PxPGLUSRNPFUqs\"]},\"src/interfaces/IProtocolAdapter.sol\":{\"keccak256\":\"0x888d92cd3637520b2e9a787ab1f07b70417dc5adb73dadd6ad6689dfc6c1f452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a6b37166a5790f374c8a18ae5ddd28c481db6ce28105c45c8ff795d4cb571b\",\"dweb:/ipfs/QmQRLg7YSJY75GK1oNieRmjKVFcKKcxMCzHQCEcwRc4NVr\"]},\"src/libs/ComputableComponents.sol\":{\"keccak256\":\"0x1f7efa50202b50bb1ddd8f073d6b9904334fac280a6acb09d17f3e8fcabab1a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9219757775f1086a37be8406ee31fdb51c0488d91b55056d75088eea89beb70\",\"dweb:/ipfs/QmTgtcdTntvrdxj1TGMm6aXH2QgJ7X6V5YpBpc5s5Hp7rC\"]},\"src/libs/EllipticCurveK256.sol\":{\"keccak256\":\"0x5e683c6c694135a244b938f680b33e3d7380b10a2aa1ddd1d812dea88c0c5857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6161ad3e7f3887859e67393ddfd87701124acbaced24763339a65b165882385\",\"dweb:/ipfs/QmaoXZCMbnjgdarBZkU3CwvNhbriaE3TQZfX5sUR8ajc3j\"]},\"src/libs/MerkleTree.sol\":{\"keccak256\":\"0x536b05191ae1e1881e2896f8aade132dc4fcb28fefc3132c755d854bb02aa6d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17000b942aa8d78bf4ccc3b458d7c53d4ce440fcfae7e8d381511ffd05eeb850\",\"dweb:/ipfs/QmYjwhK4DnobCBuFN53uXpQRBzWSb3C9Ld3yfqpgkSdVBC\"]},\"src/libs/SHA256.sol\":{\"keccak256\":\"0x85cda44e257c0d69a4e9a5d5300154f7eb0787d40580c263e0a6517717c17cb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c2d664f1b843c9068a4fae25cf44355cbc0ab3e095b55eddfe3105836dd5982\",\"dweb:/ipfs/QmQg4GXwtL6hxQQa7jjepj6Sq65d89CD6awx6R7PwVY42u\"]},\"src/proving/Delta.sol\":{\"keccak256\":\"0x10e673c790d62939c5d20b5bbb84599915a38353a2ffc451a842a445ed9946ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0c891184204efb187e5108e6d37cc4c53de01be981c14b876b1978891bac4d2\",\"dweb:/ipfs/QmXuUtt6rn5qw3fvS5jFdY5qUo21ciSQgfbWNZxcTGJfkd\"]},\"src/proving/Logic.sol\":{\"keccak256\":\"0x3fa3b748b7bf36c9766679f2cf273e00f19b0f338de39b3cf94fa888647b0405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf6023a2d1f3846b8d678b738acfe6c28ced7f8ce268ae4499bd814297b7f22c\",\"dweb:/ipfs/QmTbtrGKsVGNpTaRmTBw3awAE5T2c4mu4bwjbD9SnGXXgU\"]},\"src/state/BlobStorage.sol\":{\"keccak256\":\"0x11ef2ffeaa43a67f8beaf48b4fed2721052b96c01b611bd259fab8907f4d05ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c4a32137ed9dcbacf6eef632814840a24eda4f889fbdfeec1edc879df458b9b\",\"dweb:/ipfs/QmQqvnA5VVXSG5fcsWAcu1UVXE8fQL4HsKN6royU95ruD3\"]},\"src/state/CommitmentAccumulator.sol\":{\"keccak256\":\"0xdfd257f017db48747f2b7d6dad897bcd11c4a2c6949cdc343cd969848d284414\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c260e1f46e2355dcc21832aa2920103f563fa02c8edf803762dbcaeed88683c9\",\"dweb:/ipfs/QmYs9P6yrEMzRCLyDPJDAKGdsBRJhoNDh6xHArJpAM9pog\"]},\"src/state/NullifierSet.sol\":{\"keccak256\":\"0x8314d0e2b8115d36a89fc1b0dd3eb17f5fef8b70831a374425c32d2f6c2f1a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a0d0f5e1b4f466fc95091d7c45199dc1caf564c4d48e30fd229c0aef5312d05\",\"dweb:/ipfs/QmX9pGdMrz9ZqR98W3uxLRmiE3Esm7YQNvLxNDcC82H3oT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IRiscZeroVerifier",
              "name": "riscZeroVerifier",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "complianceCircuitID",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "commitmentTreeDepth",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "actionTreeDepth",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BlobEmpty"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "BlobHashMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blobHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "BlobNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierAppDataMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierCommitmentNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierKindMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CalldataCarrierLabelMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "current",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CommitmentIndexOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "CommitmentMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "enum DeletionCriterion",
              "name": "deletionCriterion",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "DeletionCriterionNotSupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "expected",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "actual",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DeltaMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAInvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "expected",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "actual",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "ForwarderCallOutputMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidCommitmentRef"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nullifier",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidNullifierRef"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidPathLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidRootRef"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tag",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LogicProofTagNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LogicRefMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonEmptyDelta"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NonExistentLeafIndex"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "NonExistingCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "NonExistingRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "PreExistingCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nullifier",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "PreExistingNullifier"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "PreExistingRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "RootMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TreeCapacityExceeded"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blobHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "enum DeletionCriterion",
              "name": "deletionCriterion",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BlobStored",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CommitmentAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nullifier",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NullifierAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RootAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Action[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct LogicProof[]",
                      "name": "logicProofs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct LogicInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "tag",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bool",
                              "name": "isConsumed",
                              "type": "bool"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "actionTreeRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ciphertext",
                              "type": "bytes"
                            },
                            {
                              "internalType": "struct ExpirableBlob[]",
                              "name": "appData",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "enum DeletionCriterion",
                                  "name": "deletionCriterion",
                                  "type": "uint8"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "blob",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes32",
                          "name": "logicRef",
                          "type": "bytes32"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ComplianceUnit[]",
                      "name": "complianceUnits",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct ComplianceInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "struct ConsumedRefs",
                              "name": "consumed",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "nullifier",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "commitmentTreeRoot",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "struct CreatedRefs",
                              "name": "created",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "commitment",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "uint256[2]",
                              "name": "unitDelta",
                              "type": "uint256[2]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ResourceForwarderCalldataPair[]",
                      "name": "resourceCalldataPairs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Resource",
                          "name": "carrier",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "logicRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "labelRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "valueRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "nullifierKeyCommitment",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "quantity",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "randSeed",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bool",
                              "name": "ephemeral",
                              "type": "bool"
                            }
                          ]
                        },
                        {
                          "internalType": "struct ForwarderCalldata",
                          "name": "call",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "untrustedForwarder",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "input",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "output",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "deltaProof",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransactionExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "containsRoot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isContained",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Action[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct LogicProof[]",
                      "name": "logicProofs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct LogicInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "tag",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bool",
                              "name": "isConsumed",
                              "type": "bool"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "actionTreeRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ciphertext",
                              "type": "bytes"
                            },
                            {
                              "internalType": "struct ExpirableBlob[]",
                              "name": "appData",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "enum DeletionCriterion",
                                  "name": "deletionCriterion",
                                  "type": "uint8"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "blob",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes32",
                          "name": "logicRef",
                          "type": "bytes32"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ComplianceUnit[]",
                      "name": "complianceUnits",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct ComplianceInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "struct ConsumedRefs",
                              "name": "consumed",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "nullifier",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "commitmentTreeRoot",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "struct CreatedRefs",
                              "name": "created",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "commitment",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "uint256[2]",
                              "name": "unitDelta",
                              "type": "uint256[2]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ResourceForwarderCalldataPair[]",
                      "name": "resourceCalldataPairs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Resource",
                          "name": "carrier",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "logicRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "labelRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "valueRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "nullifierKeyCommitment",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "quantity",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "randSeed",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bool",
                              "name": "ephemeral",
                              "type": "bool"
                            }
                          ]
                        },
                        {
                          "internalType": "struct ForwarderCalldata",
                          "name": "call",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "untrustedForwarder",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "input",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "output",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "deltaProof",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blobHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lookupBlob",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "blob",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "siblings",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "directionBits",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Action[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct LogicProof[]",
                      "name": "logicProofs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct LogicInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "tag",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bool",
                              "name": "isConsumed",
                              "type": "bool"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "actionTreeRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ciphertext",
                              "type": "bytes"
                            },
                            {
                              "internalType": "struct ExpirableBlob[]",
                              "name": "appData",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "enum DeletionCriterion",
                                  "name": "deletionCriterion",
                                  "type": "uint8"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "blob",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes32",
                          "name": "logicRef",
                          "type": "bytes32"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ComplianceUnit[]",
                      "name": "complianceUnits",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        },
                        {
                          "internalType": "struct ComplianceInstance",
                          "name": "instance",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "struct ConsumedRefs",
                              "name": "consumed",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "nullifier",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "commitmentTreeRoot",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "struct CreatedRefs",
                              "name": "created",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "bytes32",
                                  "name": "commitment",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "logicRef",
                                  "type": "bytes32"
                                }
                              ]
                            },
                            {
                              "internalType": "uint256[2]",
                              "name": "unitDelta",
                              "type": "uint256[2]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ResourceForwarderCalldataPair[]",
                      "name": "resourceCalldataPairs",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Resource",
                          "name": "carrier",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "logicRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "labelRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "valueRef",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "nullifierKeyCommitment",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "quantity",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "randSeed",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bool",
                              "name": "ephemeral",
                              "type": "bool"
                            }
                          ]
                        },
                        {
                          "internalType": "struct ForwarderCalldata",
                          "name": "call",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "untrustedForwarder",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "input",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "output",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "deltaProof",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "path",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "directionBits",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyMerkleProof"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "containsRoot(bytes32)": {
            "params": {
              "root": "The root to check."
            },
            "returns": {
              "isContained": "Whether the root exists or not."
            }
          },
          "execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "params": {
              "transaction": "The transaction to execute."
            }
          },
          "latestRoot()": {
            "returns": {
              "root": "The latest commitment tree state root."
            }
          },
          "lookupBlob(bytes32)": {
            "params": {
              "blobHash": "The hash of the blob to lookup."
            },
            "returns": {
              "blob": "The found blob."
            }
          },
          "merkleProof(bytes32)": {
            "params": {
              "commitment": "The commitment leaf to proof inclusion in the tree for."
            },
            "returns": {
              "directionBits": "The direction bits for the proof.",
              "siblings": "The siblings constituting the path from the leaf to the root."
            }
          },
          "verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "params": {
              "transaction": "The transaction to verify."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "containsRoot(bytes32)": {
            "notice": "Checks if a commitment tree state root exists."
          },
          "execute((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "notice": "Executes a transaction by adding the commitments and nullifiers to the commitment tree and nullifier set, respectively."
          },
          "latestRoot()": {
            "notice": "Returns the latest  commitment tree state root."
          },
          "lookupBlob(bytes32)": {
            "notice": "Looks a blob up in the blob storage or reverts."
          },
          "merkleProof(bytes32)": {
            "notice": "Returns the Merkle proof and associated root for a commitment leaf in the tree."
          },
          "verify((((bytes,(bytes32,bool,bytes32,bytes,(uint8,bytes)[]),bytes32)[],(bytes,((bytes32,bytes32,bytes32),(bytes32,bytes32),uint256[2]))[],((bytes32,bytes32,bytes32,bytes32,uint256,uint256,uint256,bool),(address,bytes,bytes))[])[],bytes))": {
            "notice": "Verifies a transaction by checking the delta, resource logic, and compliance proofs."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@risc0-ethereum/=lib/risc0-ethereum/contracts/src/",
        "ds-test/=lib/risc0-ethereum/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-deep/=lib/forge-deep/src/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "risc0-ethereum/=lib/risc0-ethereum/",
        "solady/=lib/forge-deep/lib/solady/src/",
        "solmate/=lib/forge-deep/lib/solady/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/ProtocolAdapter.sol": "ProtocolAdapter"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/elliptic-curve-solidity/contracts/EllipticCurve.sol": {
        "keccak256": "0x50ee7c49cd01a085214ce375a6f806f8fa0898f616247770a2e8d2f9b7a59d7b",
        "urls": [
          "bzz-raw://828da8f7309850b2afd6b5eaea78f3bac7678c666c1a92108abddb17c3286e4b",
          "dweb:/ipfs/Qmdv2jiGW1cfvCB5UP6MNGWGNVkQ2aAh89xG5uyinbS3hP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
        "keccak256": "0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6",
        "urls": [
          "bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd",
          "dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuardTransient.sol": {
        "keccak256": "0xe56ff5015046505f81f9d62671a784e933dd099db4c3a8fa8de598f20af2c5a3",
        "urls": [
          "bzz-raw://355863359b4a250f7016836ef9a9672578e898503896f70a0d42b80141586f3e",
          "dweb:/ipfs/QmXXzvoMSFNQf8nRbcyRap5qzcbekWuzbXDY5C8f68JiG3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol": {
        "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
        "urls": [
          "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
          "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/TransientSlot.sol": {
        "keccak256": "0xac673fa1e374d9e6107504af363333e3e5f6344d2e83faf57d9bfd41d77cc946",
        "urls": [
          "bzz-raw://5982478dbbb218e9dd5a6e83f5c0e8d1654ddf20178484b43ef21dd2246809de",
          "dweb:/ipfs/QmaB1hS68n2kG8vTbt7EPEzmrGhkUbfiFyykGGLsAr9X22"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
        "urls": [
          "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
          "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06",
        "urls": [
          "bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231",
          "dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y"
        ],
        "license": "MIT"
      },
      "lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol": {
        "keccak256": "0xae73e91e4d2829b0a88176584d876382b4b7540ff07c62cb947cdf9ea43d5cf3",
        "urls": [
          "bzz-raw://f2dd7da39a6f9b100fc1dcde565d799462cdc7d27722d2265317c3a01619c818",
          "dweb:/ipfs/Qmd3k3kcvrtfkLqVza4jHodbFH8wvq5vmfPtwekBKtPjmz"
        ],
        "license": "Apache-2.0"
      },
      "lib/risc0-ethereum/contracts/src/Util.sol": {
        "keccak256": "0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82",
        "urls": [
          "bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c",
          "dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"
        ],
        "license": "Apache-2.0"
      },
      "src/ProtocolAdapter.sol": {
        "keccak256": "0x207897f4912b37910c3dd59a34ff8bb32c6f9ece9535bd6f2ac908ffd77133ed",
        "urls": [
          "bzz-raw://fd6223bc4a103494794013e14cb09426a6dc212d15fb1280fd02237c90b69082",
          "dweb:/ipfs/QmPHzuaud6najvvnYRatsYvzMH1C1xkb77mzB3msGo5RhE"
        ],
        "license": "MIT"
      },
      "src/Types.sol": {
        "keccak256": "0xa93ab7902ad9f77cf7f761f9b21dff137bccc7fc695107d43888e4ff11802deb",
        "urls": [
          "bzz-raw://12e8ee3342955066df04769c294b9bb371709fdc4764e0b31c89f325dff61bc3",
          "dweb:/ipfs/QmS67WJma4d85Vcp9mwQb7WFGW3Earq2zNi1Hxrwamf6L2"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBlobStorage.sol": {
        "keccak256": "0xcf32467a2efcd49bc44370ad1bc6530699f2dbb13c42a1c942de4299b84652fb",
        "urls": [
          "bzz-raw://f434f6b2d5d625e4c3e6b150f7803dae3bc042baecc942a1b68ebe4bf134737a",
          "dweb:/ipfs/QmbLWBiNmzeNwik7PKi2W8FQMsGMt8jZHzw34JMNd4AZYu"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICommitmentAccumulator.sol": {
        "keccak256": "0xe3f2091c1aac0fc3244d2ae5877b1acecce762c2e349abec6ce03cb840df4157",
        "urls": [
          "bzz-raw://697d2b095271884c05e6b1891fa43589ef836c6943384503541d793585bddc9e",
          "dweb:/ipfs/QmUzWCMnupyub7VDT58p4vBYwo7s1A4PBLbF8iA5SAtv6c"
        ],
        "license": "MIT"
      },
      "src/interfaces/IForwarder.sol": {
        "keccak256": "0xf74120232baf3b69e5f3af0cee2e22a88718bb23747f577433b362222efb19b1",
        "urls": [
          "bzz-raw://c053cd5a9605a26dbebb2497ba4f6e348b4efe0ea6a1f4ea3e66fec252ff630c",
          "dweb:/ipfs/QmesTNpmnMhDngxgcdh5y2BEXAn9rwPSWMvHAyMvUsu9Lq"
        ],
        "license": "MIT"
      },
      "src/interfaces/INullifierSet.sol": {
        "keccak256": "0x263ee8c0961ea5aef2a7e12e8e4ff21c7f86eccb80d62cd317f5545265a510df",
        "urls": [
          "bzz-raw://6df48f0e97e493be9877180ab7b22a9b6ec14d674204535881250c99f6919fb1",
          "dweb:/ipfs/Qma2DSoGrmYWxpiTDqxuB1Wir3txbjL5PxPGLUSRNPFUqs"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolAdapter.sol": {
        "keccak256": "0x888d92cd3637520b2e9a787ab1f07b70417dc5adb73dadd6ad6689dfc6c1f452",
        "urls": [
          "bzz-raw://c9a6b37166a5790f374c8a18ae5ddd28c481db6ce28105c45c8ff795d4cb571b",
          "dweb:/ipfs/QmQRLg7YSJY75GK1oNieRmjKVFcKKcxMCzHQCEcwRc4NVr"
        ],
        "license": "MIT"
      },
      "src/libs/ComputableComponents.sol": {
        "keccak256": "0x1f7efa50202b50bb1ddd8f073d6b9904334fac280a6acb09d17f3e8fcabab1a4",
        "urls": [
          "bzz-raw://f9219757775f1086a37be8406ee31fdb51c0488d91b55056d75088eea89beb70",
          "dweb:/ipfs/QmTgtcdTntvrdxj1TGMm6aXH2QgJ7X6V5YpBpc5s5Hp7rC"
        ],
        "license": "MIT"
      },
      "src/libs/EllipticCurveK256.sol": {
        "keccak256": "0x5e683c6c694135a244b938f680b33e3d7380b10a2aa1ddd1d812dea88c0c5857",
        "urls": [
          "bzz-raw://d6161ad3e7f3887859e67393ddfd87701124acbaced24763339a65b165882385",
          "dweb:/ipfs/QmaoXZCMbnjgdarBZkU3CwvNhbriaE3TQZfX5sUR8ajc3j"
        ],
        "license": "MIT"
      },
      "src/libs/MerkleTree.sol": {
        "keccak256": "0x536b05191ae1e1881e2896f8aade132dc4fcb28fefc3132c755d854bb02aa6d1",
        "urls": [
          "bzz-raw://17000b942aa8d78bf4ccc3b458d7c53d4ce440fcfae7e8d381511ffd05eeb850",
          "dweb:/ipfs/QmYjwhK4DnobCBuFN53uXpQRBzWSb3C9Ld3yfqpgkSdVBC"
        ],
        "license": "MIT"
      },
      "src/libs/SHA256.sol": {
        "keccak256": "0x85cda44e257c0d69a4e9a5d5300154f7eb0787d40580c263e0a6517717c17cb9",
        "urls": [
          "bzz-raw://5c2d664f1b843c9068a4fae25cf44355cbc0ab3e095b55eddfe3105836dd5982",
          "dweb:/ipfs/QmQg4GXwtL6hxQQa7jjepj6Sq65d89CD6awx6R7PwVY42u"
        ],
        "license": "MIT"
      },
      "src/proving/Delta.sol": {
        "keccak256": "0x10e673c790d62939c5d20b5bbb84599915a38353a2ffc451a842a445ed9946ef",
        "urls": [
          "bzz-raw://d0c891184204efb187e5108e6d37cc4c53de01be981c14b876b1978891bac4d2",
          "dweb:/ipfs/QmXuUtt6rn5qw3fvS5jFdY5qUo21ciSQgfbWNZxcTGJfkd"
        ],
        "license": "MIT"
      },
      "src/proving/Logic.sol": {
        "keccak256": "0x3fa3b748b7bf36c9766679f2cf273e00f19b0f338de39b3cf94fa888647b0405",
        "urls": [
          "bzz-raw://cf6023a2d1f3846b8d678b738acfe6c28ced7f8ce268ae4499bd814297b7f22c",
          "dweb:/ipfs/QmTbtrGKsVGNpTaRmTBw3awAE5T2c4mu4bwjbD9SnGXXgU"
        ],
        "license": "MIT"
      },
      "src/state/BlobStorage.sol": {
        "keccak256": "0x11ef2ffeaa43a67f8beaf48b4fed2721052b96c01b611bd259fab8907f4d05ec",
        "urls": [
          "bzz-raw://3c4a32137ed9dcbacf6eef632814840a24eda4f889fbdfeec1edc879df458b9b",
          "dweb:/ipfs/QmQqvnA5VVXSG5fcsWAcu1UVXE8fQL4HsKN6royU95ruD3"
        ],
        "license": "MIT"
      },
      "src/state/CommitmentAccumulator.sol": {
        "keccak256": "0xdfd257f017db48747f2b7d6dad897bcd11c4a2c6949cdc343cd969848d284414",
        "urls": [
          "bzz-raw://c260e1f46e2355dcc21832aa2920103f563fa02c8edf803762dbcaeed88683c9",
          "dweb:/ipfs/QmYs9P6yrEMzRCLyDPJDAKGdsBRJhoNDh6xHArJpAM9pog"
        ],
        "license": "MIT"
      },
      "src/state/NullifierSet.sol": {
        "keccak256": "0x8314d0e2b8115d36a89fc1b0dd3eb17f5fef8b70831a374425c32d2f6c2f1a90",
        "urls": [
          "bzz-raw://5a0d0f5e1b4f466fc95091d7c45199dc1caf564c4d48e30fd229c0aef5312d05",
          "dweb:/ipfs/QmX9pGdMrz9ZqR98W3uxLRmiE3Esm7YQNvLxNDcC82H3oT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 41
}